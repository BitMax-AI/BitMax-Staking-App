{"id":"67206d651c99e2f83adccca6a5003d2c","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/RewardToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\n\r\ncontract RewardToken is ERC20, Ownable, ERC20Permit {\r\n    constructor(string memory name, string memory symbol)\r\n        ERC20(name, symbol)\r\n        Ownable(msg.sender)\r\n        ERC20Permit(name)\r\n    {}\r\n\r\n    function mint(address to, uint256 amount) public {\r\n        _mint(to, amount);\r\n    }\r\n}"},"contracts/StakingDapp.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ninterface IRewardToken is IERC20 {\r\n    function mint(address to, uint256 amount) external;\r\n}\r\n\r\ncontract StakingDapp is Ownable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public stakingToken;\r\n    IRewardToken public rewardToken;\r\n\r\n    struct Stake {\r\n        uint256 amount;\r\n        uint256 lastRewardTime; // Track the last time rewards were calculated\r\n    }\r\n\r\n    mapping(address => Stake) public stakes;\r\n    mapping(address => uint256) public rewardBalance;\r\n\r\n    uint256 public constant REWARD_AMOUNT = 5; // Reward tokens per interval\r\n    uint256 public constant REWARD_INTERVAL = 10; // 10 seconds per reward interval\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Unstaked(address indexed user, uint256 amount);\r\n    event RewardClaimed(address indexed user, uint256 amount);\r\n\r\n    constructor(address _stakingToken, address _rewardToken) Ownable(msg.sender) {\r\n        require(_stakingToken != address(0) && _rewardToken != address(0), \"Invalid token addresses\");\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardToken = IRewardToken(_rewardToken);\r\n    }\r\n\r\n    function getStakedAmount(address user) external view returns (uint256) {\r\n        return stakes[user].amount;\r\n    }\r\n\r\n\r\n    function stake(uint256 amount) external {\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        \r\n        if (stakes[msg.sender].amount > 0) {\r\n            // Calculate and update reward balance before changing the stake\r\n            uint256 pendingReward = calculateReward(msg.sender);\r\n            rewardBalance[msg.sender] += pendingReward;\r\n        }\r\n        \r\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        \r\n        // Update the stake amount and last reward time\r\n        stakes[msg.sender].amount += amount;\r\n        stakes[msg.sender].lastRewardTime = block.timestamp;\r\n        \r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function unstake(uint256 amount) external {\r\n        require(stakes[msg.sender].amount >= amount, \"Insufficient balance\");\r\n        \r\n        uint256 pendingReward = calculateReward(msg.sender);\r\n        rewardBalance[msg.sender] += pendingReward;\r\n\r\n        // Update the stake amount and last reward time\r\n        stakes[msg.sender].amount -= amount;\r\n        stakes[msg.sender].lastRewardTime = block.timestamp;\r\n        \r\n        stakingToken.safeTransfer(msg.sender, amount);\r\n        \r\n        emit Unstaked(msg.sender, amount);\r\n    }\r\n\r\n    function claimReward() external {\r\n        uint256 reward = calculateReward(msg.sender) + rewardBalance[msg.sender];\r\n        require(reward > 0, \"No reward available\");\r\n\r\n        // Reset reward data\r\n        rewardBalance[msg.sender] = 0;\r\n        stakes[msg.sender].lastRewardTime = block.timestamp;\r\n        \r\n        // Mint reward tokens\r\n        rewardToken.mint(msg.sender, reward);\r\n        \r\n        emit RewardClaimed(msg.sender, reward);\r\n    }\r\n\r\n    function calculateReward(address user) internal view returns (uint256) {\r\n        Stake memory userStake = stakes[user];\r\n        if (userStake.amount == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 currentTime = block.timestamp;\r\n        uint256 timeSinceLastReward = currentTime - userStake.lastRewardTime;\r\n        uint256 intervalsPassed = timeSinceLastReward / REWARD_INTERVAL;\r\n        // Calculate reward based on intervals passed and staked amount\r\n        return intervalsPassed * REWARD_AMOUNT * userStake.amount; // 1e18; // Assumes REWARD_AMOUNT and staked amount are in the same decimal place\r\n    }\r\n    function getRewardAmount(address user) external view returns (uint256) {\r\n        uint256 reward = calculateReward(user);\r\n        return reward;\r\n    }\r\n\r\n}\r\n"},"contracts/StakingToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\n\r\ncontract StakingToken is ERC20, Ownable, ERC20Permit {\r\n    constructor(string memory name, string memory symbol)\r\n        ERC20(name, symbol)\r\n        Ownable(msg.sender)\r\n        ERC20Permit(name)\r\n    {}\r\n\r\n    function mint(address to, uint256 amount) public {\r\n        require(amount <= 100 * 10 ** 18, \"amount must be less than 100\");\r\n        _mint(to, amount);\r\n    }\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1647],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1648,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1647,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1647],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[3969],"IERC20":[992]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":3969,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,3969,992],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[926,935]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3969]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":3970,"src":"132:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"140:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[992]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":993,"src":"131:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[262]},"id":263,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":262,"linearizedBaseContracts":[262],"name":"IERC5267","nameLocation":"143:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"158:84:4","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":242,"name":"EIP712DomainChanged","nameLocation":"253:19:4","nodeType":"EventDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"272:2:4"},"src":"247:28:4"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"281:140:4","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":261,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:4","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"447:2:4"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"fields","nameLocation":"517:6:4","nodeType":"VariableDeclaration","scope":261,"src":"510:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":245,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"name","nameLocation":"551:4:4","nodeType":"VariableDeclaration","scope":261,"src":"537:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":247,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"version","nameLocation":"583:7:4","nodeType":"VariableDeclaration","scope":261,"src":"569:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":249,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"chainId","nameLocation":"612:7:4","nodeType":"VariableDeclaration","scope":261,"src":"604:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:4","nodeType":"VariableDeclaration","scope":261,"src":"633:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"salt","nameLocation":"680:4:4","nodeType":"VariableDeclaration","scope":261,"src":"672:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"extensions","nameLocation":"715:10:4","nodeType":"VariableDeclaration","scope":261,"src":"698:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":258,"nodeType":"ArrayTypeName","src":"698:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:4"},"scope":262,"src":"426:310:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":263,"src":"133:605:4","usedErrors":[],"usedEvents":[242]}],"src":"107:632:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[399],"IERC20Errors":[304],"IERC721Errors":[352]},"id":400,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":264,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":304,"linearizedBaseContracts":[304],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":274,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":274,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":274,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":274,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":279,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":279,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":284,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":284,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":293,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":293,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":293,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":293,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":298,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":298,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":303,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":303,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":400,"src":"280:1764:5","usedErrors":[274,279,284,293,298,303],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":352,"linearizedBaseContracts":[352],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":310,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":310,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":315,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":315,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":324,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":324,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":324,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":324,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":329,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":329,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":334,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":334,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":341,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":341,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":341,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":346,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":346,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":351,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":351,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":400,"src":"2190:2092:5","usedErrors":[310,315,324,329,334,341,346,351],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":399,"linearizedBaseContracts":[399],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":364,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":364,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":364,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":364,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":364,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":369,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":369,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":374,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":374,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":381,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":381,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":381,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":386,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":386,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":391,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":391,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":398,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":398,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":398,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":400,"src":"4430:2107:5","usedErrors":[364,369,374,381,386,391,398],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1647],"ERC20":[914],"IERC20":[992],"IERC20Errors":[304],"IERC20Metadata":[1172]},"id":915,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":401,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":993,"src":"131:36:6","symbolAliases":[{"foreign":{"id":402,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"139:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":1173,"src":"168:63:6","symbolAliases":[{"foreign":{"id":404,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"176:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":1648,"src":"232:48:6","symbolAliases":[{"foreign":{"id":406,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"240:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":400,"src":"281:65:6","symbolAliases":[{"foreign":{"id":408,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"289:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":411,"name":"Context","nameLocations":["1133:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1647,"src":"1133:7:6"},"id":412,"nodeType":"InheritanceSpecifier","src":"1133:7:6"},{"baseName":{"id":413,"name":"IERC20","nameLocations":["1142:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1142:6:6"},"id":414,"nodeType":"InheritanceSpecifier","src":"1142:6:6"},{"baseName":{"id":415,"name":"IERC20Metadata","nameLocations":["1150:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1172,"src":"1150:14:6"},"id":416,"nodeType":"InheritanceSpecifier","src":"1150:14:6"},{"baseName":{"id":417,"name":"IERC20Errors","nameLocations":["1166:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":304,"src":"1166:12:6"},"id":418,"nodeType":"InheritanceSpecifier","src":"1166:12:6"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"348:757:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":914,"linearizedBaseContracts":[914,304,1172,992,1647],"name":"ERC20","nameLocation":"1124:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":422,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:6","nodeType":"VariableDeclaration","scope":914,"src":"1185:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":421,"keyName":"account","keyNameLocation":"1201:7:6","keyType":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":428,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:6","nodeType":"VariableDeclaration","scope":914,"src":"1245:83:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":427,"keyName":"account","keyNameLocation":"1261:7:6","keyType":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":426,"keyName":"spender","keyNameLocation":"1288:7:6","keyType":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":430,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:6","nodeType":"VariableDeclaration","scope":914,"src":"1335:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":432,"mutability":"mutable","name":"_name","nameLocation":"1385:5:6","nodeType":"VariableDeclaration","scope":914,"src":"1370:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":431,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":434,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:6","nodeType":"VariableDeclaration","scope":914,"src":"1396:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":433,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":450,"nodeType":"Block","src":"1657:57:6","statements":[{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":442,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1667:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":443,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"1675:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":445,"nodeType":"ExpressionStatement","src":"1667:13:6"},{"expression":{"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":446,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1690:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":447,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"1700:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":449,"nodeType":"ExpressionStatement","src":"1690:17:6"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"1425:171:6","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":451,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"name_","nameLocation":"1627:5:6","nodeType":"VariableDeclaration","scope":451,"src":"1613:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":436,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:6","nodeType":"VariableDeclaration","scope":451,"src":"1634:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:6"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"1657:0:6"},"scope":914,"src":"1601:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1159],"body":{"id":459,"nodeType":"Block","src":"1839:29:6","statements":[{"expression":{"id":457,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1856:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":456,"id":458,"nodeType":"Return","src":"1849:12:6"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"1720:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:6","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"1792:2:6"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"1824:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":454,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:6"},"scope":914,"src":"1779:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1165],"body":{"id":468,"nodeType":"Block","src":"2043:31:6","statements":[{"expression":{"id":466,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2060:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":465,"id":467,"nodeType":"Return","src":"2053:14:6"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"1874:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":469,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:6","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"1996:2:6"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":469,"src":"2028:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":463,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:6"},"scope":914,"src":"1981:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1171],"body":{"id":477,"nodeType":"Block","src":"2763:26:6","statements":[{"expression":{"hexValue":"3138","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":474,"id":476,"nodeType":"Return","src":"2773:9:6"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"2080:622:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":478,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:6","nodeType":"FunctionDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[],"src":"2724:2:6"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":478,"src":"2756:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":472,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:6"},"scope":914,"src":"2707:82:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[941],"body":{"id":486,"nodeType":"Block","src":"2910:36:6","statements":[{"expression":{"id":484,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2927:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":483,"id":485,"nodeType":"Return","src":"2920:19:6"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2795:49:6","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":487,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:6","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"2869:2:6"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":487,"src":"2901:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:6"},"scope":914,"src":"2849:97:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[949],"body":{"id":499,"nodeType":"Block","src":"3078:42:6","statements":[{"expression":{"baseExpression":{"id":495,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"3095:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":497,"indexExpression":{"id":496,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3105:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":494,"id":498,"nodeType":"Return","src":"3088:25:6"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"2952:47:6","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:6","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"account","nameLocation":"3031:7:6","nodeType":"VariableDeclaration","scope":500,"src":"3023:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:6"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"3069:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:6"},"scope":914,"src":"3004:116:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[959],"body":{"id":523,"nodeType":"Block","src":"3390:103:6","statements":[{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"owner","nameLocation":"3408:5:6","nodeType":"VariableDeclaration","scope":523,"src":"3400:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":512,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"3416:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:6"},{"expression":{"arguments":[{"id":516,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3448:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3455:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3459:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":515,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"3438:27:6"},{"expression":{"hexValue":"74727565","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":509,"id":522,"nodeType":"Return","src":"3475:11:6"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"3126:184:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":524,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:6","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"to","nameLocation":"3341:2:6","nodeType":"VariableDeclaration","scope":524,"src":"3333:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"value","nameLocation":"3353:5:6","nodeType":"VariableDeclaration","scope":524,"src":"3345:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:6"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":524,"src":"3384:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":507,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:6"},"scope":914,"src":"3315:178:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[969],"body":{"id":540,"nodeType":"Block","src":"3640:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":534,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3657:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":536,"indexExpression":{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3669:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":538,"indexExpression":{"id":537,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3676:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":533,"id":539,"nodeType":"Return","src":"3650:34:6"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"3499:47:6","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:6","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"3578:5:6","nodeType":"VariableDeclaration","scope":541,"src":"3570:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"3593:7:6","nodeType":"VariableDeclaration","scope":541,"src":"3585:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:6"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"3631:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:6"},"scope":914,"src":"3551:140:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[979],"body":{"id":564,"nodeType":"Block","src":"4077:107:6","statements":[{"assignments":[552],"declarations":[{"constant":false,"id":552,"mutability":"mutable","name":"owner","nameLocation":"4095:5:6","nodeType":"VariableDeclaration","scope":564,"src":"4087:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":555,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":553,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"4103:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:6"},{"expression":{"arguments":[{"id":557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"4134:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":558,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4141:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"4150:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":556,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":805,"src":"4125:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":561,"nodeType":"ExpressionStatement","src":"4125:31:6"},{"expression":{"hexValue":"74727565","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":550,"id":563,"nodeType":"Return","src":"4166:11:6"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"3697:296:6","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":565,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:6","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"spender","nameLocation":"4023:7:6","nodeType":"VariableDeclaration","scope":565,"src":"4015:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"value","nameLocation":"4040:5:6","nodeType":"VariableDeclaration","scope":565,"src":"4032:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:6"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"4071:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":548,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:6"},"scope":914,"src":"3998:186:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[991],"body":{"id":596,"nodeType":"Block","src":"4869:151:6","statements":[{"assignments":[578],"declarations":[{"constant":false,"id":578,"mutability":"mutable","name":"spender","nameLocation":"4887:7:6","nodeType":"VariableDeclaration","scope":596,"src":"4879:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":581,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":579,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"4897:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:6"},{"expression":{"arguments":[{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4935:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"4941:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4950:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":582,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"4919:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"4919:37:6"},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4976:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4982:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4986:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":588,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4966:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"4966:26:6"},{"expression":{"hexValue":"74727565","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":576,"id":595,"nodeType":"Return","src":"5002:11:6"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"4190:581:6","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:6","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"from","nameLocation":"4806:4:6","nodeType":"VariableDeclaration","scope":597,"src":"4798:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"to","nameLocation":"4820:2:6","nodeType":"VariableDeclaration","scope":597,"src":"4812:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"value","nameLocation":"4832:5:6","nodeType":"VariableDeclaration","scope":597,"src":"4824:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:6"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"4863:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":574,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:6"},"scope":914,"src":"4776:244:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":643,"nodeType":"Block","src":"5462:231:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5476:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:6","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":621,"nodeType":"IfStatement","src":"5472:86:6","trueBody":{"id":620,"nodeType":"Block","src":"5496:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:6","typeDescriptions":{}}},"id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":613,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"5517:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"RevertStatement","src":"5510:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5571:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:6","typeDescriptions":{}}},"id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"5567:86:6","trueBody":{"id":635,"nodeType":"Block","src":"5589:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:6","typeDescriptions":{}}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":628,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5610:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"5603:39:6"}]}},{"expression":{"arguments":[{"id":638,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5670:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5676:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5680:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":637,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5662:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"5662:24:6"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"5026:362:6","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:6","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"5420:4:6","nodeType":"VariableDeclaration","scope":644,"src":"5412:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"5434:2:6","nodeType":"VariableDeclaration","scope":644,"src":"5426:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"value","nameLocation":"5446:5:6","nodeType":"VariableDeclaration","scope":644,"src":"5438:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:6"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"5462:0:6"},"scope":914,"src":"5393:300:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":720,"nodeType":"Block","src":"6083:1032:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6097:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:6","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":691,"nodeType":"Block","src":"6271:362:6","statements":[{"assignments":[666],"declarations":[{"constant":false,"id":666,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:6","nodeType":"VariableDeclaration","scope":691,"src":"6285:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":670,"initialValue":{"baseExpression":{"id":667,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6307:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":669,"indexExpression":{"id":668,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6317:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":671,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6340:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6354:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":681,"nodeType":"IfStatement","src":"6336:115:6","trueBody":{"id":680,"nodeType":"Block","src":"6361:90:6","statements":[{"errorCall":{"arguments":[{"id":675,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6411:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6417:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6430:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":674,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6386:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"RevertStatement","src":"6379:57:6"}]}},{"id":690,"nodeType":"UncheckedBlock","src":"6464:159:6","statements":[{"expression":{"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":682,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6571:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":684,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6581:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":685,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6589:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6603:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":689,"nodeType":"ExpressionStatement","src":"6571:37:6"}]}]},"id":692,"nodeType":"IfStatement","src":"6093:540:6","trueBody":{"id":664,"nodeType":"Block","src":"6117:148:6","statements":[{"expression":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":660,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6233:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6249:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":663,"nodeType":"ExpressionStatement","src":"6233:21:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6647:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:6","typeDescriptions":{}}},"id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":712,"nodeType":"Block","src":"6862:206:6","statements":[{"id":711,"nodeType":"UncheckedBlock","src":"6876:182:6","statements":[{"expression":{"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":705,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7021:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":707,"indexExpression":{"id":706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"7031:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"7038:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":710,"nodeType":"ExpressionStatement","src":"7021:22:6"}]}]},"id":713,"nodeType":"IfStatement","src":"6643:425:6","trueBody":{"id":704,"nodeType":"Block","src":"6665:191:6","statements":[{"id":703,"nodeType":"UncheckedBlock","src":"6679:167:6","statements":[{"expression":{"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":699,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6810:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6826:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":702,"nodeType":"ExpressionStatement","src":"6810:21:6"}]}]}},{"eventCall":{"arguments":[{"id":715,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"7092:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"7098:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"7102:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":714,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"7083:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"EmitStatement","src":"7078:30:6"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"5699:304:6","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":721,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:6","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"from","nameLocation":"6033:4:6","nodeType":"VariableDeclaration","scope":721,"src":"6025:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"to","nameLocation":"6047:2:6","nodeType":"VariableDeclaration","scope":721,"src":"6039:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"value","nameLocation":"6059:5:6","nodeType":"VariableDeclaration","scope":721,"src":"6051:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:6"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"6083:0:6"},"scope":914,"src":"6008:1107:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":753,"nodeType":"Block","src":"7514:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":729,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7528:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:6","typeDescriptions":{}}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":743,"nodeType":"IfStatement","src":"7524:91:6","trueBody":{"id":742,"nodeType":"Block","src":"7551:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:6","typeDescriptions":{}}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":735,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"7572:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"RevertStatement","src":"7565:39:6"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:6","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7644:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7653:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":744,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"7624:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":752,"nodeType":"ExpressionStatement","src":"7624:35:6"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"7121:332:6","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:6","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"account","nameLocation":"7481:7:6","nodeType":"VariableDeclaration","scope":754,"src":"7473:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"value","nameLocation":"7498:5:6","nodeType":"VariableDeclaration","scope":754,"src":"7490:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:6"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"7514:0:6"},"scope":914,"src":"7458:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":786,"nodeType":"Block","src":"8040:150:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8054:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:6","typeDescriptions":{}}},"id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":776,"nodeType":"IfStatement","src":"8050:89:6","trueBody":{"id":775,"nodeType":"Block","src":"8077:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:6","typeDescriptions":{}}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":768,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"8098:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":774,"nodeType":"RevertStatement","src":"8091:37:6"}]}},{"expression":{"arguments":[{"id":778,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8156:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:6","typeDescriptions":{}}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"8177:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"8148:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"ExpressionStatement","src":"8148:35:6"}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"7672:307:6","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":787,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:6","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"account","nameLocation":"8007:7:6","nodeType":"VariableDeclaration","scope":787,"src":"7999:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"value","nameLocation":"8024:5:6","nodeType":"VariableDeclaration","scope":787,"src":"8016:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:6"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"8040:0:6"},"scope":914,"src":"7984:206:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"8800:54:6","statements":[{"expression":{"arguments":[{"id":798,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"8819:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":799,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8826:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"8835:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":797,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":865,"src":"8810:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"8810:37:6"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"8196:525:6","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:6","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"owner","nameLocation":"8752:5:6","nodeType":"VariableDeclaration","scope":805,"src":"8744:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"spender","nameLocation":"8767:7:6","nodeType":"VariableDeclaration","scope":805,"src":"8759:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"value","nameLocation":"8784:5:6","nodeType":"VariableDeclaration","scope":805,"src":"8776:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:6"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"8800:0:6"},"scope":914,"src":"8726:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":864,"nodeType":"Block","src":"9799:334:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":817,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"9813:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:6","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":831,"nodeType":"IfStatement","src":"9809:89:6","trueBody":{"id":830,"nodeType":"Block","src":"9834:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:6","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":823,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9855:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":829,"nodeType":"RevertStatement","src":"9848:39:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":832,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"9911:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:6","typeDescriptions":{}}},"id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":846,"nodeType":"IfStatement","src":"9907:90:6","trueBody":{"id":845,"nodeType":"Block","src":"9934:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:6","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":838,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"9955:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"RevertStatement","src":"9948:38:6"}]}},{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":847,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"10006:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":850,"indexExpression":{"id":848,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"10018:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":851,"indexExpression":{"id":849,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"10025:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"10036:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"nodeType":"ExpressionStatement","src":"10006:35:6"},{"condition":{"id":855,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"10055:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":863,"nodeType":"IfStatement","src":"10051:76:6","trueBody":{"id":862,"nodeType":"Block","src":"10066:61:6","statements":[{"eventCall":{"arguments":[{"id":857,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"10094:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"10101:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"10110:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":856,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"10085:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"EmitStatement","src":"10080:36:6"}]}}]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"8860:836:6","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":865,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:6","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"owner","nameLocation":"9727:5:6","nodeType":"VariableDeclaration","scope":865,"src":"9719:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"spender","nameLocation":"9742:7:6","nodeType":"VariableDeclaration","scope":865,"src":"9734:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"value","nameLocation":"9759:5:6","nodeType":"VariableDeclaration","scope":865,"src":"9751:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:6","nodeType":"VariableDeclaration","scope":865,"src":"9766:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":813,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:6"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"9799:0:6"},"scope":914,"src":"9701:432:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":912,"nodeType":"Block","src":"10504:387:6","statements":[{"assignments":[876],"declarations":[{"constant":false,"id":876,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:6","nodeType":"VariableDeclaration","scope":912,"src":"10514:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":881,"initialValue":{"arguments":[{"id":878,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"10551:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10558:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":877,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"10541:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10580:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:6","memberName":"max","nodeType":"MemberAccess","src":"10599:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"nodeType":"IfStatement","src":"10576:309:6","trueBody":{"id":910,"nodeType":"Block","src":"10618:267:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":889,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10636:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10655:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":899,"nodeType":"IfStatement","src":"10632:130:6","trueBody":{"id":898,"nodeType":"Block","src":"10662:100:6","statements":[{"errorCall":{"arguments":[{"id":893,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10714:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10723:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10741:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"10687:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"RevertStatement","src":"10680:67:6"}]}},{"id":909,"nodeType":"UncheckedBlock","src":"10775:100:6","statements":[{"expression":{"arguments":[{"id":901,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"10812:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":902,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10819:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":903,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10828:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10847:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":900,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":865,"src":"10803:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"ExpressionStatement","src":"10803:57:6"}]}]}}]},"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"10139:271:6","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":913,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"owner","nameLocation":"10448:5:6","nodeType":"VariableDeclaration","scope":913,"src":"10440:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"spender","nameLocation":"10463:7:6","nodeType":"VariableDeclaration","scope":913,"src":"10455:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"value","nameLocation":"10480:5:6","nodeType":"VariableDeclaration","scope":913,"src":"10472:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:6"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"10504:0:6"},"scope":914,"src":"10415:476:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":915,"src":"1106:9787:6","usedErrors":[274,279,284,293,298,303],"usedEvents":[926,935]}],"src":"105:10789:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[992]},"id":993,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":916,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"132:71:7","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":992,"linearizedBaseContracts":[992],"name":"IERC20","nameLocation":"214:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"227:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":926,"name":"Transfer","nameLocation":"396:8:7","nodeType":"EventDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:7","nodeType":"VariableDeclaration","scope":926,"src":"405:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:7","nodeType":"VariableDeclaration","scope":926,"src":"427:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:7","nodeType":"VariableDeclaration","scope":926,"src":"447:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:7"},"src":"390:72:7"},{"anonymous":false,"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"468:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":935,"name":"Approval","nameLocation":"627:8:7","nodeType":"EventDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:7","nodeType":"VariableDeclaration","scope":935,"src":"636:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":931,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:7","nodeType":"VariableDeclaration","scope":935,"src":"659:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:7","nodeType":"VariableDeclaration","scope":935,"src":"684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:7"},"src":"621:78:7"},{"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"705:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":941,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:7","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"795:2:7"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"821:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:7"},"scope":992,"src":"775:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"836:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":949,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":949,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":992,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"986:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":959,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:7","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"to","nameLocation":"1230:2:7","nodeType":"VariableDeclaration","scope":959,"src":"1222:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"value","nameLocation":"1242:5:7","nodeType":"VariableDeclaration","scope":959,"src":"1234:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:7"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"1267:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":956,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:7"},"scope":992,"src":"1204:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"1279:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":969,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:7","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"owner","nameLocation":"1575:5:7","nodeType":"VariableDeclaration","scope":969,"src":"1567:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"spender","nameLocation":"1590:7:7","nodeType":"VariableDeclaration","scope":969,"src":"1582:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:7"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":969,"src":"1622:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:7"},"scope":992,"src":"1548:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"1637:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":979,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:7","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"spender","nameLocation":"2334:7:7","nodeType":"VariableDeclaration","scope":979,"src":"2326:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"value","nameLocation":"2351:5:7","nodeType":"VariableDeclaration","scope":979,"src":"2343:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:7"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":979,"src":"2376:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":976,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:7"},"scope":992,"src":"2309:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"2388:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":991,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:7","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"from","nameLocation":"2720:4:7","nodeType":"VariableDeclaration","scope":991,"src":"2712:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"to","nameLocation":"2734:2:7","nodeType":"VariableDeclaration","scope":991,"src":"2726:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"value","nameLocation":"2746:5:7","nodeType":"VariableDeclaration","scope":991,"src":"2738:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:7"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"2771:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":988,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:7"},"scope":992,"src":"2690:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":993,"src":"204:2575:7","usedErrors":[],"usedEvents":[926,935]}],"src":"106:2674:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3656],"EIP712":[3883],"ERC20":[914],"ERC20Permit":[1146],"IERC20Permit":[1208],"Nonces":[1715]},"id":1147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":994,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":996,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":1209,"src":"148:48:8","symbolAliases":[{"foreign":{"id":995,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"156:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":915,"src":"197:35:8","symbolAliases":[{"foreign":{"id":997,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"205:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":3657,"src":"233:60:8","symbolAliases":[{"foreign":{"id":999,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"241:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":3884,"src":"294:62:8","symbolAliases":[{"foreign":{"id":1001,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"302:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":1716,"src":"357:49:8","symbolAliases":[{"foreign":{"id":1003,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"365:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1006,"name":"ERC20","nameLocations":["931:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"931:5:8"},"id":1007,"nodeType":"InheritanceSpecifier","src":"931:5:8"},{"baseName":{"id":1008,"name":"IERC20Permit","nameLocations":["938:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1208,"src":"938:12:8"},"id":1009,"nodeType":"InheritanceSpecifier","src":"938:12:8"},{"baseName":{"id":1010,"name":"EIP712","nameLocations":["952:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3883,"src":"952:6:8"},"id":1011,"nodeType":"InheritanceSpecifier","src":"952:6:8"},{"baseName":{"id":1012,"name":"Nonces","nameLocations":["960:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1715,"src":"960:6:8"},"id":1013,"nodeType":"InheritanceSpecifier","src":"960:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"408:489:8","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1146,"linearizedBaseContracts":[1146,1715,3883,262,1208,914,304,1172,992,1647],"name":"ERC20Permit","nameLocation":"916:11:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1018,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:8","nodeType":"VariableDeclaration","scope":1146,"src":"973:146:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1015,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"1126:52:8","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1023,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:8","nodeType":"ErrorDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:8","nodeType":"VariableDeclaration","scope":1023,"src":"1213:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:8"},"src":"1183:48:8"},{"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"1237:45:8","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1030,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:8","nodeType":"ErrorDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"signer","nameLocation":"1322:6:8","nodeType":"VariableDeclaration","scope":1030,"src":"1314:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"owner","nameLocation":"1338:5:8","nodeType":"VariableDeclaration","scope":1030,"src":"1330:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:8"},"src":"1287:58:8"},{"body":{"id":1040,"nodeType":"Block","src":"1627:2:8","statements":[]},"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"1351:221:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1041,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1036,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"1616:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1038,"kind":"baseConstructorSpecifier","modifierName":{"id":1035,"name":"EIP712","nameLocations":["1609:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3883,"src":"1609:6:8"},"nodeType":"ModifierInvocation","src":"1609:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"name","nameLocation":"1603:4:8","nodeType":"VariableDeclaration","scope":1041,"src":"1589:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1032,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:8"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"1627:0:8"},"scope":1146,"src":"1577:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1193],"body":{"id":1117,"nodeType":"Block","src":"1872:483:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1059,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1061,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"1904:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"1882:97:8","trueBody":{"id":1067,"nodeType":"Block","src":"1914:65:8","statements":[{"errorCall":{"arguments":[{"id":1064,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"1959:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1063,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1935:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"RevertStatement","src":"1928:40:8"}]}},{"assignments":[1070],"declarations":[{"constant":false,"id":1070,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:8","nodeType":"VariableDeclaration","scope":1117,"src":"1989:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1084,"initialValue":{"arguments":[{"arguments":[{"id":1074,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"2031:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1075,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2048:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1076,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2055:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2064:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1079,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2081:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1078,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"2071:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1081,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"2089:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1072,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1071,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:8"},{"assignments":[1086],"declarations":[{"constant":false,"id":1086,"mutability":"mutable","name":"hash","nameLocation":"2118:4:8","nodeType":"VariableDeclaration","scope":1117,"src":"2110:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1090,"initialValue":{"arguments":[{"id":1088,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2142:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1087,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"2125:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:8"},{"assignments":[1092],"declarations":[{"constant":false,"id":1092,"mutability":"mutable","name":"signer","nameLocation":"2172:6:8","nodeType":"VariableDeclaration","scope":1117,"src":"2164:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1100,"initialValue":{"arguments":[{"id":1095,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2195:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1096,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2201:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1097,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2204:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1098,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2207:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1093,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"2181:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3656_$","typeString":"type(library ECDSA)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3606,"src":"2181:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1101,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2223:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1102,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2233:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1110,"nodeType":"IfStatement","src":"2219:88:8","trueBody":{"id":1109,"nodeType":"Block","src":"2240:67:8","statements":[{"errorCall":{"arguments":[{"id":1105,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2282:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1106,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2290:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1104,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2261:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"RevertStatement","src":"2254:42:8"}]}},{"expression":{"arguments":[{"id":1112,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2326:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2333:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2342:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1111,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":805,"src":"2317:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"2317:31:8"}]},"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"1635:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:8","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"owner","nameLocation":"1716:5:8","nodeType":"VariableDeclaration","scope":1118,"src":"1708:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"spender","nameLocation":"1739:7:8","nodeType":"VariableDeclaration","scope":1118,"src":"1731:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"value","nameLocation":"1764:5:8","nodeType":"VariableDeclaration","scope":1118,"src":"1756:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:8","nodeType":"VariableDeclaration","scope":1118,"src":"1779:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"v","nameLocation":"1811:1:8","nodeType":"VariableDeclaration","scope":1118,"src":"1805:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1051,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"r","nameLocation":"1830:1:8","nodeType":"VariableDeclaration","scope":1118,"src":"1822:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"s","nameLocation":"1849:1:8","nodeType":"VariableDeclaration","scope":1118,"src":"1841:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:8"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[],"src":"1872:0:8"},"scope":1146,"src":"1683:672:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1201,1674],"body":{"id":1134,"nodeType":"Block","src":"2509:43:8","statements":[{"expression":{"arguments":[{"id":1131,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2539:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1129,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1146_$","typeString":"type(contract super ERC20Permit)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:8","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1674,"src":"2526:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1128,"id":1133,"nodeType":"Return","src":"2519:26:8"}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"2361:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:8","nodeType":"FunctionDefinition","overrides":{"id":1125,"nodeType":"OverrideSpecifier","overrides":[{"id":1123,"name":"IERC20Permit","nameLocations":["2469:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1208,"src":"2469:12:8"},{"id":1124,"name":"Nonces","nameLocations":["2483:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1715,"src":"2483:6:8"}],"src":"2460:30:8"},"parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"owner","nameLocation":"2433:5:8","nodeType":"VariableDeclaration","scope":1135,"src":"2425:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:8"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"2500:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:8"},"scope":1146,"src":"2409:143:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1207],"body":{"id":1144,"nodeType":"Block","src":"2727:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1141,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"2744:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1140,"id":1143,"nodeType":"Return","src":"2737:27:8"}]},"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"2558:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:8","nodeType":"FunctionDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"2684:2:8"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1145,"src":"2718:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:8"},"scope":1146,"src":"2659:112:8","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1147,"src":"898:1875:8","usedErrors":[274,279,284,293,298,303,1023,1030,1657,1781,1783,3319,3324,3329],"usedEvents":[242,926,935]}],"src":"122:2652:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[992],"IERC20Metadata":[1172]},"id":1173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1148,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1173,"sourceUnit":993,"src":"151:37:9","symbolAliases":[{"foreign":{"id":1149,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1152,"name":"IERC20","nameLocations":["306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"306:6:9"},"id":1153,"nodeType":"InheritanceSpecifier","src":"306:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"190:87:9","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1172,"linearizedBaseContracts":[1172,992],"name":"IERC20Metadata","nameLocation":"288:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"319:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1159,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:9","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"391:2:9"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"417:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1156,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:9"},"scope":1172,"src":"378:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"438:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1165,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:9","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"514:2:9"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1165,"src":"540:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1162,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:9"},"scope":1172,"src":"499:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"561:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1171,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:9","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"648:2:9"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1171,"src":"674:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1168,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:9"},"scope":1172,"src":"631:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1173,"src":"278:405:9","usedErrors":[],"usedEvents":[926,935]}],"src":"125:559:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1208]},"id":1209,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"149:1965:10","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1208,"linearizedBaseContracts":[1208],"name":"IERC20Permit","nameLocation":"2125:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"2144:850:10","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1193,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:10","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"owner","nameLocation":"3032:5:10","nodeType":"VariableDeclaration","scope":1193,"src":"3024:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"spender","nameLocation":"3055:7:10","nodeType":"VariableDeclaration","scope":1193,"src":"3047:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"value","nameLocation":"3080:5:10","nodeType":"VariableDeclaration","scope":1193,"src":"3072:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:10","nodeType":"VariableDeclaration","scope":1193,"src":"3095:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"v","nameLocation":"3127:1:10","nodeType":"VariableDeclaration","scope":1193,"src":"3121:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1185,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"r","nameLocation":"3146:1:10","nodeType":"VariableDeclaration","scope":1193,"src":"3138:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"s","nameLocation":"3165:1:10","nodeType":"VariableDeclaration","scope":1193,"src":"3157:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:10"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"3181:0:10"},"scope":1208,"src":"2999:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"3188:294:10","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1201,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:10","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"owner","nameLocation":"3511:5:10","nodeType":"VariableDeclaration","scope":1201,"src":"3503:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:10"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1201,"src":"3541:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:10"},"scope":1208,"src":"3487:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1202,"nodeType":"StructuredDocumentation","src":"3556:128:10","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1207,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:10","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[],"src":"3767:2:10"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1207,"src":"3793:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:10"},"scope":1208,"src":"3742:60:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1209,"src":"2115:1689:10","usedErrors":[],"usedEvents":[]}],"src":"123:3682:10"},"id":10},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[992],"SafeERC20":[1617]},"id":1618,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1210,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1618,"sourceUnit":993,"src":"141:37:11","symbolAliases":[{"foreign":{"id":1211,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"149:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":1214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1618,"sourceUnit":230,"src":"179:58:11","symbolAliases":[{"foreign":{"id":1213,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"239:458:11","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1617,"linearizedBaseContracts":[1617],"name":"SafeERC20","nameLocation":"706:9:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"722:65:11","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1220,"name":"SafeERC20FailedOperation","nameLocation":"798:24:11","nodeType":"ErrorDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"token","nameLocation":"831:5:11","nodeType":"VariableDeclaration","scope":1220,"src":"823:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:11"},"src":"792:46:11"},{"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"844:71:11","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1229,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:11","nodeType":"ErrorDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"spender","nameLocation":"967:7:11","nodeType":"VariableDeclaration","scope":1229,"src":"959:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:11","nodeType":"VariableDeclaration","scope":1229,"src":"976:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:11","nodeType":"VariableDeclaration","scope":1229,"src":"1002:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:11"},"src":"920:109:11"},{"body":{"id":1252,"nodeType":"Block","src":"1291:88:11","statements":[{"expression":{"arguments":[{"id":1241,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"1321:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1244,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"1343:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":959,"src":"1343:14:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1246,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"1360:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"1364:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1242,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1240,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"1301:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1251,"nodeType":"ExpressionStatement","src":"1301:71:11"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"1035:179:11","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1253,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:11","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"token","nameLocation":"1248:5:11","nodeType":"VariableDeclaration","scope":1253,"src":"1241:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1232,"nodeType":"UserDefinedTypeName","pathNode":{"id":1231,"name":"IERC20","nameLocations":["1241:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1241:6:11"},"referencedDeclaration":992,"src":"1241:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"to","nameLocation":"1263:2:11","nodeType":"VariableDeclaration","scope":1253,"src":"1255:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"value","nameLocation":"1275:5:11","nodeType":"VariableDeclaration","scope":1253,"src":"1267:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:11"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"1291:0:11"},"scope":1617,"src":"1219:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1279,"nodeType":"Block","src":"1708:98:11","statements":[{"expression":{"arguments":[{"id":1267,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"1738:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1270,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"1760:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":991,"src":"1760:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1272,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"1781:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1273,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"1787:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"1791:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1268,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1266,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"1718:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1278,"nodeType":"ExpressionStatement","src":"1718:81:11"}]},"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"1385:228:11","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1280,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:11","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"token","nameLocation":"1651:5:11","nodeType":"VariableDeclaration","scope":1280,"src":"1644:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1256,"nodeType":"UserDefinedTypeName","pathNode":{"id":1255,"name":"IERC20","nameLocations":["1644:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1644:6:11"},"referencedDeclaration":992,"src":"1644:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"from","nameLocation":"1666:4:11","nodeType":"VariableDeclaration","scope":1280,"src":"1658:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"to","nameLocation":"1680:2:11","nodeType":"VariableDeclaration","scope":1280,"src":"1672:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"value","nameLocation":"1692:5:11","nodeType":"VariableDeclaration","scope":1280,"src":"1684:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:11"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"1708:0:11"},"scope":1617,"src":"1618:188:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1310,"nodeType":"Block","src":"2548:139:11","statements":[{"assignments":[1292],"declarations":[{"constant":false,"id":1292,"mutability":"mutable","name":"oldAllowance","nameLocation":"2566:12:11","nodeType":"VariableDeclaration","scope":1310,"src":"2558:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1301,"initialValue":{"arguments":[{"arguments":[{"id":1297,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2605:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1617","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1617","typeString":"library SafeERC20"}],"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2597:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"2597:7:11","typeDescriptions":{}}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2597:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"2612:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1293,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2581:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2587:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":969,"src":"2581:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2558:62:11"},{"expression":{"arguments":[{"id":1303,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2643:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1304,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"2650:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1305,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"2659:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"2674:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2659:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1302,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"2630:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1309,"nodeType":"ExpressionStatement","src":"2630:50:11"}]},"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"1812:645:11","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2471:21:11","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1284,"mutability":"mutable","name":"token","nameLocation":"2500:5:11","nodeType":"VariableDeclaration","scope":1311,"src":"2493:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1283,"nodeType":"UserDefinedTypeName","pathNode":{"id":1282,"name":"IERC20","nameLocations":["2493:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"2493:6:11"},"referencedDeclaration":992,"src":"2493:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1286,"mutability":"mutable","name":"spender","nameLocation":"2515:7:11","nodeType":"VariableDeclaration","scope":1311,"src":"2507:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"value","nameLocation":"2532:5:11","nodeType":"VariableDeclaration","scope":1311,"src":"2524:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2524:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2492:46:11"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[],"src":"2548:0:11"},"scope":1617,"src":"2462:225:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"3453:370:11","statements":[{"id":1352,"nodeType":"UncheckedBlock","src":"3463:354:11","statements":[{"assignments":[1323],"declarations":[{"constant":false,"id":1323,"mutability":"mutable","name":"currentAllowance","nameLocation":"3495:16:11","nodeType":"VariableDeclaration","scope":1352,"src":"3487:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"3487:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1332,"initialValue":{"arguments":[{"arguments":[{"id":1328,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3538:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1617","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1617","typeString":"library SafeERC20"}],"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3530:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"3530:7:11","typeDescriptions":{}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3530:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1330,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1324,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"3514:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3520:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":969,"src":"3514:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3487:66:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1333,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"3571:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1334,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3590:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3571:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1343,"nodeType":"IfStatement","src":"3567:160:11","trueBody":{"id":1342,"nodeType":"Block","src":"3609:118:11","statements":[{"errorCall":{"arguments":[{"id":1337,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"3667:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1338,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"3676:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1339,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3694:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1336,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"3634:32:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3634:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"RevertStatement","src":"3627:85:11"}]}},{"expression":{"arguments":[{"id":1345,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"3753:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1346,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"3760:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1347,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"3769:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1348,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3788:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3769:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1344,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"3740:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3740:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1351,"nodeType":"ExpressionStatement","src":"3740:66:11"}]}]},"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"2693:657:11","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3364:21:11","nodeType":"FunctionDefinition","parameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"token","nameLocation":"3393:5:11","nodeType":"VariableDeclaration","scope":1354,"src":"3386:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1314,"nodeType":"UserDefinedTypeName","pathNode":{"id":1313,"name":"IERC20","nameLocations":["3386:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"3386:6:11"},"referencedDeclaration":992,"src":"3386:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"spender","nameLocation":"3408:7:11","nodeType":"VariableDeclaration","scope":1354,"src":"3400:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3425:17:11","nodeType":"VariableDeclaration","scope":1354,"src":"3417:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"3417:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3385:58:11"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[],"src":"3453:0:11"},"scope":1617,"src":"3355:468:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1400,"nodeType":"Block","src":"4477:303:11","statements":[{"assignments":[1366],"declarations":[{"constant":false,"id":1366,"mutability":"mutable","name":"approvalCall","nameLocation":"4500:12:11","nodeType":"VariableDeclaration","scope":1400,"src":"4487:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1365,"name":"bytes","nodeType":"ElementaryTypeName","src":"4487:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1375,"initialValue":{"arguments":[{"expression":{"id":1369,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"4530:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4536:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":979,"src":"4530:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1371,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4546:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"4555:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4545:16:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1367,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4515:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4519:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"4515:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4487:75:11"},{"condition":{"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:45:11","subExpression":{"arguments":[{"id":1377,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"4602:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1378,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"4609:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1376,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"4578:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1399,"nodeType":"IfStatement","src":"4573:201:11","trueBody":{"id":1398,"nodeType":"Block","src":"4624:150:11","statements":[{"expression":{"arguments":[{"id":1382,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"4658:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1385,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"4680:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4686:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":979,"src":"4680:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1387,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4696:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4705:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4695:12:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1383,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4665:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4669:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"4665:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4665:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1381,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"4638:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4638:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1392,"nodeType":"ExpressionStatement","src":"4638:71:11"},{"expression":{"arguments":[{"id":1394,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"4743:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1395,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"4750:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1393,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"4723:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1397,"nodeType":"ExpressionStatement","src":"4723:40:11"}]}}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"3829:566:11","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1401,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4409:12:11","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"token","nameLocation":"4429:5:11","nodeType":"VariableDeclaration","scope":1401,"src":"4422:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1357,"nodeType":"UserDefinedTypeName","pathNode":{"id":1356,"name":"IERC20","nameLocations":["4422:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"4422:6:11"},"referencedDeclaration":992,"src":"4422:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"spender","nameLocation":"4444:7:11","nodeType":"VariableDeclaration","scope":1401,"src":"4436:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"4436:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"value","nameLocation":"4461:5:11","nodeType":"VariableDeclaration","scope":1401,"src":"4453:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4453:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4421:46:11"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"4477:0:11"},"scope":1617,"src":"4400:380:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1443,"nodeType":"Block","src":"5227:219:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5241:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5244:4:11","memberName":"code","nodeType":"MemberAccess","src":"5241:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5249:6:11","memberName":"length","nodeType":"MemberAccess","src":"5241:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5259:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5241:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5327:39:11","subExpression":{"arguments":[{"id":1428,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5350:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"5354:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1430,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"5361:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1426,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"5328:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5334:15:11","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"5328:21:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1441,"nodeType":"IfStatement","src":"5323:117:11","trueBody":{"id":1440,"nodeType":"Block","src":"5368:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1436,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"5422:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5414:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:11","typeDescriptions":{}}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1433,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"5389:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"RevertStatement","src":"5382:47:11"}]}},"id":1442,"nodeType":"IfStatement","src":"5237:203:11","trueBody":{"id":1425,"nodeType":"Block","src":"5262:55:11","statements":[{"expression":{"arguments":[{"id":1420,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"5289:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1421,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5296:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"5300:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1419,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"5276:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1424,"nodeType":"ExpressionStatement","src":"5276:30:11"}]}}]},"documentation":{"id":1402,"nodeType":"StructuredDocumentation","src":"4786:333:11","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1444,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5133:22:11","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"token","nameLocation":"5165:5:11","nodeType":"VariableDeclaration","scope":1444,"src":"5156:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1404,"nodeType":"UserDefinedTypeName","pathNode":{"id":1403,"name":"IERC1363","nameLocations":["5156:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5156:8:11"},"referencedDeclaration":229,"src":"5156:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"to","nameLocation":"5180:2:11","nodeType":"VariableDeclaration","scope":1444,"src":"5172:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"5172:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"value","nameLocation":"5192:5:11","nodeType":"VariableDeclaration","scope":1444,"src":"5184:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"5184:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"data","nameLocation":"5212:4:11","nodeType":"VariableDeclaration","scope":1444,"src":"5199:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1410,"name":"bytes","nodeType":"ElementaryTypeName","src":"5199:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5155:62:11"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"5227:0:11"},"scope":1617,"src":"5124:322:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"5965:239:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1459,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"5979:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5982:4:11","memberName":"code","nodeType":"MemberAccess","src":"5979:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5987:6:11","memberName":"length","nodeType":"MemberAccess","src":"5979:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5997:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5979:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6075:49:11","subExpression":{"arguments":[{"id":1474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"6102:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"6108:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"6112:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1477,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6119:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1472,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6076:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6082:19:11","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6076:25:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6076:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1488,"nodeType":"IfStatement","src":"6071:127:11","trueBody":{"id":1487,"nodeType":"Block","src":"6126:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1483,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6180:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6172:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"6172:7:11","typeDescriptions":{}}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6172:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1480,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"6147:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6147:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1486,"nodeType":"RevertStatement","src":"6140:47:11"}]}},"id":1489,"nodeType":"IfStatement","src":"5975:223:11","trueBody":{"id":1471,"nodeType":"Block","src":"6000:65:11","statements":[{"expression":{"arguments":[{"id":1465,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6031:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1466,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"6038:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1467,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"6044:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"6048:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1464,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"6014:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6014:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"6014:40:11"}]}}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"5452:341:11","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5807:26:11","nodeType":"FunctionDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"token","nameLocation":"5852:5:11","nodeType":"VariableDeclaration","scope":1491,"src":"5843:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1447,"nodeType":"UserDefinedTypeName","pathNode":{"id":1446,"name":"IERC1363","nameLocations":["5843:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5843:8:11"},"referencedDeclaration":229,"src":"5843:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"from","nameLocation":"5875:4:11","nodeType":"VariableDeclaration","scope":1491,"src":"5867:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"to","nameLocation":"5897:2:11","nodeType":"VariableDeclaration","scope":1491,"src":"5889:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"5889:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"value","nameLocation":"5917:5:11","nodeType":"VariableDeclaration","scope":1491,"src":"5909:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"5909:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"data","nameLocation":"5945:4:11","nodeType":"VariableDeclaration","scope":1491,"src":"5932:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1455,"name":"bytes","nodeType":"ElementaryTypeName","src":"5932:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5833:122:11"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[],"src":"5965:0:11"},"scope":1617,"src":"5798:406:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1533,"nodeType":"Block","src":"6971:218:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1504,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"6985:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6988:4:11","memberName":"code","nodeType":"MemberAccess","src":"6985:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6993:6:11","memberName":"length","nodeType":"MemberAccess","src":"6985:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7003:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6985:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7071:38:11","subExpression":{"arguments":[{"id":1518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"7093:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7097:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1520,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"7104:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1516,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7072:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7078:14:11","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7072:20:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1531,"nodeType":"IfStatement","src":"7067:116:11","trueBody":{"id":1530,"nodeType":"Block","src":"7111:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1526,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7165:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7157:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"7157:7:11","typeDescriptions":{}}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7157:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1523,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"7132:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7132:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1529,"nodeType":"RevertStatement","src":"7125:47:11"}]}},"id":1532,"nodeType":"IfStatement","src":"6981:202:11","trueBody":{"id":1515,"nodeType":"Block","src":"7006:55:11","statements":[{"expression":{"arguments":[{"id":1510,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7033:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1511,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"7040:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7044:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1509,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"7020:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7020:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1514,"nodeType":"ExpressionStatement","src":"7020:30:11"}]}}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"6210:654:11","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1534,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6878:21:11","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"token","nameLocation":"6909:5:11","nodeType":"VariableDeclaration","scope":1534,"src":"6900:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1494,"nodeType":"UserDefinedTypeName","pathNode":{"id":1493,"name":"IERC1363","nameLocations":["6900:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6900:8:11"},"referencedDeclaration":229,"src":"6900:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"to","nameLocation":"6924:2:11","nodeType":"VariableDeclaration","scope":1534,"src":"6916:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"value","nameLocation":"6936:5:11","nodeType":"VariableDeclaration","scope":1534,"src":"6928:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"6928:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"data","nameLocation":"6956:4:11","nodeType":"VariableDeclaration","scope":1534,"src":"6943:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1500,"name":"bytes","nodeType":"ElementaryTypeName","src":"6943:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6899:62:11"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"6971:0:11"},"scope":1617,"src":"6869:320:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"7756:650:11","statements":[{"assignments":[1544],"declarations":[{"constant":false,"id":1544,"mutability":"mutable","name":"returnSize","nameLocation":"7774:10:11","nodeType":"VariableDeclaration","scope":1574,"src":"7766:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"7766:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1545,"nodeType":"VariableDeclarationStatement","src":"7766:18:11"},{"assignments":[1547],"declarations":[{"constant":false,"id":1547,"mutability":"mutable","name":"returnValue","nameLocation":"7802:11:11","nodeType":"VariableDeclaration","scope":1574,"src":"7794:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"7794:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1548,"nodeType":"VariableDeclarationStatement","src":"7794:19:11"},{"AST":{"nativeSrc":"7848:396:11","nodeType":"YulBlock","src":"7848:396:11","statements":[{"nativeSrc":"7862:75:11","nodeType":"YulVariableDeclaration","src":"7862:75:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"7882:3:11","nodeType":"YulIdentifier","src":"7882:3:11"},"nativeSrc":"7882:5:11","nodeType":"YulFunctionCall","src":"7882:5:11"},{"name":"token","nativeSrc":"7889:5:11","nodeType":"YulIdentifier","src":"7889:5:11"},{"kind":"number","nativeSrc":"7896:1:11","nodeType":"YulLiteral","src":"7896:1:11","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"7903:4:11","nodeType":"YulIdentifier","src":"7903:4:11"},{"kind":"number","nativeSrc":"7909:4:11","nodeType":"YulLiteral","src":"7909:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7899:3:11","nodeType":"YulIdentifier","src":"7899:3:11"},"nativeSrc":"7899:15:11","nodeType":"YulFunctionCall","src":"7899:15:11"},{"arguments":[{"name":"data","nativeSrc":"7922:4:11","nodeType":"YulIdentifier","src":"7922:4:11"}],"functionName":{"name":"mload","nativeSrc":"7916:5:11","nodeType":"YulIdentifier","src":"7916:5:11"},"nativeSrc":"7916:11:11","nodeType":"YulFunctionCall","src":"7916:11:11"},{"kind":"number","nativeSrc":"7929:1:11","nodeType":"YulLiteral","src":"7929:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"7932:4:11","nodeType":"YulLiteral","src":"7932:4:11","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"7877:4:11","nodeType":"YulIdentifier","src":"7877:4:11"},"nativeSrc":"7877:60:11","nodeType":"YulFunctionCall","src":"7877:60:11"},"variables":[{"name":"success","nativeSrc":"7866:7:11","nodeType":"YulTypedName","src":"7866:7:11","type":""}]},{"body":{"nativeSrc":"7998:157:11","nodeType":"YulBlock","src":"7998:157:11","statements":[{"nativeSrc":"8016:22:11","nodeType":"YulVariableDeclaration","src":"8016:22:11","value":{"arguments":[{"kind":"number","nativeSrc":"8033:4:11","nodeType":"YulLiteral","src":"8033:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8027:5:11","nodeType":"YulIdentifier","src":"8027:5:11"},"nativeSrc":"8027:11:11","nodeType":"YulFunctionCall","src":"8027:11:11"},"variables":[{"name":"ptr","nativeSrc":"8020:3:11","nodeType":"YulTypedName","src":"8020:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8070:3:11","nodeType":"YulIdentifier","src":"8070:3:11"},{"kind":"number","nativeSrc":"8075:1:11","nodeType":"YulLiteral","src":"8075:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8078:14:11","nodeType":"YulIdentifier","src":"8078:14:11"},"nativeSrc":"8078:16:11","nodeType":"YulFunctionCall","src":"8078:16:11"}],"functionName":{"name":"returndatacopy","nativeSrc":"8055:14:11","nodeType":"YulIdentifier","src":"8055:14:11"},"nativeSrc":"8055:40:11","nodeType":"YulFunctionCall","src":"8055:40:11"},"nativeSrc":"8055:40:11","nodeType":"YulExpressionStatement","src":"8055:40:11"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8119:3:11","nodeType":"YulIdentifier","src":"8119:3:11"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8124:14:11","nodeType":"YulIdentifier","src":"8124:14:11"},"nativeSrc":"8124:16:11","nodeType":"YulFunctionCall","src":"8124:16:11"}],"functionName":{"name":"revert","nativeSrc":"8112:6:11","nodeType":"YulIdentifier","src":"8112:6:11"},"nativeSrc":"8112:29:11","nodeType":"YulFunctionCall","src":"8112:29:11"},"nativeSrc":"8112:29:11","nodeType":"YulExpressionStatement","src":"8112:29:11"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"7989:7:11","nodeType":"YulIdentifier","src":"7989:7:11"}],"functionName":{"name":"iszero","nativeSrc":"7982:6:11","nodeType":"YulIdentifier","src":"7982:6:11"},"nativeSrc":"7982:15:11","nodeType":"YulFunctionCall","src":"7982:15:11"},"nativeSrc":"7979:176:11","nodeType":"YulIf","src":"7979:176:11"},{"nativeSrc":"8168:30:11","nodeType":"YulAssignment","src":"8168:30:11","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8182:14:11","nodeType":"YulIdentifier","src":"8182:14:11"},"nativeSrc":"8182:16:11","nodeType":"YulFunctionCall","src":"8182:16:11"},"variableNames":[{"name":"returnSize","nativeSrc":"8168:10:11","nodeType":"YulIdentifier","src":"8168:10:11"}]},{"nativeSrc":"8211:23:11","nodeType":"YulAssignment","src":"8211:23:11","value":{"arguments":[{"kind":"number","nativeSrc":"8232:1:11","nodeType":"YulLiteral","src":"8232:1:11","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8226:5:11","nodeType":"YulIdentifier","src":"8226:5:11"},"nativeSrc":"8226:8:11","nodeType":"YulFunctionCall","src":"8226:8:11"},"variableNames":[{"name":"returnValue","nativeSrc":"8211:11:11","nodeType":"YulIdentifier","src":"8211:11:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1540,"isOffset":false,"isSlot":false,"src":"7903:4:11","valueSize":1},{"declaration":1540,"isOffset":false,"isSlot":false,"src":"7922:4:11","valueSize":1},{"declaration":1544,"isOffset":false,"isSlot":false,"src":"8168:10:11","valueSize":1},{"declaration":1547,"isOffset":false,"isSlot":false,"src":"8211:11:11","valueSize":1},{"declaration":1538,"isOffset":false,"isSlot":false,"src":"7889:5:11","valueSize":1}],"flags":["memory-safe"],"id":1549,"nodeType":"InlineAssembly","src":"7823:421:11"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1550,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8258:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8272:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8258:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"8310:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8325:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8310:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8258:68:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1555,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"8284:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8276:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"8276:7:11","typeDescriptions":{}}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8276:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8291:4:11","memberName":"code","nodeType":"MemberAccess","src":"8276:19:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8296:6:11","memberName":"length","nodeType":"MemberAccess","src":"8276:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8306:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8276:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"nodeType":"IfStatement","src":"8254:146:11","trueBody":{"id":1572,"nodeType":"Block","src":"8328:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1568,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"8382:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8374:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"8374:7:11","typeDescriptions":{}}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1565,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8349:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8349:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"RevertStatement","src":"8342:47:11"}]}}]},"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"7195:486:11","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7695:19:11","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"token","nameLocation":"7722:5:11","nodeType":"VariableDeclaration","scope":1575,"src":"7715:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"IERC20","nameLocations":["7715:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"7715:6:11"},"referencedDeclaration":992,"src":"7715:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"data","nameLocation":"7742:4:11","nodeType":"VariableDeclaration","scope":1575,"src":"7729:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1539,"name":"bytes","nodeType":"ElementaryTypeName","src":"7729:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7714:33:11"},"returnParameters":{"id":1542,"nodeType":"ParameterList","parameters":[],"src":"7756:0:11"},"scope":1617,"src":"7686:720:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1615,"nodeType":"Block","src":"8997:391:11","statements":[{"assignments":[1587],"declarations":[{"constant":false,"id":1587,"mutability":"mutable","name":"success","nameLocation":"9012:7:11","nodeType":"VariableDeclaration","scope":1615,"src":"9007:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1586,"name":"bool","nodeType":"ElementaryTypeName","src":"9007:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1588,"nodeType":"VariableDeclarationStatement","src":"9007:12:11"},{"assignments":[1590],"declarations":[{"constant":false,"id":1590,"mutability":"mutable","name":"returnSize","nameLocation":"9037:10:11","nodeType":"VariableDeclaration","scope":1615,"src":"9029:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"9029:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1591,"nodeType":"VariableDeclarationStatement","src":"9029:18:11"},{"assignments":[1593],"declarations":[{"constant":false,"id":1593,"mutability":"mutable","name":"returnValue","nameLocation":"9065:11:11","nodeType":"VariableDeclaration","scope":1615,"src":"9057:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"9057:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1594,"nodeType":"VariableDeclarationStatement","src":"9057:19:11"},{"AST":{"nativeSrc":"9111:174:11","nodeType":"YulBlock","src":"9111:174:11","statements":[{"nativeSrc":"9125:71:11","nodeType":"YulAssignment","src":"9125:71:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9141:3:11","nodeType":"YulIdentifier","src":"9141:3:11"},"nativeSrc":"9141:5:11","nodeType":"YulFunctionCall","src":"9141:5:11"},{"name":"token","nativeSrc":"9148:5:11","nodeType":"YulIdentifier","src":"9148:5:11"},{"kind":"number","nativeSrc":"9155:1:11","nodeType":"YulLiteral","src":"9155:1:11","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9162:4:11","nodeType":"YulIdentifier","src":"9162:4:11"},{"kind":"number","nativeSrc":"9168:4:11","nodeType":"YulLiteral","src":"9168:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9158:3:11","nodeType":"YulIdentifier","src":"9158:3:11"},"nativeSrc":"9158:15:11","nodeType":"YulFunctionCall","src":"9158:15:11"},{"arguments":[{"name":"data","nativeSrc":"9181:4:11","nodeType":"YulIdentifier","src":"9181:4:11"}],"functionName":{"name":"mload","nativeSrc":"9175:5:11","nodeType":"YulIdentifier","src":"9175:5:11"},"nativeSrc":"9175:11:11","nodeType":"YulFunctionCall","src":"9175:11:11"},{"kind":"number","nativeSrc":"9188:1:11","nodeType":"YulLiteral","src":"9188:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"9191:4:11","nodeType":"YulLiteral","src":"9191:4:11","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9136:4:11","nodeType":"YulIdentifier","src":"9136:4:11"},"nativeSrc":"9136:60:11","nodeType":"YulFunctionCall","src":"9136:60:11"},"variableNames":[{"name":"success","nativeSrc":"9125:7:11","nodeType":"YulIdentifier","src":"9125:7:11"}]},{"nativeSrc":"9209:30:11","nodeType":"YulAssignment","src":"9209:30:11","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9223:14:11","nodeType":"YulIdentifier","src":"9223:14:11"},"nativeSrc":"9223:16:11","nodeType":"YulFunctionCall","src":"9223:16:11"},"variableNames":[{"name":"returnSize","nativeSrc":"9209:10:11","nodeType":"YulIdentifier","src":"9209:10:11"}]},{"nativeSrc":"9252:23:11","nodeType":"YulAssignment","src":"9252:23:11","value":{"arguments":[{"kind":"number","nativeSrc":"9273:1:11","nodeType":"YulLiteral","src":"9273:1:11","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9267:5:11","nodeType":"YulIdentifier","src":"9267:5:11"},"nativeSrc":"9267:8:11","nodeType":"YulFunctionCall","src":"9267:8:11"},"variableNames":[{"name":"returnValue","nativeSrc":"9252:11:11","nodeType":"YulIdentifier","src":"9252:11:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1581,"isOffset":false,"isSlot":false,"src":"9162:4:11","valueSize":1},{"declaration":1581,"isOffset":false,"isSlot":false,"src":"9181:4:11","valueSize":1},{"declaration":1590,"isOffset":false,"isSlot":false,"src":"9209:10:11","valueSize":1},{"declaration":1593,"isOffset":false,"isSlot":false,"src":"9252:11:11","valueSize":1},{"declaration":1587,"isOffset":false,"isSlot":false,"src":"9125:7:11","valueSize":1},{"declaration":1579,"isOffset":false,"isSlot":false,"src":"9148:5:11","valueSize":1}],"flags":["memory-safe"],"id":1595,"nodeType":"InlineAssembly","src":"9086:199:11"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1596,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"9301:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1597,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"9313:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9327:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9313:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"9364:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9364:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9313:67:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1602,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"9339:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"9331:7:11","typeDescriptions":{}}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9346:4:11","memberName":"code","nodeType":"MemberAccess","src":"9331:19:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9351:6:11","memberName":"length","nodeType":"MemberAccess","src":"9331:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9331:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9312:69:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9301:80:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1585,"id":1614,"nodeType":"Return","src":"9294:87:11"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"8412:491:11","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8917:23:11","nodeType":"FunctionDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"token","nameLocation":"8948:5:11","nodeType":"VariableDeclaration","scope":1616,"src":"8941:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1578,"nodeType":"UserDefinedTypeName","pathNode":{"id":1577,"name":"IERC20","nameLocations":["8941:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"8941:6:11"},"referencedDeclaration":992,"src":"8941:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1581,"mutability":"mutable","name":"data","nameLocation":"8968:4:11","nodeType":"VariableDeclaration","scope":1616,"src":"8955:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1580,"name":"bytes","nodeType":"ElementaryTypeName","src":"8955:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8940:33:11"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"8991:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1583,"name":"bool","nodeType":"ElementaryTypeName","src":"8991:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8990:6:11"},"scope":1617,"src":"8908:480:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1618,"src":"698:8692:11","usedErrors":[1220,1229],"usedEvents":[]}],"src":"115:9276:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1647]},"id":1648,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1619,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1647,"linearizedBaseContracts":[1647],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1628,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":1625,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1624,"id":1627,"nodeType":"Return","src":"728:17:12"}]},"id":1629,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1629,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":1647,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1637,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":1634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1633,"id":1636,"nodeType":"Return","src":"835:15:12"}]},"id":1638,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1638,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1631,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":1647,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1645,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1642,"id":1644,"nodeType":"Return","src":"945:8:12"}]},"id":1646,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":1639,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1646,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":1647,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1648,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1715]},"id":1716,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"125:83:13","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1715,"linearizedBaseContracts":[1715],"name":"Nonces","nameLocation":"227:6:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"240:90:13","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1657,"name":"InvalidAccountNonce","nameLocation":"341:19:13","nodeType":"ErrorDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"account","nameLocation":"369:7:13","nodeType":"VariableDeclaration","scope":1657,"src":"361:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:13","nodeType":"VariableDeclaration","scope":1657,"src":"378:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:13"},"src":"335:65:13"},{"constant":false,"id":1661,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:13","nodeType":"VariableDeclaration","scope":1715,"src":"406:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1660,"keyName":"account","keyNameLocation":"422:7:13","keyType":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1673,"nodeType":"Block","src":"607:38:13","statements":[{"expression":{"baseExpression":{"id":1669,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"624:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1671,"indexExpression":{"id":1670,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"632:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1668,"id":1672,"nodeType":"Return","src":"617:21:13"}]},"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"464:69:13","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1674,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:13","nodeType":"FunctionDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"owner","nameLocation":"562:5:13","nodeType":"VariableDeclaration","scope":1674,"src":"554:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:13"},"returnParameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1674,"src":"598:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:13"},"scope":1715,"src":"538:107:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1688,"nodeType":"Block","src":"828:326:13","statements":[{"id":1687,"nodeType":"UncheckedBlock","src":"1031:117:13","statements":[{"expression":{"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:13","subExpression":{"baseExpression":{"id":1682,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"1121:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1684,"indexExpression":{"id":1683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"1129:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1681,"id":1686,"nodeType":"Return","src":"1114:23:13"}]}]},"documentation":{"id":1675,"nodeType":"StructuredDocumentation","src":"651:103:13","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:13","nodeType":"FunctionDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"owner","nameLocation":"786:5:13","nodeType":"VariableDeclaration","scope":1689,"src":"778:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1676,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:13"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1689,"src":"819:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:13"},"scope":1715,"src":"759:395:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1713,"nodeType":"Block","src":"1338:149:13","statements":[{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"current","nameLocation":"1356:7:13","nodeType":"VariableDeclaration","scope":1713,"src":"1348:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1702,"initialValue":{"arguments":[{"id":1700,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"1376:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1699,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"1366:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"1396:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1704,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1405:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1712,"nodeType":"IfStatement","src":"1392:89:13","trueBody":{"id":1711,"nodeType":"Block","src":"1414:67:13","statements":[{"errorCall":{"arguments":[{"id":1707,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"1455:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1708,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1462:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1706,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"1435:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1710,"nodeType":"RevertStatement","src":"1428:42:13"}]}}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"1160:100:13","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1714,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:13","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"owner","nameLocation":"1299:5:13","nodeType":"VariableDeclaration","scope":1714,"src":"1291:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:13","nodeType":"VariableDeclaration","scope":1714,"src":"1306:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:13"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[],"src":"1338:0:13"},"scope":1715,"src":"1265:222:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1716,"src":"209:1280:13","usedErrors":[1657],"usedEvents":[]}],"src":"99:1391:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1767]},"id":1768,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1717,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1767,"linearizedBaseContracts":[1767],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":1722,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":1767,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":1726,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":1767,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1727,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":1730,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":1767,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":1734,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":1767,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":1738,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":1767,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":1742,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":1767,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":1746,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":1767,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":1750,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":1767,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":1754,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":1767,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":1758,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":1767,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nativeSrc":"1854:110:14","nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:14","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:14","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:14","nodeType":"YulIdentifier","src":"1868:6:14"},"nativeSrc":"1868:24:14","nodeType":"YulFunctionCall","src":"1868:24:14"},"nativeSrc":"1868:24:14","nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:14","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:14","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:14","nodeType":"YulIdentifier","src":"1905:6:14"},"nativeSrc":"1905:18:14","nodeType":"YulFunctionCall","src":"1905:18:14"},"nativeSrc":"1905:18:14","nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:14","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:14","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:14","nodeType":"YulIdentifier","src":"1936:6:14"},"nativeSrc":"1936:18:14","nodeType":"YulFunctionCall","src":"1936:18:14"},"nativeSrc":"1936:18:14","nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1761,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":1764,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":1766,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":1763,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":1767,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1768,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1773],"ShortStrings":[1984],"StorageSlot":[2108]},"id":1985,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1769,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1771,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1985,"sourceUnit":2109,"src":"132:46:15","symbolAliases":[{"foreign":{"id":1770,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"140:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1773,"name":"ShortString","nameLocation":"353:11:15","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:15","underlyingType":{"id":1772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"378:876:15","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1984,"linearizedBaseContracts":[1984],"name":"ShortStrings","nameLocation":"1263:12:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1777,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:15","nodeType":"VariableDeclaration","scope":1984,"src":"1345:111:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1781,"name":"StringTooLong","nameLocation":"1469:13:15","nodeType":"ErrorDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"str","nameLocation":"1490:3:15","nodeType":"VariableDeclaration","scope":1781,"src":"1483:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1778,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:15"},"src":"1463:32:15"},{"errorSelector":"b3512b0c","id":1783,"name":"InvalidShortString","nameLocation":"1506:18:15","nodeType":"ErrorDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[],"src":"1524:2:15"},"src":"1500:27:15"},{"body":{"id":1826,"nodeType":"Block","src":"1786:208:15","statements":[{"assignments":[1793],"declarations":[{"constant":false,"id":1793,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:15","nodeType":"VariableDeclaration","scope":1826,"src":"1796:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1792,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1798,"initialValue":{"arguments":[{"id":1796,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"1822:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1794,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:15","typeDescriptions":{}}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1799,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"1840:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:15","memberName":"length","nodeType":"MemberAccess","src":"1840:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1808,"nodeType":"IfStatement","src":"1836:72:15","trueBody":{"id":1807,"nodeType":"Block","src":"1858:50:15","statements":[{"errorCall":{"arguments":[{"id":1804,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"1893:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1803,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"1879:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"RevertStatement","src":"1872:25:15"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1817,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"1965:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:15","typeDescriptions":{}}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:15","typeDescriptions":{}}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1820,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"1974:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:15","memberName":"length","nodeType":"MemberAccess","src":"1974:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:15","typeDescriptions":{}}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1809,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"1924:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1773_$","typeString":"type(ShortString)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1773_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"functionReturnParameters":1791,"id":1825,"nodeType":"Return","src":"1917:70:15"}]},"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"1533:170:15","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1827,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:15","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"str","nameLocation":"1745:3:15","nodeType":"VariableDeclaration","scope":1827,"src":"1731:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1785,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:15"},"returnParameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1827,"src":"1773:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"},"typeName":{"id":1789,"nodeType":"UserDefinedTypeName","pathNode":{"id":1788,"name":"ShortString","nameLocations":["1773:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"1773:11:15"},"referencedDeclaration":1773,"src":"1773:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:15"},"scope":1984,"src":"1708:286:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1852,"nodeType":"Block","src":"2152:304:15","statements":[{"assignments":[1837],"declarations":[{"constant":false,"id":1837,"mutability":"mutable","name":"len","nameLocation":"2170:3:15","nodeType":"VariableDeclaration","scope":1852,"src":"2162:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1841,"initialValue":{"arguments":[{"id":1839,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"2187:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}],"id":1838,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"2176:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1773_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:15"},{"assignments":[1843],"declarations":[{"constant":false,"id":1843,"mutability":"mutable","name":"str","nameLocation":"2294:3:15","nodeType":"VariableDeclaration","scope":1852,"src":"2280:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1842,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1848,"initialValue":{"arguments":[{"hexValue":"3332","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1844,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:15"},{"AST":{"nativeSrc":"2349:81:15","nodeType":"YulBlock","src":"2349:81:15","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:15","nodeType":"YulIdentifier","src":"2370:3:15"},{"name":"len","nativeSrc":"2375:3:15","nodeType":"YulIdentifier","src":"2375:3:15"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:15","nodeType":"YulIdentifier","src":"2363:6:15"},"nativeSrc":"2363:16:15","nodeType":"YulFunctionCall","src":"2363:16:15"},"nativeSrc":"2363:16:15","nodeType":"YulExpressionStatement","src":"2363:16:15"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:15","nodeType":"YulIdentifier","src":"2403:3:15"},{"kind":"number","nativeSrc":"2408:4:15","nodeType":"YulLiteral","src":"2408:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:15","nodeType":"YulIdentifier","src":"2399:3:15"},"nativeSrc":"2399:14:15","nodeType":"YulFunctionCall","src":"2399:14:15"},{"name":"sstr","nativeSrc":"2415:4:15","nodeType":"YulIdentifier","src":"2415:4:15"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:15","nodeType":"YulIdentifier","src":"2392:6:15"},"nativeSrc":"2392:28:15","nodeType":"YulFunctionCall","src":"2392:28:15"},"nativeSrc":"2392:28:15","nodeType":"YulExpressionStatement","src":"2392:28:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1837,"isOffset":false,"isSlot":false,"src":"2375:3:15","valueSize":1},{"declaration":1831,"isOffset":false,"isSlot":false,"src":"2415:4:15","valueSize":1},{"declaration":1843,"isOffset":false,"isSlot":false,"src":"2370:3:15","valueSize":1},{"declaration":1843,"isOffset":false,"isSlot":false,"src":"2403:3:15","valueSize":1}],"flags":["memory-safe"],"id":1849,"nodeType":"InlineAssembly","src":"2324:106:15"},{"expression":{"id":1850,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"2446:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1835,"id":1851,"nodeType":"Return","src":"2439:10:15"}]},"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"2000:73:15","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:15","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:15","nodeType":"VariableDeclaration","scope":1853,"src":"2096:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"},"typeName":{"id":1830,"nodeType":"UserDefinedTypeName","pathNode":{"id":1829,"name":"ShortString","nameLocations":["2096:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"2096:11:15"},"referencedDeclaration":1773,"src":"2096:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:15"},"returnParameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1853,"src":"2137:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1833,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:15"},"scope":1984,"src":"2078:378:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1884,"nodeType":"Block","src":"2598:175:15","statements":[{"assignments":[1863],"declarations":[{"constant":false,"id":1863,"mutability":"mutable","name":"result","nameLocation":"2616:6:15","nodeType":"VariableDeclaration","scope":1884,"src":"2608:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1873,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1868,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"2652:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}],"expression":{"id":1866,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"2633:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1773_$","typeString":"type(ShortString)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1773_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:15","typeDescriptions":{}}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1874,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"2679:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1881,"nodeType":"IfStatement","src":"2675:69:15","trueBody":{"id":1880,"nodeType":"Block","src":"2692:52:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1877,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"2713:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1879,"nodeType":"RevertStatement","src":"2706:27:15"}]}},{"expression":{"id":1882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"2760:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1861,"id":1883,"nodeType":"Return","src":"2753:13:15"}]},"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"2462:61:15","text":" @dev Return the length of a `ShortString`."},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:15","nodeType":"FunctionDefinition","parameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:15","nodeType":"VariableDeclaration","scope":1885,"src":"2548:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"},"typeName":{"id":1856,"nodeType":"UserDefinedTypeName","pathNode":{"id":1855,"name":"ShortString","nameLocations":["2548:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"2548:11:15"},"referencedDeclaration":1773,"src":"2548:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:15"},"returnParameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"2589:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:15"},"scope":1984,"src":"2528:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1924,"nodeType":"Block","src":"2996:231:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3016:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1896,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:15","typeDescriptions":{}}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:15","memberName":"length","nodeType":"MemberAccess","src":"3010:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1922,"nodeType":"Block","src":"3094:127:15","statements":[{"expression":{"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1911,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"3134:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1908,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"3108:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2108_$","typeString":"type(library StorageSlot)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:15","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2085,"src":"3108:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2005_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2005_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"3108:38:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3149:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1916,"nodeType":"ExpressionStatement","src":"3108:46:15"},{"expression":{"arguments":[{"id":1919,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"3192:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1917,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"3175:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1773_$","typeString":"type(ShortString)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1773_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"functionReturnParameters":1895,"id":1921,"nodeType":"Return","src":"3168:42:15"}]},"id":1923,"nodeType":"IfStatement","src":"3006:215:15","trueBody":{"id":1907,"nodeType":"Block","src":"3036:52:15","statements":[{"expression":{"arguments":[{"id":1904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3071:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1903,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"3057:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1773_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"functionReturnParameters":1895,"id":1906,"nodeType":"Return","src":"3050:27:15"}]}}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"2779:103:15","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1925,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:15","nodeType":"FunctionDefinition","parameters":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"value","nameLocation":"2936:5:15","nodeType":"VariableDeclaration","scope":1925,"src":"2922:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1887,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"store","nameLocation":"2958:5:15","nodeType":"VariableDeclaration","scope":1925,"src":"2943:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1889,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:15"},"returnParameters":{"id":1895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1925,"src":"2983:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"},"typeName":{"id":1893,"nodeType":"UserDefinedTypeName","pathNode":{"id":1892,"name":"ShortString","nameLocations":["2983:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"2983:11:15"},"referencedDeclaration":1773,"src":"2983:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:15"},"scope":1984,"src":"2887:340:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1951,"nodeType":"Block","src":"3467:158:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"3500:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}],"expression":{"id":1936,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"3481:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1773_$","typeString":"type(ShortString)"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1773_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1940,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"3510:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1949,"nodeType":"Block","src":"3582:37:15","statements":[{"expression":{"id":1947,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"3603:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1935,"id":1948,"nodeType":"Return","src":"3596:12:15"}]},"id":1950,"nodeType":"IfStatement","src":"3477:142:15","trueBody":{"id":1946,"nodeType":"Block","src":"3529:47:15","statements":[{"expression":{"arguments":[{"id":1943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"3559:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}],"id":1942,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"3550:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1773_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1935,"id":1945,"nodeType":"Return","src":"3543:22:15"}]}}]},"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"3233:120:15","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1952,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:15","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"value","nameLocation":"3400:5:15","nodeType":"VariableDeclaration","scope":1952,"src":"3388:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"},"typeName":{"id":1928,"nodeType":"UserDefinedTypeName","pathNode":{"id":1927,"name":"ShortString","nameLocations":["3388:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"3388:11:15"},"referencedDeclaration":1773,"src":"3388:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"store","nameLocation":"3422:5:15","nodeType":"VariableDeclaration","scope":1952,"src":"3407:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1930,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:15"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"3452:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1933,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:15"},"scope":1984,"src":"3358:267:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1982,"nodeType":"Block","src":"4105:174:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"4138:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}],"expression":{"id":1963,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4119:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1773_$","typeString":"type(ShortString)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1773_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1967,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"4148:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1980,"nodeType":"Block","src":"4222:51:15","statements":[{"expression":{"expression":{"arguments":[{"id":1976,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"4249:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:15","typeDescriptions":{}}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:15","memberName":"length","nodeType":"MemberAccess","src":"4243:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1962,"id":1979,"nodeType":"Return","src":"4236:26:15"}]},"id":1981,"nodeType":"IfStatement","src":"4115:158:15","trueBody":{"id":1973,"nodeType":"Block","src":"4167:49:15","statements":[{"expression":{"arguments":[{"id":1970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"4199:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}],"id":1969,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"4188:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1773_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1962,"id":1972,"nodeType":"Return","src":"4181:24:15"}]}}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"3631:364:15","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1983,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:15","nodeType":"FunctionDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"value","nameLocation":"4044:5:15","nodeType":"VariableDeclaration","scope":1983,"src":"4032:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"},"typeName":{"id":1955,"nodeType":"UserDefinedTypeName","pathNode":{"id":1954,"name":"ShortString","nameLocations":["4032:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"4032:11:15"},"referencedDeclaration":1773,"src":"4032:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"store","nameLocation":"4066:5:15","nodeType":"VariableDeclaration","scope":1983,"src":"4051:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1957,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:15"},"returnParameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1983,"src":"4096:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:15"},"scope":1984,"src":"4000:279:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1985,"src":"1255:3026:15","usedErrors":[1781,1783],"usedEvents":[]}],"src":"106:4176:15"},"id":15},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2108]},"id":2109,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1986,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1987,"nodeType":"StructuredDocumentation","src":"219:1187:16","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2108,"linearizedBaseContracts":[2108],"name":"StorageSlot","nameLocation":"1415:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1990,"members":[{"constant":false,"id":1989,"mutability":"mutable","name":"value","nameLocation":"1470:5:16","nodeType":"VariableDeclaration","scope":1990,"src":"1462:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1988,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:16","nodeType":"StructDefinition","scope":2108,"src":"1433:49:16","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1993,"members":[{"constant":false,"id":1992,"mutability":"mutable","name":"value","nameLocation":"1522:5:16","nodeType":"VariableDeclaration","scope":1993,"src":"1517:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1991,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:16","nodeType":"StructDefinition","scope":2108,"src":"1488:46:16","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1996,"members":[{"constant":false,"id":1995,"mutability":"mutable","name":"value","nameLocation":"1577:5:16","nodeType":"VariableDeclaration","scope":1996,"src":"1569:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:16","nodeType":"StructDefinition","scope":2108,"src":"1540:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1999,"members":[{"constant":false,"id":1998,"mutability":"mutable","name":"value","nameLocation":"1632:5:16","nodeType":"VariableDeclaration","scope":1999,"src":"1624:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:16","nodeType":"StructDefinition","scope":2108,"src":"1595:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2002,"members":[{"constant":false,"id":2001,"mutability":"mutable","name":"value","nameLocation":"1685:5:16","nodeType":"VariableDeclaration","scope":2002,"src":"1678:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2000,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:16","nodeType":"StructDefinition","scope":2108,"src":"1650:47:16","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2005,"members":[{"constant":false,"id":2004,"mutability":"mutable","name":"value","nameLocation":"1738:5:16","nodeType":"VariableDeclaration","scope":2005,"src":"1731:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2003,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:16","nodeType":"StructDefinition","scope":2108,"src":"1703:47:16","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2008,"members":[{"constant":false,"id":2007,"mutability":"mutable","name":"value","nameLocation":"1789:5:16","nodeType":"VariableDeclaration","scope":2008,"src":"1783:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2006,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:16","nodeType":"StructDefinition","scope":2108,"src":"1756:45:16","visibility":"public"},{"body":{"id":2018,"nodeType":"Block","src":"1983:79:16","statements":[{"AST":{"nativeSrc":"2018:38:16","nodeType":"YulBlock","src":"2018:38:16","statements":[{"nativeSrc":"2032:14:16","nodeType":"YulAssignment","src":"2032:14:16","value":{"name":"slot","nativeSrc":"2042:4:16","nodeType":"YulIdentifier","src":"2042:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:16","nodeType":"YulIdentifier","src":"2032:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2015,"isOffset":false,"isSlot":true,"src":"2032:6:16","suffix":"slot","valueSize":1},{"declaration":2011,"isOffset":false,"isSlot":false,"src":"2042:4:16","valueSize":1}],"flags":["memory-safe"],"id":2017,"nodeType":"InlineAssembly","src":"1993:63:16"}]},"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"1807:87:16","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2019,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:16","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"slot","nameLocation":"1931:4:16","nodeType":"VariableDeclaration","scope":2019,"src":"1923:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:16"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"r","nameLocation":"1980:1:16","nodeType":"VariableDeclaration","scope":2019,"src":"1960:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1990_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2014,"nodeType":"UserDefinedTypeName","pathNode":{"id":2013,"name":"AddressSlot","nameLocations":["1960:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1990,"src":"1960:11:16"},"referencedDeclaration":1990,"src":"1960:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1990_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:16"},"scope":2108,"src":"1899:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2029,"nodeType":"Block","src":"2243:79:16","statements":[{"AST":{"nativeSrc":"2278:38:16","nodeType":"YulBlock","src":"2278:38:16","statements":[{"nativeSrc":"2292:14:16","nodeType":"YulAssignment","src":"2292:14:16","value":{"name":"slot","nativeSrc":"2302:4:16","nodeType":"YulIdentifier","src":"2302:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:16","nodeType":"YulIdentifier","src":"2292:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2026,"isOffset":false,"isSlot":true,"src":"2292:6:16","suffix":"slot","valueSize":1},{"declaration":2022,"isOffset":false,"isSlot":false,"src":"2302:4:16","valueSize":1}],"flags":["memory-safe"],"id":2028,"nodeType":"InlineAssembly","src":"2253:63:16"}]},"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"2068:86:16","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2030,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:16","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"slot","nameLocation":"2191:4:16","nodeType":"VariableDeclaration","scope":2030,"src":"2183:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:16"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"r","nameLocation":"2240:1:16","nodeType":"VariableDeclaration","scope":2030,"src":"2220:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1993_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2025,"nodeType":"UserDefinedTypeName","pathNode":{"id":2024,"name":"BooleanSlot","nameLocations":["2220:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1993,"src":"2220:11:16"},"referencedDeclaration":1993,"src":"2220:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1993_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:16"},"scope":2108,"src":"2159:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2040,"nodeType":"Block","src":"2503:79:16","statements":[{"AST":{"nativeSrc":"2538:38:16","nodeType":"YulBlock","src":"2538:38:16","statements":[{"nativeSrc":"2552:14:16","nodeType":"YulAssignment","src":"2552:14:16","value":{"name":"slot","nativeSrc":"2562:4:16","nodeType":"YulIdentifier","src":"2562:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:16","nodeType":"YulIdentifier","src":"2552:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2037,"isOffset":false,"isSlot":true,"src":"2552:6:16","suffix":"slot","valueSize":1},{"declaration":2033,"isOffset":false,"isSlot":false,"src":"2562:4:16","valueSize":1}],"flags":["memory-safe"],"id":2039,"nodeType":"InlineAssembly","src":"2513:63:16"}]},"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"2328:86:16","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:16","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"slot","nameLocation":"2451:4:16","nodeType":"VariableDeclaration","scope":2041,"src":"2443:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:16"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"r","nameLocation":"2500:1:16","nodeType":"VariableDeclaration","scope":2041,"src":"2480:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1996_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2036,"nodeType":"UserDefinedTypeName","pathNode":{"id":2035,"name":"Bytes32Slot","nameLocations":["2480:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1996,"src":"2480:11:16"},"referencedDeclaration":1996,"src":"2480:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1996_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:16"},"scope":2108,"src":"2419:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2051,"nodeType":"Block","src":"2763:79:16","statements":[{"AST":{"nativeSrc":"2798:38:16","nodeType":"YulBlock","src":"2798:38:16","statements":[{"nativeSrc":"2812:14:16","nodeType":"YulAssignment","src":"2812:14:16","value":{"name":"slot","nativeSrc":"2822:4:16","nodeType":"YulIdentifier","src":"2822:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:16","nodeType":"YulIdentifier","src":"2812:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2048,"isOffset":false,"isSlot":true,"src":"2812:6:16","suffix":"slot","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"2822:4:16","valueSize":1}],"flags":["memory-safe"],"id":2050,"nodeType":"InlineAssembly","src":"2773:63:16"}]},"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"2588:86:16","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2052,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:16","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"slot","nameLocation":"2711:4:16","nodeType":"VariableDeclaration","scope":2052,"src":"2703:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:16"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"r","nameLocation":"2760:1:16","nodeType":"VariableDeclaration","scope":2052,"src":"2740:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1999_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2047,"nodeType":"UserDefinedTypeName","pathNode":{"id":2046,"name":"Uint256Slot","nameLocations":["2740:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1999,"src":"2740:11:16"},"referencedDeclaration":1999,"src":"2740:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1999_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:16"},"scope":2108,"src":"2679:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2062,"nodeType":"Block","src":"3020:79:16","statements":[{"AST":{"nativeSrc":"3055:38:16","nodeType":"YulBlock","src":"3055:38:16","statements":[{"nativeSrc":"3069:14:16","nodeType":"YulAssignment","src":"3069:14:16","value":{"name":"slot","nativeSrc":"3079:4:16","nodeType":"YulIdentifier","src":"3079:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:16","nodeType":"YulIdentifier","src":"3069:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2059,"isOffset":false,"isSlot":true,"src":"3069:6:16","suffix":"slot","valueSize":1},{"declaration":2055,"isOffset":false,"isSlot":false,"src":"3079:4:16","valueSize":1}],"flags":["memory-safe"],"id":2061,"nodeType":"InlineAssembly","src":"3030:63:16"}]},"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"2848:85:16","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2063,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:16","nodeType":"FunctionDefinition","parameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"slot","nameLocation":"2969:4:16","nodeType":"VariableDeclaration","scope":2063,"src":"2961:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:16"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"r","nameLocation":"3017:1:16","nodeType":"VariableDeclaration","scope":2063,"src":"2998:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2002_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2058,"nodeType":"UserDefinedTypeName","pathNode":{"id":2057,"name":"Int256Slot","nameLocations":["2998:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"2998:10:16"},"referencedDeclaration":2002,"src":"2998:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2002_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:16"},"scope":2108,"src":"2938:161:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2073,"nodeType":"Block","src":"3277:79:16","statements":[{"AST":{"nativeSrc":"3312:38:16","nodeType":"YulBlock","src":"3312:38:16","statements":[{"nativeSrc":"3326:14:16","nodeType":"YulAssignment","src":"3326:14:16","value":{"name":"slot","nativeSrc":"3336:4:16","nodeType":"YulIdentifier","src":"3336:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:16","nodeType":"YulIdentifier","src":"3326:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2070,"isOffset":false,"isSlot":true,"src":"3326:6:16","suffix":"slot","valueSize":1},{"declaration":2066,"isOffset":false,"isSlot":false,"src":"3336:4:16","valueSize":1}],"flags":["memory-safe"],"id":2072,"nodeType":"InlineAssembly","src":"3287:63:16"}]},"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"3105:85:16","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2074,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:16","nodeType":"FunctionDefinition","parameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"slot","nameLocation":"3226:4:16","nodeType":"VariableDeclaration","scope":2074,"src":"3218:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:16"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"r","nameLocation":"3274:1:16","nodeType":"VariableDeclaration","scope":2074,"src":"3255:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2005_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2069,"nodeType":"UserDefinedTypeName","pathNode":{"id":2068,"name":"StringSlot","nameLocations":["3255:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"3255:10:16"},"referencedDeclaration":2005,"src":"3255:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2005_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:16"},"scope":2108,"src":"3195:161:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2084,"nodeType":"Block","src":"3558:85:16","statements":[{"AST":{"nativeSrc":"3593:44:16","nodeType":"YulBlock","src":"3593:44:16","statements":[{"nativeSrc":"3607:20:16","nodeType":"YulAssignment","src":"3607:20:16","value":{"name":"store.slot","nativeSrc":"3617:10:16","nodeType":"YulIdentifier","src":"3617:10:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:16","nodeType":"YulIdentifier","src":"3607:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2081,"isOffset":false,"isSlot":true,"src":"3607:6:16","suffix":"slot","valueSize":1},{"declaration":2077,"isOffset":false,"isSlot":true,"src":"3617:10:16","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2083,"nodeType":"InlineAssembly","src":"3568:69:16"}]},"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"3362:101:16","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2085,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:16","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"store","nameLocation":"3506:5:16","nodeType":"VariableDeclaration","scope":2085,"src":"3491:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2076,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:16"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"r","nameLocation":"3555:1:16","nodeType":"VariableDeclaration","scope":2085,"src":"3536:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2005_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2080,"nodeType":"UserDefinedTypeName","pathNode":{"id":2079,"name":"StringSlot","nameLocations":["3536:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"3536:10:16"},"referencedDeclaration":2005,"src":"3536:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2005_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:16"},"scope":2108,"src":"3468:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2095,"nodeType":"Block","src":"3818:79:16","statements":[{"AST":{"nativeSrc":"3853:38:16","nodeType":"YulBlock","src":"3853:38:16","statements":[{"nativeSrc":"3867:14:16","nodeType":"YulAssignment","src":"3867:14:16","value":{"name":"slot","nativeSrc":"3877:4:16","nodeType":"YulIdentifier","src":"3877:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:16","nodeType":"YulIdentifier","src":"3867:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2092,"isOffset":false,"isSlot":true,"src":"3867:6:16","suffix":"slot","valueSize":1},{"declaration":2088,"isOffset":false,"isSlot":false,"src":"3877:4:16","valueSize":1}],"flags":["memory-safe"],"id":2094,"nodeType":"InlineAssembly","src":"3828:63:16"}]},"documentation":{"id":2086,"nodeType":"StructuredDocumentation","src":"3649:84:16","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2096,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:16","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"slot","nameLocation":"3768:4:16","nodeType":"VariableDeclaration","scope":2096,"src":"3760:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:16"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"r","nameLocation":"3815:1:16","nodeType":"VariableDeclaration","scope":2096,"src":"3797:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2008_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2091,"nodeType":"UserDefinedTypeName","pathNode":{"id":2090,"name":"BytesSlot","nameLocations":["3797:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2008,"src":"3797:9:16"},"referencedDeclaration":2008,"src":"3797:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2008_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:16"},"scope":2108,"src":"3738:159:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2106,"nodeType":"Block","src":"4094:85:16","statements":[{"AST":{"nativeSrc":"4129:44:16","nodeType":"YulBlock","src":"4129:44:16","statements":[{"nativeSrc":"4143:20:16","nodeType":"YulAssignment","src":"4143:20:16","value":{"name":"store.slot","nativeSrc":"4153:10:16","nodeType":"YulIdentifier","src":"4153:10:16"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:16","nodeType":"YulIdentifier","src":"4143:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2103,"isOffset":false,"isSlot":true,"src":"4143:6:16","suffix":"slot","valueSize":1},{"declaration":2099,"isOffset":false,"isSlot":true,"src":"4153:10:16","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2105,"nodeType":"InlineAssembly","src":"4104:69:16"}]},"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"3903:99:16","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2107,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:16","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"store","nameLocation":"4043:5:16","nodeType":"VariableDeclaration","scope":2107,"src":"4029:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2098,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:16"},"returnParameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"r","nameLocation":"4091:1:16","nodeType":"VariableDeclaration","scope":2107,"src":"4073:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2008_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2102,"nodeType":"UserDefinedTypeName","pathNode":{"id":2101,"name":"BytesSlot","nameLocations":["4073:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2008,"src":"4073:9:16"},"referencedDeclaration":2008,"src":"4073:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2008_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:16"},"scope":2108,"src":"4007:172:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2109,"src":"1407:2774:16","usedErrors":[],"usedEvents":[]}],"src":"193:3989:16"},"id":16},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5575],"SafeCast":[7340],"SignedMath":[7484],"Strings":[3308]},"id":3309,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2110,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3309,"sourceUnit":5576,"src":"127:37:17","symbolAliases":[{"foreign":{"id":2111,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"135:4:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2114,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3309,"sourceUnit":7341,"src":"165:45:17","symbolAliases":[{"foreign":{"id":2113,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3309,"sourceUnit":7485,"src":"211:49:17","symbolAliases":[{"foreign":{"id":2115,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"219:10:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"262:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":3308,"linearizedBaseContracts":[3308],"name":"Strings","nameLocation":"305:7:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2119,"libraryName":{"id":2118,"name":"SafeCast","nameLocations":["325:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":7340,"src":"325:8:17"},"nodeType":"UsingForDirective","src":"319:21:17"},{"constant":true,"id":2122,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:17","nodeType":"VariableDeclaration","scope":3308,"src":"346:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2120,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2125,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:17","nodeType":"VariableDeclaration","scope":3308,"src":"408:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2123,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"457:81:17","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2132,"name":"StringsInsufficientHexLength","nameLocation":"549:28:17","nodeType":"ErrorDefinition","parameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"value","nameLocation":"586:5:17","nodeType":"VariableDeclaration","scope":2132,"src":"578:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"length","nameLocation":"601:6:17","nodeType":"VariableDeclaration","scope":2132,"src":"593:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:17"},"src":"543:66:17"},{"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"615:108:17","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2135,"name":"StringsInvalidChar","nameLocation":"734:18:17","nodeType":"ErrorDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[],"src":"752:2:17"},"src":"728:27:17"},{"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"761:84:17","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2138,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:17","nodeType":"ErrorDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[],"src":"883:2:17"},"src":"850:36:17"},{"body":{"id":2185,"nodeType":"Block","src":"1058:561:17","statements":[{"id":2184,"nodeType":"UncheckedBlock","src":"1068:545:17","statements":[{"assignments":[2147],"declarations":[{"constant":false,"id":2147,"mutability":"mutable","name":"length","nameLocation":"1100:6:17","nodeType":"VariableDeclaration","scope":2184,"src":"1092:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2154,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"1120:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2148,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"1109:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5575_$","typeString":"type(library Math)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5347,"src":"1109:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:17"},{"assignments":[2156],"declarations":[{"constant":false,"id":2156,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:17","nodeType":"VariableDeclaration","scope":2184,"src":"1144:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2155,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2161,"initialValue":{"arguments":[{"id":2159,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"1178:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2157,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:17"},{"assignments":[2163],"declarations":[{"constant":false,"id":2163,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:17","nodeType":"VariableDeclaration","scope":2184,"src":"1199:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2164,"nodeType":"VariableDeclarationStatement","src":"1199:11:17"},{"AST":{"nativeSrc":"1249:67:17","nodeType":"YulBlock","src":"1249:67:17","statements":[{"nativeSrc":"1267:35:17","nodeType":"YulAssignment","src":"1267:35:17","value":{"arguments":[{"name":"buffer","nativeSrc":"1278:6:17","nodeType":"YulIdentifier","src":"1278:6:17"},{"arguments":[{"kind":"number","nativeSrc":"1290:2:17","nodeType":"YulLiteral","src":"1290:2:17","type":"","value":"32"},{"name":"length","nativeSrc":"1294:6:17","nodeType":"YulIdentifier","src":"1294:6:17"}],"functionName":{"name":"add","nativeSrc":"1286:3:17","nodeType":"YulIdentifier","src":"1286:3:17"},"nativeSrc":"1286:15:17","nodeType":"YulFunctionCall","src":"1286:15:17"}],"functionName":{"name":"add","nativeSrc":"1274:3:17","nodeType":"YulIdentifier","src":"1274:3:17"},"nativeSrc":"1274:28:17","nodeType":"YulFunctionCall","src":"1274:28:17"},"variableNames":[{"name":"ptr","nativeSrc":"1267:3:17","nodeType":"YulIdentifier","src":"1267:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2156,"isOffset":false,"isSlot":false,"src":"1278:6:17","valueSize":1},{"declaration":2147,"isOffset":false,"isSlot":false,"src":"1294:6:17","valueSize":1},{"declaration":2163,"isOffset":false,"isSlot":false,"src":"1267:3:17","valueSize":1}],"flags":["memory-safe"],"id":2165,"nodeType":"InlineAssembly","src":"1224:92:17"},{"body":{"id":2180,"nodeType":"Block","src":"1342:234:17","statements":[{"expression":{"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:17","subExpression":{"id":2167,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"1360:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2169,"nodeType":"ExpressionStatement","src":"1360:5:17"},{"AST":{"nativeSrc":"1408:86:17","nodeType":"YulBlock","src":"1408:86:17","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1438:3:17","nodeType":"YulIdentifier","src":"1438:3:17"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1452:5:17","nodeType":"YulIdentifier","src":"1452:5:17"},{"kind":"number","nativeSrc":"1459:2:17","nodeType":"YulLiteral","src":"1459:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1448:3:17","nodeType":"YulIdentifier","src":"1448:3:17"},"nativeSrc":"1448:14:17","nodeType":"YulFunctionCall","src":"1448:14:17"},{"name":"HEX_DIGITS","nativeSrc":"1464:10:17","nodeType":"YulIdentifier","src":"1464:10:17"}],"functionName":{"name":"byte","nativeSrc":"1443:4:17","nodeType":"YulIdentifier","src":"1443:4:17"},"nativeSrc":"1443:32:17","nodeType":"YulFunctionCall","src":"1443:32:17"}],"functionName":{"name":"mstore8","nativeSrc":"1430:7:17","nodeType":"YulIdentifier","src":"1430:7:17"},"nativeSrc":"1430:46:17","nodeType":"YulFunctionCall","src":"1430:46:17"},"nativeSrc":"1430:46:17","nodeType":"YulExpressionStatement","src":"1430:46:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2122,"isOffset":false,"isSlot":false,"src":"1464:10:17","valueSize":1},{"declaration":2163,"isOffset":false,"isSlot":false,"src":"1438:3:17","valueSize":1},{"declaration":2141,"isOffset":false,"isSlot":false,"src":"1452:5:17","valueSize":1}],"flags":["memory-safe"],"id":2170,"nodeType":"InlineAssembly","src":"1383:111:17"},{"expression":{"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"1511:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2174,"nodeType":"ExpressionStatement","src":"1511:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"1544:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2179,"nodeType":"IfStatement","src":"1540:21:17","trueBody":{"id":2178,"nodeType":"Break","src":"1556:5:17"}}]},"condition":{"hexValue":"74727565","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2181,"nodeType":"WhileStatement","src":"1329:247:17"},{"expression":{"id":2182,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"1596:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2145,"id":2183,"nodeType":"Return","src":"1589:13:17"}]}]},"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"892:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2186,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:17","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"value","nameLocation":"1013:5:17","nodeType":"VariableDeclaration","scope":2186,"src":"1005:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:17"},"returnParameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2186,"src":"1043:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2143,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:17"},"scope":3308,"src":"987:632:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2211,"nodeType":"Block","src":"1795:92:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"1826:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:17","trueExpression":{"hexValue":"2d","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"1872:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2204,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"1857:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7484_$","typeString":"type(library SignedMath)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7483,"src":"1857:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2203,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"1848:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2194,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:17","typeDescriptions":{}}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:17","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:17","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2193,"id":2210,"nodeType":"Return","src":"1805:75:17"}]},"documentation":{"id":2187,"nodeType":"StructuredDocumentation","src":"1625:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2212,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:17","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"value","nameLocation":"1750:5:17","nodeType":"VariableDeclaration","scope":2212,"src":"1743:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2188,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:17"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2212,"src":"1780:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2191,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:17"},"scope":3308,"src":"1719:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2231,"nodeType":"Block","src":"2066:100:17","statements":[{"id":2230,"nodeType":"UncheckedBlock","src":"2076:84:17","statements":[{"expression":{"arguments":[{"id":2221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"2119:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"2138:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2222,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"2126:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5575_$","typeString":"type(library Math)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5518,"src":"2126:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2220,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2232,2315,2335],"referencedDeclaration":2315,"src":"2107:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2219,"id":2229,"nodeType":"Return","src":"2100:49:17"}]}]},"documentation":{"id":2213,"nodeType":"StructuredDocumentation","src":"1893:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2232,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:17","nodeType":"FunctionDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"value","nameLocation":"2021:5:17","nodeType":"VariableDeclaration","scope":2232,"src":"2013:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:17"},"returnParameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2232,"src":"2051:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2217,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:17"},"scope":3308,"src":"1992:174:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2314,"nodeType":"Block","src":"2379:435:17","statements":[{"assignments":[2243],"declarations":[{"constant":false,"id":2243,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:17","nodeType":"VariableDeclaration","scope":2314,"src":"2389:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2245,"initialValue":{"id":2244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"2410:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:17"},{"assignments":[2247],"declarations":[{"constant":false,"id":2247,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:17","nodeType":"VariableDeclaration","scope":2314,"src":"2425:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2246,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2256,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2251,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"2461:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2248,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:17"},{"expression":{"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2257,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"2482:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2259,"indexExpression":{"hexValue":"30","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2262,"nodeType":"ExpressionStatement","src":"2482:15:17"},{"expression":{"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2263,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"2507:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2265,"indexExpression":{"hexValue":"31","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2268,"nodeType":"ExpressionStatement","src":"2507:15:17"},{"body":{"id":2297,"nodeType":"Block","src":"2577:95:17","statements":[{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2283,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"2591:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2285,"indexExpression":{"id":2284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2598:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2286,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2603:10:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2290,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2287,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"2614:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2292,"nodeType":"ExpressionStatement","src":"2591:40:17"},{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2293,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"2645:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ExpressionStatement","src":"2645:16:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2565:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2298,"initializationExpression":{"assignments":[2270],"declarations":[{"constant":false,"id":2270,"mutability":"mutable","name":"i","nameLocation":"2545:1:17","nodeType":"VariableDeclaration","scope":2298,"src":"2537:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2276,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2272,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"2553:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:17"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:17","subExpression":{"id":2280,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2574:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2282,"nodeType":"ExpressionStatement","src":"2572:3:17"},"nodeType":"ForStatement","src":"2532:140:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2299,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"2685:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2308,"nodeType":"IfStatement","src":"2681:96:17","trueBody":{"id":2307,"nodeType":"Block","src":"2702:75:17","statements":[{"errorCall":{"arguments":[{"id":2303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"2752:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2304,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"2759:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2302,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"2723:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2306,"nodeType":"RevertStatement","src":"2716:50:17"}]}},{"expression":{"arguments":[{"id":2311,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"2800:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2309,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:17","typeDescriptions":{}}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2241,"id":2313,"nodeType":"Return","src":"2786:21:17"}]},"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"2172:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:17","nodeType":"FunctionDefinition","parameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"value","nameLocation":"2318:5:17","nodeType":"VariableDeclaration","scope":2315,"src":"2310:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"length","nameLocation":"2333:6:17","nodeType":"VariableDeclaration","scope":2315,"src":"2325:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:17"},"returnParameters":{"id":2241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"2364:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2239,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:17"},"scope":3308,"src":"2289:525:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2334,"nodeType":"Block","src":"3046:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2328,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"3091:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2326,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:17","typeDescriptions":{}}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:17","typeDescriptions":{}}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2331,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"3099:14:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2323,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2232,2315,2335],"referencedDeclaration":2315,"src":"3063:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2322,"id":2333,"nodeType":"Return","src":"3056:58:17"}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"2820:148:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:17","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"addr","nameLocation":"3002:4:17","nodeType":"VariableDeclaration","scope":2335,"src":"2994:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2317,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:17"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2335,"src":"3031:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2320,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:17"},"scope":3308,"src":"2973:148:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2399,"nodeType":"Block","src":"3378:642:17","statements":[{"assignments":[2344],"declarations":[{"constant":false,"id":2344,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:17","nodeType":"VariableDeclaration","scope":2399,"src":"3388:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2343,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2351,"initialValue":{"arguments":[{"arguments":[{"id":2348,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"3428:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2347,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2232,2315,2335],"referencedDeclaration":2335,"src":"3416:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2345,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:17","typeDescriptions":{}}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:17"},{"assignments":[2353],"declarations":[{"constant":false,"id":2353,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:17","nodeType":"VariableDeclaration","scope":2399,"src":"3519:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2354,"nodeType":"VariableDeclarationStatement","src":"3519:17:17"},{"AST":{"nativeSrc":"3571:78:17","nodeType":"YulBlock","src":"3571:78:17","statements":[{"nativeSrc":"3585:54:17","nodeType":"YulAssignment","src":"3585:54:17","value":{"arguments":[{"kind":"number","nativeSrc":"3602:2:17","nodeType":"YulLiteral","src":"3602:2:17","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3620:6:17","nodeType":"YulIdentifier","src":"3620:6:17"},{"kind":"number","nativeSrc":"3628:4:17","nodeType":"YulLiteral","src":"3628:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3616:3:17","nodeType":"YulIdentifier","src":"3616:3:17"},"nativeSrc":"3616:17:17","nodeType":"YulFunctionCall","src":"3616:17:17"},{"kind":"number","nativeSrc":"3635:2:17","nodeType":"YulLiteral","src":"3635:2:17","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3606:9:17","nodeType":"YulIdentifier","src":"3606:9:17"},"nativeSrc":"3606:32:17","nodeType":"YulFunctionCall","src":"3606:32:17"}],"functionName":{"name":"shr","nativeSrc":"3598:3:17","nodeType":"YulIdentifier","src":"3598:3:17"},"nativeSrc":"3598:41:17","nodeType":"YulFunctionCall","src":"3598:41:17"},"variableNames":[{"name":"hashValue","nativeSrc":"3585:9:17","nodeType":"YulIdentifier","src":"3585:9:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2344,"isOffset":false,"isSlot":false,"src":"3620:6:17","valueSize":1},{"declaration":2353,"isOffset":false,"isSlot":false,"src":"3585:9:17","valueSize":1}],"flags":["memory-safe"],"id":2355,"nodeType":"InlineAssembly","src":"3546:103:17"},{"body":{"id":2392,"nodeType":"Block","src":"3692:291:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2366,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"3798:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2373,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"3827:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2375,"indexExpression":{"id":2374,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"3834:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2371,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:17","typeDescriptions":{}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2387,"nodeType":"IfStatement","src":"3794:150:17","trueBody":{"id":2386,"nodeType":"Block","src":"3844:100:17","statements":[{"expression":{"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2380,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"3912:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2382,"indexExpression":{"id":2381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"3919:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2385,"nodeType":"ExpressionStatement","src":"3912:17:17"}]}},{"expression":{"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2388,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"3957:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2391,"nodeType":"ExpressionStatement","src":"3957:15:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"3680:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2393,"initializationExpression":{"assignments":[2357],"declarations":[{"constant":false,"id":2357,"mutability":"mutable","name":"i","nameLocation":"3672:1:17","nodeType":"VariableDeclaration","scope":2393,"src":"3664:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2359,"initialValue":{"hexValue":"3431","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:17","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:17"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:17","subExpression":{"id":2363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"3689:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2365,"nodeType":"ExpressionStatement","src":"3687:3:17"},"nodeType":"ForStatement","src":"3659:324:17"},{"expression":{"arguments":[{"id":2396,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"4006:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2394,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:17","typeDescriptions":{}}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2342,"id":2398,"nodeType":"Return","src":"3992:21:17"}]},"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"3127:165:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:17","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"addr","nameLocation":"3334:4:17","nodeType":"VariableDeclaration","scope":2400,"src":"3326:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2337,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:17"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2400,"src":"3363:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2340,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:17"},"scope":3308,"src":"3297:723:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2436,"nodeType":"Block","src":"4175:104:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"4198:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2410,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:17","typeDescriptions":{}}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:17","memberName":"length","nodeType":"MemberAccess","src":"4192:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"4217:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2415,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:17","typeDescriptions":{}}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:17","memberName":"length","nodeType":"MemberAccess","src":"4211:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"4246:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2422,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:17","typeDescriptions":{}}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2421,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2430,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"4269:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2428,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:17","typeDescriptions":{}}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2427,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2409,"id":2435,"nodeType":"Return","src":"4185:87:17"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"4026:66:17","text":" @dev Returns true if the two strings are equal."},"id":2437,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:17","nodeType":"FunctionDefinition","parameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"a","nameLocation":"4126:1:17","nodeType":"VariableDeclaration","scope":2437,"src":"4112:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2402,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"b","nameLocation":"4143:1:17","nodeType":"VariableDeclaration","scope":2437,"src":"4129:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2404,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:17"},"returnParameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2437,"src":"4169:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2407,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:17"},"scope":3308,"src":"4097:182:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2455,"nodeType":"Block","src":"4576:64:17","statements":[{"expression":{"arguments":[{"id":2446,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"4603:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2450,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"4619:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2448,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:17","typeDescriptions":{}}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:17","memberName":"length","nodeType":"MemberAccess","src":"4613:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2445,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2456,2487],"referencedDeclaration":2487,"src":"4593:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2444,"id":2454,"nodeType":"Return","src":"4586:47:17"}]},"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"4285:214:17","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2456,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:17","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"input","nameLocation":"4537:5:17","nodeType":"VariableDeclaration","scope":2456,"src":"4523:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2439,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:17"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2456,"src":"4567:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:17"},"scope":3308,"src":"4504:136:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2486,"nodeType":"Block","src":"5038:153:17","statements":[{"assignments":[2469,2471],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"success","nameLocation":"5054:7:17","nodeType":"VariableDeclaration","scope":2486,"src":"5049:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2468,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"value","nameLocation":"5071:5:17","nodeType":"VariableDeclaration","scope":2486,"src":"5063:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2477,"initialValue":{"arguments":[{"id":2473,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"5093:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2474,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"5100:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2475,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"5107:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2472,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2508,2545],"referencedDeclaration":2545,"src":"5080:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:17"},{"condition":{"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:17","subExpression":{"id":2478,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"5126:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2483,"nodeType":"IfStatement","src":"5121:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2480,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"5142:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2482,"nodeType":"RevertStatement","src":"5135:27:17"}},{"expression":{"id":2484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5179:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2467,"id":2485,"nodeType":"Return","src":"5172:12:17"}]},"documentation":{"id":2457,"nodeType":"StructuredDocumentation","src":"4646:287:17","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2487,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:17","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"input","nameLocation":"4971:5:17","nodeType":"VariableDeclaration","scope":2487,"src":"4957:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2458,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2461,"mutability":"mutable","name":"begin","nameLocation":"4986:5:17","nodeType":"VariableDeclaration","scope":2487,"src":"4978:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"end","nameLocation":"5001:3:17","nodeType":"VariableDeclaration","scope":2487,"src":"4993:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:17"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2487,"src":"5029:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:17"},"scope":3308,"src":"4938:253:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2507,"nodeType":"Block","src":"5512:83:17","statements":[{"expression":{"arguments":[{"id":2498,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"5558:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2502,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"5574:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2500,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:17","typeDescriptions":{}}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:17","memberName":"length","nodeType":"MemberAccess","src":"5568:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2497,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"5529:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2496,"id":2506,"nodeType":"Return","src":"5522:66:17"}]},"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"5197:215:17","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2508,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:17","nodeType":"FunctionDefinition","parameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"input","nameLocation":"5453:5:17","nodeType":"VariableDeclaration","scope":2508,"src":"5439:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2489,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:17"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"success","nameLocation":"5488:7:17","nodeType":"VariableDeclaration","scope":2508,"src":"5483:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2492,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"value","nameLocation":"5505:5:17","nodeType":"VariableDeclaration","scope":2508,"src":"5497:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:17"},"scope":3308,"src":"5417:178:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2544,"nodeType":"Block","src":"5997:144:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2522,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"6011:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2525,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"6023:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2523,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:17","typeDescriptions":{}}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:17","memberName":"length","nodeType":"MemberAccess","src":"6017:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2529,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"6040:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2530,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"6048:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2537,"nodeType":"IfStatement","src":"6007:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2521,"id":2536,"nodeType":"Return","src":"6053:17:17"}},{"expression":{"arguments":[{"id":2539,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"6116:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2540,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"6123:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2541,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"6130:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2538,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"6087:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2521,"id":2543,"nodeType":"Return","src":"6080:54:17"}]},"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"5601:238:17","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2545,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:17","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"input","nameLocation":"5889:5:17","nodeType":"VariableDeclaration","scope":2545,"src":"5875:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2510,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"begin","nameLocation":"5912:5:17","nodeType":"VariableDeclaration","scope":2545,"src":"5904:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2515,"mutability":"mutable","name":"end","nameLocation":"5935:3:17","nodeType":"VariableDeclaration","scope":2545,"src":"5927:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:17"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"success","nameLocation":"5973:7:17","nodeType":"VariableDeclaration","scope":2545,"src":"5968:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2517,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"value","nameLocation":"5990:5:17","nodeType":"VariableDeclaration","scope":2545,"src":"5982:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:17"},"scope":3308,"src":"5844:297:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2614,"nodeType":"Block","src":"6521:347:17","statements":[{"assignments":[2560],"declarations":[{"constant":false,"id":2560,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:17","nodeType":"VariableDeclaration","scope":2614,"src":"6531:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2559,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2565,"initialValue":{"arguments":[{"id":2563,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"6559:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2561,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:17","typeDescriptions":{}}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:17"},{"assignments":[2567],"declarations":[{"constant":false,"id":2567,"mutability":"mutable","name":"result","nameLocation":"6584:6:17","nodeType":"VariableDeclaration","scope":2614,"src":"6576:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2569,"initialValue":{"hexValue":"30","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:17"},{"body":{"id":2608,"nodeType":"Block","src":"6642:189:17","statements":[{"assignments":[2581],"declarations":[{"constant":false,"id":2581,"mutability":"mutable","name":"chr","nameLocation":"6662:3:17","nodeType":"VariableDeclaration","scope":2608,"src":"6656:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2580,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2591,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2586,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"6711:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6719:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2585,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"6688:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2583,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:17","typeDescriptions":{}}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2582,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"6668:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2592,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"6741:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2599,"nodeType":"IfStatement","src":"6737:30:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2558,"id":2598,"nodeType":"Return","src":"6750:17:17"}},{"expression":{"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"6781:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2603,"nodeType":"ExpressionStatement","src":"6781:12:17"},{"expression":{"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"6807:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2605,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"6817:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2607,"nodeType":"ExpressionStatement","src":"6807:13:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2574,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6628:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2575,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"6632:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2609,"initializationExpression":{"assignments":[2571],"declarations":[{"constant":false,"id":2571,"mutability":"mutable","name":"i","nameLocation":"6617:1:17","nodeType":"VariableDeclaration","scope":2609,"src":"6609:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2573,"initialValue":{"id":2572,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"6621:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:17","subExpression":{"id":2577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6639:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2579,"nodeType":"ExpressionStatement","src":"6637:3:17"},"nodeType":"ForStatement","src":"6604:227:17"},{"expression":{"components":[{"hexValue":"74727565","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"6854:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2558,"id":2613,"nodeType":"Return","src":"6840:21:17"}]},"documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"6147:201:17","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:17","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"input","nameLocation":"6414:5:17","nodeType":"VariableDeclaration","scope":2615,"src":"6400:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2547,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"begin","nameLocation":"6437:5:17","nodeType":"VariableDeclaration","scope":2615,"src":"6429:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"end","nameLocation":"6460:3:17","nodeType":"VariableDeclaration","scope":2615,"src":"6452:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:17"},"returnParameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"success","nameLocation":"6497:7:17","nodeType":"VariableDeclaration","scope":2615,"src":"6492:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2554,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"value","nameLocation":"6514:5:17","nodeType":"VariableDeclaration","scope":2615,"src":"6506:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:17"},"scope":3308,"src":"6353:515:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2633,"nodeType":"Block","src":"7165:63:17","statements":[{"expression":{"arguments":[{"id":2624,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"7191:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2628,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"7207:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2626,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:17","typeDescriptions":{}}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:17","memberName":"length","nodeType":"MemberAccess","src":"7201:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2623,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2634,2665],"referencedDeclaration":2665,"src":"7182:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2622,"id":2632,"nodeType":"Return","src":"7175:46:17"}]},"documentation":{"id":2616,"nodeType":"StructuredDocumentation","src":"6874:216:17","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:17","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"input","nameLocation":"7127:5:17","nodeType":"VariableDeclaration","scope":2634,"src":"7113:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2617,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:17"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"7157:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2620,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:17"},"scope":3308,"src":"7095:133:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2664,"nodeType":"Block","src":"7633:151:17","statements":[{"assignments":[2647,2649],"declarations":[{"constant":false,"id":2647,"mutability":"mutable","name":"success","nameLocation":"7649:7:17","nodeType":"VariableDeclaration","scope":2664,"src":"7644:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2646,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"value","nameLocation":"7665:5:17","nodeType":"VariableDeclaration","scope":2664,"src":"7658:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2648,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2655,"initialValue":{"arguments":[{"id":2651,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7686:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2652,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"7693:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2653,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"7700:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2650,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2686,2728],"referencedDeclaration":2728,"src":"7674:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:17"},{"condition":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:17","subExpression":{"id":2656,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"7719:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2661,"nodeType":"IfStatement","src":"7714:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2658,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"7735:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2660,"nodeType":"RevertStatement","src":"7728:27:17"}},{"expression":{"id":2662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7772:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2645,"id":2663,"nodeType":"Return","src":"7765:12:17"}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"7234:296:17","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:17","nodeType":"FunctionDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"input","nameLocation":"7567:5:17","nodeType":"VariableDeclaration","scope":2665,"src":"7553:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2636,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"begin","nameLocation":"7582:5:17","nodeType":"VariableDeclaration","scope":2665,"src":"7574:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2641,"mutability":"mutable","name":"end","nameLocation":"7597:3:17","nodeType":"VariableDeclaration","scope":2665,"src":"7589:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:17"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2665,"src":"7625:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2643,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:17"},"scope":3308,"src":"7535:249:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2685,"nodeType":"Block","src":"8175:82:17","statements":[{"expression":{"arguments":[{"id":2676,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"8220:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2680,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"8236:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2678,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:17","typeDescriptions":{}}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:17","memberName":"length","nodeType":"MemberAccess","src":"8230:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2675,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"8192:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2674,"id":2684,"nodeType":"Return","src":"8185:65:17"}]},"documentation":{"id":2666,"nodeType":"StructuredDocumentation","src":"7790:287:17","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2686,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:17","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"input","nameLocation":"8117:5:17","nodeType":"VariableDeclaration","scope":2686,"src":"8103:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2667,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:17"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"success","nameLocation":"8152:7:17","nodeType":"VariableDeclaration","scope":2686,"src":"8147:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2670,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"value","nameLocation":"8168:5:17","nodeType":"VariableDeclaration","scope":2686,"src":"8161:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2672,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:17"},"scope":3308,"src":"8082:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2691,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:17","nodeType":"VariableDeclaration","scope":3308,"src":"8263:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2687,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2727,"nodeType":"Block","src":"8779:143:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2705,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8793:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2708,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"8805:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2706,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:17","typeDescriptions":{}}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:17","memberName":"length","nodeType":"MemberAccess","src":"8799:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2712,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"8822:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2713,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8830:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2720,"nodeType":"IfStatement","src":"8789:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2704,"id":2719,"nodeType":"Return","src":"8835:17:17"}},{"expression":{"arguments":[{"id":2722,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"8897:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2723,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"8904:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2724,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8911:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2721,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"8869:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2704,"id":2726,"nodeType":"Return","src":"8862:53:17"}]},"documentation":{"id":2692,"nodeType":"StructuredDocumentation","src":"8320:303:17","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2728,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:17","nodeType":"FunctionDefinition","parameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"input","nameLocation":"8672:5:17","nodeType":"VariableDeclaration","scope":2728,"src":"8658:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2693,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"begin","nameLocation":"8695:5:17","nodeType":"VariableDeclaration","scope":2728,"src":"8687:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"end","nameLocation":"8718:3:17","nodeType":"VariableDeclaration","scope":2728,"src":"8710:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:17"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"success","nameLocation":"8756:7:17","nodeType":"VariableDeclaration","scope":2728,"src":"8751:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2700,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"value","nameLocation":"8772:5:17","nodeType":"VariableDeclaration","scope":2728,"src":"8765:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2702,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:17"},"scope":3308,"src":"8628:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2848,"nodeType":"Block","src":"9299:812:17","statements":[{"assignments":[2743],"declarations":[{"constant":false,"id":2743,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:17","nodeType":"VariableDeclaration","scope":2848,"src":"9309:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2742,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2748,"initialValue":{"arguments":[{"id":2746,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"9337:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2744,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:17","typeDescriptions":{}}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:17"},{"assignments":[2750],"declarations":[{"constant":false,"id":2750,"mutability":"mutable","name":"sign","nameLocation":"9407:4:17","nodeType":"VariableDeclaration","scope":2848,"src":"9400:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2749,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2766,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2751,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"9414:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2752,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"9423:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2761,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9471:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2762,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"9479:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2760,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"9448:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2758,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:17","typeDescriptions":{}}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:17","trueExpression":{"arguments":[{"hexValue":"30","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2754,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:17","typeDescriptions":{}}},"id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:17"},{"assignments":[2768],"declarations":[{"constant":false,"id":2768,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:17","nodeType":"VariableDeclaration","scope":2848,"src":"9567:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2767,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2775,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2769,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"9587:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2770,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:17","typeDescriptions":{}}},"id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:17"},{"assignments":[2777],"declarations":[{"constant":false,"id":2777,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:17","nodeType":"VariableDeclaration","scope":2848,"src":"9616:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2776,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2784,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"9636:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2779,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:17","typeDescriptions":{}}},"id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:17"},{"assignments":[2786],"declarations":[{"constant":false,"id":2786,"mutability":"mutable","name":"offset","nameLocation":"9673:6:17","nodeType":"VariableDeclaration","scope":2848,"src":"9665:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2793,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"9683:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2788,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"9699:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"9682:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:17"},{"assignments":[2795,2797],"declarations":[{"constant":false,"id":2795,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:17","nodeType":"VariableDeclaration","scope":2848,"src":"9733:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2794,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:17","nodeType":"VariableDeclaration","scope":2848,"src":"9750:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2796,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2805,"initialValue":{"arguments":[{"id":2799,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"9783:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"9790:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2801,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"9798:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2803,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"9806:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2798,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2508,2545],"referencedDeclaration":2545,"src":"9770:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2806,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"9825:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2807,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"9839:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2808,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"9850:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"9967:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2827,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"9981:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"9997:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2830,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"10009:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2741,"id":2845,"nodeType":"Return","src":"10087:17:17"},"id":2846,"nodeType":"IfStatement","src":"9963:141:17","trueBody":{"id":2841,"nodeType":"Block","src":"10025:56:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2835,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:17","memberName":"min","nodeType":"MemberAccess","src":"10053:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2741,"id":2840,"nodeType":"Return","src":"10039:31:17"}]}},"id":2847,"nodeType":"IfStatement","src":"9821:283:17","trueBody":{"id":2825,"nodeType":"Block","src":"9866:91:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2812,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"9894:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2820,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"9936:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2818,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:17","typeDescriptions":{}}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:17","trueExpression":{"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:17","subExpression":{"arguments":[{"id":2815,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"9917:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2813,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:17","typeDescriptions":{}}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2741,"id":2824,"nodeType":"Return","src":"9880:66:17"}]}}]},"documentation":{"id":2729,"nodeType":"StructuredDocumentation","src":"8928:200:17","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:17","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"input","nameLocation":"9193:5:17","nodeType":"VariableDeclaration","scope":2849,"src":"9179:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2730,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2733,"mutability":"mutable","name":"begin","nameLocation":"9216:5:17","nodeType":"VariableDeclaration","scope":2849,"src":"9208:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2735,"mutability":"mutable","name":"end","nameLocation":"9239:3:17","nodeType":"VariableDeclaration","scope":2849,"src":"9231:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:17"},"returnParameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"success","nameLocation":"9276:7:17","nodeType":"VariableDeclaration","scope":2849,"src":"9271:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2737,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"value","nameLocation":"9292:5:17","nodeType":"VariableDeclaration","scope":2849,"src":"9285:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2739,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:17"},"scope":3308,"src":"9133:978:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2867,"nodeType":"Block","src":"10456:67:17","statements":[{"expression":{"arguments":[{"id":2858,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"10486:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2862,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"10502:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2860,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:17","typeDescriptions":{}}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:17","memberName":"length","nodeType":"MemberAccess","src":"10496:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2857,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2868,2899],"referencedDeclaration":2899,"src":"10473:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2856,"id":2866,"nodeType":"Return","src":"10466:50:17"}]},"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"10117:259:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2868,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:17","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"input","nameLocation":"10417:5:17","nodeType":"VariableDeclaration","scope":2868,"src":"10403:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2851,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:17"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"10447:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2854,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:17"},"scope":3308,"src":"10381:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2898,"nodeType":"Block","src":"10937:156:17","statements":[{"assignments":[2881,2883],"declarations":[{"constant":false,"id":2881,"mutability":"mutable","name":"success","nameLocation":"10953:7:17","nodeType":"VariableDeclaration","scope":2898,"src":"10948:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2880,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2883,"mutability":"mutable","name":"value","nameLocation":"10970:5:17","nodeType":"VariableDeclaration","scope":2898,"src":"10962:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2889,"initialValue":{"arguments":[{"id":2885,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"10995:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2886,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"11002:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2887,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"11009:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2884,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2920,2957],"referencedDeclaration":2957,"src":"10979:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:17"},{"condition":{"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:17","subExpression":{"id":2890,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"11028:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2895,"nodeType":"IfStatement","src":"11023:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2892,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"11044:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2894,"nodeType":"RevertStatement","src":"11037:27:17"}},{"expression":{"id":2896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"11081:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2879,"id":2897,"nodeType":"Return","src":"11074:12:17"}]},"documentation":{"id":2869,"nodeType":"StructuredDocumentation","src":"10529:300:17","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2899,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:17","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"input","nameLocation":"10870:5:17","nodeType":"VariableDeclaration","scope":2899,"src":"10856:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2870,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"begin","nameLocation":"10885:5:17","nodeType":"VariableDeclaration","scope":2899,"src":"10877:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"end","nameLocation":"10900:3:17","nodeType":"VariableDeclaration","scope":2899,"src":"10892:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:17"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2899,"src":"10928:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:17"},"scope":3308,"src":"10834:259:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2919,"nodeType":"Block","src":"11420:86:17","statements":[{"expression":{"arguments":[{"id":2910,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"11469:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2914,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"11485:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2912,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:17","typeDescriptions":{}}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:17","memberName":"length","nodeType":"MemberAccess","src":"11479:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2909,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"11437:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2908,"id":2918,"nodeType":"Return","src":"11430:69:17"}]},"documentation":{"id":2900,"nodeType":"StructuredDocumentation","src":"11099:218:17","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2920,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:17","nodeType":"FunctionDefinition","parameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"input","nameLocation":"11361:5:17","nodeType":"VariableDeclaration","scope":2920,"src":"11347:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2901,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:17"},"returnParameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"success","nameLocation":"11396:7:17","nodeType":"VariableDeclaration","scope":2920,"src":"11391:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2904,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"value","nameLocation":"11413:5:17","nodeType":"VariableDeclaration","scope":2920,"src":"11405:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:17"},"scope":3308,"src":"11322:184:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2956,"nodeType":"Block","src":"11914:147:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2934,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"11928:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2937,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"11940:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2935,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:17","typeDescriptions":{}}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:17","memberName":"length","nodeType":"MemberAccess","src":"11934:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"11957:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2942,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"11965:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2949,"nodeType":"IfStatement","src":"11924:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2933,"id":2948,"nodeType":"Return","src":"11970:17:17"}},{"expression":{"arguments":[{"id":2951,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"12036:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2952,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12043:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2953,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"12050:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2950,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"12004:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2933,"id":2955,"nodeType":"Return","src":"11997:57:17"}]},"documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"11512:241:17","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2957,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:17","nodeType":"FunctionDefinition","parameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"input","nameLocation":"11806:5:17","nodeType":"VariableDeclaration","scope":2957,"src":"11792:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2922,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2925,"mutability":"mutable","name":"begin","nameLocation":"11829:5:17","nodeType":"VariableDeclaration","scope":2957,"src":"11821:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"end","nameLocation":"11852:3:17","nodeType":"VariableDeclaration","scope":2957,"src":"11844:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:17"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"success","nameLocation":"11890:7:17","nodeType":"VariableDeclaration","scope":2957,"src":"11885:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2929,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"value","nameLocation":"11907:5:17","nodeType":"VariableDeclaration","scope":2957,"src":"11899:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:17"},"scope":3308,"src":"11758:303:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3059,"nodeType":"Block","src":"12447:880:17","statements":[{"assignments":[2972],"declarations":[{"constant":false,"id":2972,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:17","nodeType":"VariableDeclaration","scope":3059,"src":"12457:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2971,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2977,"initialValue":{"arguments":[{"id":2975,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"12485:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2973,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:17","typeDescriptions":{}}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:17"},{"assignments":[2979],"declarations":[{"constant":false,"id":2979,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:17","nodeType":"VariableDeclaration","scope":3059,"src":"12539:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2978,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2999,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"12557:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"12563:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2989,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"12607:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2990,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"12615:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2988,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"12584:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2986,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:17","typeDescriptions":{}}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2993,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:17","typeDescriptions":{}}},"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:17"},{"assignments":[3001],"declarations":[{"constant":false,"id":3001,"mutability":"mutable","name":"offset","nameLocation":"12727:6:17","nodeType":"VariableDeclaration","scope":3059,"src":"12719:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3007,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3002,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"12736:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"12736:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:17"},{"assignments":[3009],"declarations":[{"constant":false,"id":3009,"mutability":"mutable","name":"result","nameLocation":"12777:6:17","nodeType":"VariableDeclaration","scope":3059,"src":"12769:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3011,"initialValue":{"hexValue":"30","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:17"},{"body":{"id":3053,"nodeType":"Block","src":"12844:446:17","statements":[{"assignments":[3025],"declarations":[{"constant":false,"id":3025,"mutability":"mutable","name":"chr","nameLocation":"12864:3:17","nodeType":"VariableDeclaration","scope":3053,"src":"12858:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3024,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3035,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3030,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"12913:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"12921:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3029,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"12890:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3027,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:17","typeDescriptions":{}}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3026,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"12870:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3036,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"12943:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3043,"nodeType":"IfStatement","src":"12939:31:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3041,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2970,"id":3042,"nodeType":"Return","src":"12953:17:17"}},{"expression":{"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"12984:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3047,"nodeType":"ExpressionStatement","src":"12984:12:17"},{"id":3052,"nodeType":"UncheckedBlock","src":"13010:270:17","statements":[{"expression":{"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"13252:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3049,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"13262:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3051,"nodeType":"ExpressionStatement","src":"13252:13:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"12830:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3019,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"12834:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3054,"initializationExpression":{"assignments":[3013],"declarations":[{"constant":false,"id":3013,"mutability":"mutable","name":"i","nameLocation":"12810:1:17","nodeType":"VariableDeclaration","scope":3054,"src":"12802:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3017,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3014,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"12814:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3015,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"12822:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:17","subExpression":{"id":3021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"12841:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3023,"nodeType":"ExpressionStatement","src":"12839:3:17"},"nodeType":"ForStatement","src":"12797:493:17"},{"expression":{"components":[{"hexValue":"74727565","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"13313:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2970,"id":3058,"nodeType":"Return","src":"13299:21:17"}]},"documentation":{"id":2958,"nodeType":"StructuredDocumentation","src":"12067:204:17","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3060,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:17","nodeType":"FunctionDefinition","parameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"input","nameLocation":"12340:5:17","nodeType":"VariableDeclaration","scope":3060,"src":"12326:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2959,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2962,"mutability":"mutable","name":"begin","nameLocation":"12363:5:17","nodeType":"VariableDeclaration","scope":3060,"src":"12355:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2961,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"end","nameLocation":"12386:3:17","nodeType":"VariableDeclaration","scope":3060,"src":"12378:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:17"},"returnParameters":{"id":2970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"success","nameLocation":"12423:7:17","nodeType":"VariableDeclaration","scope":3060,"src":"12418:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2966,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2969,"mutability":"mutable","name":"value","nameLocation":"12440:5:17","nodeType":"VariableDeclaration","scope":3060,"src":"12432:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:17"},"scope":3308,"src":"12276:1051:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3078,"nodeType":"Block","src":"13625:67:17","statements":[{"expression":{"arguments":[{"id":3069,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"13655:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3073,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"13671:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3071,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:17","typeDescriptions":{}}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:17","memberName":"length","nodeType":"MemberAccess","src":"13665:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3068,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3079,3110],"referencedDeclaration":3110,"src":"13642:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3067,"id":3077,"nodeType":"Return","src":"13635:50:17"}]},"documentation":{"id":3061,"nodeType":"StructuredDocumentation","src":"13333:212:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3079,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:17","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"input","nameLocation":"13586:5:17","nodeType":"VariableDeclaration","scope":3079,"src":"13572:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3062,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:17"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3079,"src":"13616:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:17"},"scope":3308,"src":"13550:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3109,"nodeType":"Block","src":"14058:165:17","statements":[{"assignments":[3092,3094],"declarations":[{"constant":false,"id":3092,"mutability":"mutable","name":"success","nameLocation":"14074:7:17","nodeType":"VariableDeclaration","scope":3109,"src":"14069:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3091,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"value","nameLocation":"14091:5:17","nodeType":"VariableDeclaration","scope":3109,"src":"14083:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3093,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3100,"initialValue":{"arguments":[{"id":3096,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"14116:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3097,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"14123:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3098,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"14130:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3095,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3131,3235],"referencedDeclaration":3235,"src":"14100:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:17"},{"condition":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:17","subExpression":{"id":3101,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"14149:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3106,"nodeType":"IfStatement","src":"14144:50:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3103,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"14165:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3105,"nodeType":"RevertStatement","src":"14158:36:17"}},{"expression":{"id":3107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"14211:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3090,"id":3108,"nodeType":"Return","src":"14204:12:17"}]},"documentation":{"id":3080,"nodeType":"StructuredDocumentation","src":"13698:252:17","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3110,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:17","nodeType":"FunctionDefinition","parameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"input","nameLocation":"13991:5:17","nodeType":"VariableDeclaration","scope":3110,"src":"13977:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3081,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"begin","nameLocation":"14006:5:17","nodeType":"VariableDeclaration","scope":3110,"src":"13998:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3083,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"end","nameLocation":"14021:3:17","nodeType":"VariableDeclaration","scope":3110,"src":"14013:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:17"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3110,"src":"14049:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3088,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:17"},"scope":3308,"src":"13955:268:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3130,"nodeType":"Block","src":"14523:70:17","statements":[{"expression":{"arguments":[{"id":3121,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"14556:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3125,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"14572:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3123,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:17","typeDescriptions":{}}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:17","memberName":"length","nodeType":"MemberAccess","src":"14566:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3120,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3131,3235],"referencedDeclaration":3235,"src":"14540:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3119,"id":3129,"nodeType":"Return","src":"14533:53:17"}]},"documentation":{"id":3111,"nodeType":"StructuredDocumentation","src":"14229:191:17","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3131,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:17","nodeType":"FunctionDefinition","parameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"input","nameLocation":"14464:5:17","nodeType":"VariableDeclaration","scope":3131,"src":"14450:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3112,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:17"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"success","nameLocation":"14499:7:17","nodeType":"VariableDeclaration","scope":3131,"src":"14494:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3115,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"value","nameLocation":"14516:5:17","nodeType":"VariableDeclaration","scope":3131,"src":"14508:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3117,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:17"},"scope":3308,"src":"14425:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3234,"nodeType":"Block","src":"14963:733:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3145,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"14977:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3148,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"14989:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3146,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:17","typeDescriptions":{}}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:17","memberName":"length","nodeType":"MemberAccess","src":"14983:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"15006:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3153,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"15014:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3163,"nodeType":"IfStatement","src":"14973:72:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3157,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:17","typeDescriptions":{}}},"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3144,"id":3162,"nodeType":"Return","src":"15019:26:17"}},{"assignments":[3165],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:17","nodeType":"VariableDeclaration","scope":3234,"src":"15056:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3164,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3188,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3166,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"15074:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3167,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"15080:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3177,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"15130:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3175,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:17","typeDescriptions":{}}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3179,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"15138:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3174,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"15101:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3172,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:17","typeDescriptions":{}}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3182,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:17","typeDescriptions":{}}},"id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:17"},{"assignments":[3190],"declarations":[{"constant":false,"id":3190,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:17","nodeType":"VariableDeclaration","scope":3234,"src":"15242:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3198,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3192,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"15272:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"15272:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3199,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"15359:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3200,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"15365:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3202,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"15374:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3232,"nodeType":"Block","src":"15639:51:17","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3226,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:17","typeDescriptions":{}}},"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3144,"id":3231,"nodeType":"Return","src":"15653:26:17"}]},"id":3233,"nodeType":"IfStatement","src":"15355:335:17","trueBody":{"id":3224,"nodeType":"Block","src":"15390:243:17","statements":[{"assignments":[3205,3207],"declarations":[{"constant":false,"id":3205,"mutability":"mutable","name":"s","nameLocation":"15511:1:17","nodeType":"VariableDeclaration","scope":3224,"src":"15506:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3204,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"v","nameLocation":"15522:1:17","nodeType":"VariableDeclaration","scope":3224,"src":"15514:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3213,"initialValue":{"arguments":[{"id":3209,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"15559:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3210,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"15566:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3211,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"15573:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3208,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"15527:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:17"},{"expression":{"components":[{"id":3214,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"15599:1:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3219,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"15618:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3217,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:17","typeDescriptions":{}}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3215,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:17","typeDescriptions":{}}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3144,"id":3223,"nodeType":"Return","src":"15591:31:17"}]}}]},"documentation":{"id":3132,"nodeType":"StructuredDocumentation","src":"14599:203:17","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3235,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:17","nodeType":"FunctionDefinition","parameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"input","nameLocation":"14855:5:17","nodeType":"VariableDeclaration","scope":3235,"src":"14841:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3133,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"begin","nameLocation":"14878:5:17","nodeType":"VariableDeclaration","scope":3235,"src":"14870:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"end","nameLocation":"14901:3:17","nodeType":"VariableDeclaration","scope":3235,"src":"14893:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:17"},"returnParameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"success","nameLocation":"14939:7:17","nodeType":"VariableDeclaration","scope":3235,"src":"14934:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3140,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"value","nameLocation":"14956:5:17","nodeType":"VariableDeclaration","scope":3235,"src":"14948:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:17"},"scope":3308,"src":"14807:889:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3294,"nodeType":"Block","src":"15765:461:17","statements":[{"assignments":[3243],"declarations":[{"constant":false,"id":3243,"mutability":"mutable","name":"value","nameLocation":"15781:5:17","nodeType":"VariableDeclaration","scope":3294,"src":"15775:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3242,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3248,"initialValue":{"arguments":[{"id":3246,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"15795:3:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3244,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:17","typeDescriptions":{}}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:17"},{"id":3291,"nodeType":"UncheckedBlock","src":"15959:238:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"15987:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:17","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"16001:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:17","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"16047:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"16061:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:17","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"16108:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"16122:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:17","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3283,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:17","memberName":"max","nodeType":"MemberAccess","src":"16171:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3241,"id":3287,"nodeType":"Return","src":"16164:22:17"},"id":3288,"nodeType":"IfStatement","src":"16104:82:17","trueBody":{"expression":{"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"16134:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:17","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3281,"nodeType":"ExpressionStatement","src":"16134:11:17"}},"id":3289,"nodeType":"IfStatement","src":"16043:143:17","trueBody":{"expression":{"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"16074:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:17","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3270,"nodeType":"ExpressionStatement","src":"16074:11:17"}},"id":3290,"nodeType":"IfStatement","src":"15983:203:17","trueBody":{"expression":{"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"16013:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3259,"nodeType":"ExpressionStatement","src":"16013:11:17"}}]},{"expression":{"id":3292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"16214:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3241,"id":3293,"nodeType":"Return","src":"16207:12:17"}]},"id":3295,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:17","nodeType":"FunctionDefinition","parameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"chr","nameLocation":"15731:3:17","nodeType":"VariableDeclaration","scope":3295,"src":"15724:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3236,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:17"},"returnParameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3295,"src":"15758:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3239,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:17"},"scope":3308,"src":"15702:524:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3306,"nodeType":"Block","src":"16611:225:17","statements":[{"AST":{"nativeSrc":"16760:70:17","nodeType":"YulBlock","src":"16760:70:17","statements":[{"nativeSrc":"16774:46:17","nodeType":"YulAssignment","src":"16774:46:17","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"16793:6:17","nodeType":"YulIdentifier","src":"16793:6:17"},{"arguments":[{"kind":"number","nativeSrc":"16805:4:17","nodeType":"YulLiteral","src":"16805:4:17","type":"","value":"0x20"},{"name":"offset","nativeSrc":"16811:6:17","nodeType":"YulIdentifier","src":"16811:6:17"}],"functionName":{"name":"add","nativeSrc":"16801:3:17","nodeType":"YulIdentifier","src":"16801:3:17"},"nativeSrc":"16801:17:17","nodeType":"YulFunctionCall","src":"16801:17:17"}],"functionName":{"name":"add","nativeSrc":"16789:3:17","nodeType":"YulIdentifier","src":"16789:3:17"},"nativeSrc":"16789:30:17","nodeType":"YulFunctionCall","src":"16789:30:17"}],"functionName":{"name":"mload","nativeSrc":"16783:5:17","nodeType":"YulIdentifier","src":"16783:5:17"},"nativeSrc":"16783:37:17","nodeType":"YulFunctionCall","src":"16783:37:17"},"variableNames":[{"name":"value","nativeSrc":"16774:5:17","nodeType":"YulIdentifier","src":"16774:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3298,"isOffset":false,"isSlot":false,"src":"16793:6:17","valueSize":1},{"declaration":3300,"isOffset":false,"isSlot":false,"src":"16811:6:17","valueSize":1},{"declaration":3303,"isOffset":false,"isSlot":false,"src":"16774:5:17","valueSize":1}],"flags":["memory-safe"],"id":3305,"nodeType":"InlineAssembly","src":"16735:95:17"}]},"documentation":{"id":3296,"nodeType":"StructuredDocumentation","src":"16232:268:17","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3307,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:17","nodeType":"FunctionDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:17","nodeType":"VariableDeclaration","scope":3307,"src":"16537:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3297,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"offset","nameLocation":"16566:6:17","nodeType":"VariableDeclaration","scope":3307,"src":"16558:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:17"},"returnParameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"value","nameLocation":"16604:5:17","nodeType":"VariableDeclaration","scope":3307,"src":"16596:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:17"},"scope":3308,"src":"16505:331:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3309,"src":"297:16541:17","usedErrors":[2132,2135,2138],"usedEvents":[]}],"src":"101:16738:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3656]},"id":3657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3310,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"138:205:18","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3656,"linearizedBaseContracts":[3656],"name":"ECDSA","nameLocation":"352:5:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3316,"members":[{"id":3312,"name":"NoError","nameLocation":"392:7:18","nodeType":"EnumValue","src":"392:7:18"},{"id":3313,"name":"InvalidSignature","nameLocation":"409:16:18","nodeType":"EnumValue","src":"409:16:18"},{"id":3314,"name":"InvalidSignatureLength","nameLocation":"435:22:18","nodeType":"EnumValue","src":"435:22:18"},{"id":3315,"name":"InvalidSignatureS","nameLocation":"467:17:18","nodeType":"EnumValue","src":"467:17:18"}],"name":"RecoverError","nameLocation":"369:12:18","nodeType":"EnumDefinition","src":"364:126:18"},{"documentation":{"id":3317,"nodeType":"StructuredDocumentation","src":"496:63:18","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3319,"name":"ECDSAInvalidSignature","nameLocation":"570:21:18","nodeType":"ErrorDefinition","parameters":{"id":3318,"nodeType":"ParameterList","parameters":[],"src":"591:2:18"},"src":"564:30:18"},{"documentation":{"id":3320,"nodeType":"StructuredDocumentation","src":"600:60:18","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3324,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:18","nodeType":"ErrorDefinition","parameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"length","nameLocation":"707:6:18","nodeType":"VariableDeclaration","scope":3324,"src":"699:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:18"},"src":"665:50:18"},{"documentation":{"id":3325,"nodeType":"StructuredDocumentation","src":"721:85:18","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3329,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:18","nodeType":"ErrorDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"s","nameLocation":"848:1:18","nodeType":"VariableDeclaration","scope":3329,"src":"840:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:18"},"src":"811:40:18"},{"body":{"id":3381,"nodeType":"Block","src":"2285:622:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3344,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"2299:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:18","memberName":"length","nodeType":"MemberAccess","src":"2299:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3379,"nodeType":"Block","src":"2793:108:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3366,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:18","typeDescriptions":{}}},"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3370,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"2827:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3314,"src":"2827:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3374,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"2872:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:18","memberName":"length","nodeType":"MemberAccess","src":"2872:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:18","typeDescriptions":{}}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3343,"id":3378,"nodeType":"Return","src":"2807:83:18"}]},"id":3380,"nodeType":"IfStatement","src":"2295:606:18","trueBody":{"id":3365,"nodeType":"Block","src":"2323:464:18","statements":[{"assignments":[3349],"declarations":[{"constant":false,"id":3349,"mutability":"mutable","name":"r","nameLocation":"2345:1:18","nodeType":"VariableDeclaration","scope":3365,"src":"2337:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3350,"nodeType":"VariableDeclarationStatement","src":"2337:9:18"},{"assignments":[3352],"declarations":[{"constant":false,"id":3352,"mutability":"mutable","name":"s","nameLocation":"2368:1:18","nodeType":"VariableDeclaration","scope":3365,"src":"2360:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3353,"nodeType":"VariableDeclarationStatement","src":"2360:9:18"},{"assignments":[3355],"declarations":[{"constant":false,"id":3355,"mutability":"mutable","name":"v","nameLocation":"2389:1:18","nodeType":"VariableDeclaration","scope":3365,"src":"2383:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3354,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3356,"nodeType":"VariableDeclarationStatement","src":"2383:7:18"},{"AST":{"nativeSrc":"2560:171:18","nodeType":"YulBlock","src":"2560:171:18","statements":[{"nativeSrc":"2578:32:18","nodeType":"YulAssignment","src":"2578:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:18","nodeType":"YulIdentifier","src":"2593:9:18"},{"kind":"number","nativeSrc":"2604:4:18","nodeType":"YulLiteral","src":"2604:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:18","nodeType":"YulIdentifier","src":"2589:3:18"},"nativeSrc":"2589:20:18","nodeType":"YulFunctionCall","src":"2589:20:18"}],"functionName":{"name":"mload","nativeSrc":"2583:5:18","nodeType":"YulIdentifier","src":"2583:5:18"},"nativeSrc":"2583:27:18","nodeType":"YulFunctionCall","src":"2583:27:18"},"variableNames":[{"name":"r","nativeSrc":"2578:1:18","nodeType":"YulIdentifier","src":"2578:1:18"}]},{"nativeSrc":"2627:32:18","nodeType":"YulAssignment","src":"2627:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:18","nodeType":"YulIdentifier","src":"2642:9:18"},{"kind":"number","nativeSrc":"2653:4:18","nodeType":"YulLiteral","src":"2653:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:18","nodeType":"YulIdentifier","src":"2638:3:18"},"nativeSrc":"2638:20:18","nodeType":"YulFunctionCall","src":"2638:20:18"}],"functionName":{"name":"mload","nativeSrc":"2632:5:18","nodeType":"YulIdentifier","src":"2632:5:18"},"nativeSrc":"2632:27:18","nodeType":"YulFunctionCall","src":"2632:27:18"},"variableNames":[{"name":"s","nativeSrc":"2627:1:18","nodeType":"YulIdentifier","src":"2627:1:18"}]},{"nativeSrc":"2676:41:18","nodeType":"YulAssignment","src":"2676:41:18","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:18","nodeType":"YulLiteral","src":"2686:1:18","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:18","nodeType":"YulIdentifier","src":"2699:9:18"},{"kind":"number","nativeSrc":"2710:4:18","nodeType":"YulLiteral","src":"2710:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:18","nodeType":"YulIdentifier","src":"2695:3:18"},"nativeSrc":"2695:20:18","nodeType":"YulFunctionCall","src":"2695:20:18"}],"functionName":{"name":"mload","nativeSrc":"2689:5:18","nodeType":"YulIdentifier","src":"2689:5:18"},"nativeSrc":"2689:27:18","nodeType":"YulFunctionCall","src":"2689:27:18"}],"functionName":{"name":"byte","nativeSrc":"2681:4:18","nodeType":"YulIdentifier","src":"2681:4:18"},"nativeSrc":"2681:36:18","nodeType":"YulFunctionCall","src":"2681:36:18"},"variableNames":[{"name":"v","nativeSrc":"2676:1:18","nodeType":"YulIdentifier","src":"2676:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3349,"isOffset":false,"isSlot":false,"src":"2578:1:18","valueSize":1},{"declaration":3352,"isOffset":false,"isSlot":false,"src":"2627:1:18","valueSize":1},{"declaration":3334,"isOffset":false,"isSlot":false,"src":"2593:9:18","valueSize":1},{"declaration":3334,"isOffset":false,"isSlot":false,"src":"2642:9:18","valueSize":1},{"declaration":3334,"isOffset":false,"isSlot":false,"src":"2699:9:18","valueSize":1},{"declaration":3355,"isOffset":false,"isSlot":false,"src":"2676:1:18","valueSize":1}],"flags":["memory-safe"],"id":3357,"nodeType":"InlineAssembly","src":"2535:196:18"},{"expression":{"arguments":[{"id":3359,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"2762:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3360,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"2768:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3361,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"2771:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3362,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"2774:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3358,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3382,3462,3570],"referencedDeclaration":3570,"src":"2751:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3343,"id":3364,"nodeType":"Return","src":"2744:32:18"}]}}]},"documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"857:1267:18","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3382,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:18","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"hash","nameLocation":"2166:4:18","nodeType":"VariableDeclaration","scope":3382,"src":"2158:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"signature","nameLocation":"2193:9:18","nodeType":"VariableDeclaration","scope":3382,"src":"2180:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3333,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:18"},"returnParameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:18","nodeType":"VariableDeclaration","scope":3382,"src":"2232:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3336,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3340,"mutability":"mutable","name":"err","nameLocation":"2264:3:18","nodeType":"VariableDeclaration","scope":3382,"src":"2251:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3339,"nodeType":"UserDefinedTypeName","pathNode":{"id":3338,"name":"RecoverError","nameLocations":["2251:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3316,"src":"2251:12:18"},"referencedDeclaration":3316,"src":"2251:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:18","nodeType":"VariableDeclaration","scope":3382,"src":"2269:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:18"},"scope":3656,"src":"2129:778:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3411,"nodeType":"Block","src":"3801:168:18","statements":[{"assignments":[3393,3396,3398],"declarations":[{"constant":false,"id":3393,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:18","nodeType":"VariableDeclaration","scope":3411,"src":"3812:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3392,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3396,"mutability":"mutable","name":"error","nameLocation":"3844:5:18","nodeType":"VariableDeclaration","scope":3411,"src":"3831:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3395,"nodeType":"UserDefinedTypeName","pathNode":{"id":3394,"name":"RecoverError","nameLocations":["3831:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3316,"src":"3831:12:18"},"referencedDeclaration":3316,"src":"3831:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3398,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:18","nodeType":"VariableDeclaration","scope":3411,"src":"3851:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3403,"initialValue":{"arguments":[{"id":3400,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"3882:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3401,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"3888:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3399,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3382,3462,3570],"referencedDeclaration":3382,"src":"3871:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:18"},{"expression":{"arguments":[{"id":3405,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3920:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},{"id":3406,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3927:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3404,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3908:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3316_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3408,"nodeType":"ExpressionStatement","src":"3908:28:18"},{"expression":{"id":3409,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"3953:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3391,"id":3410,"nodeType":"Return","src":"3946:16:18"}]},"documentation":{"id":3383,"nodeType":"StructuredDocumentation","src":"2913:796:18","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3412,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:18","nodeType":"FunctionDefinition","parameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"hash","nameLocation":"3739:4:18","nodeType":"VariableDeclaration","scope":3412,"src":"3731:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"signature","nameLocation":"3758:9:18","nodeType":"VariableDeclaration","scope":3412,"src":"3745:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3386,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:18"},"returnParameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3412,"src":"3792:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3389,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:18"},"scope":3656,"src":"3714:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3461,"nodeType":"Block","src":"4348:342:18","statements":[{"id":3460,"nodeType":"UncheckedBlock","src":"4358:326:18","statements":[{"assignments":[3430],"declarations":[{"constant":false,"id":3430,"mutability":"mutable","name":"s","nameLocation":"4390:1:18","nodeType":"VariableDeclaration","scope":3460,"src":"4382:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3437,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"4394:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:18","typeDescriptions":{}}},"id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:18"},{"assignments":[3439],"declarations":[{"constant":false,"id":3439,"mutability":"mutable","name":"v","nameLocation":"4591:1:18","nodeType":"VariableDeclaration","scope":3460,"src":"4585:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3438,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3452,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3444,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"4610:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3442,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:18","typeDescriptions":{}}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:18","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3440,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:18","typeDescriptions":{}}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:18"},{"expression":{"arguments":[{"id":3454,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"4659:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3455,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"4665:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3456,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"4668:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3457,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"4671:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3453,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3382,3462,3570],"referencedDeclaration":3570,"src":"4648:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3428,"id":3459,"nodeType":"Return","src":"4641:32:18"}]}]},"documentation":{"id":3413,"nodeType":"StructuredDocumentation","src":"3975:205:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3462,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:18","nodeType":"FunctionDefinition","parameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"hash","nameLocation":"4222:4:18","nodeType":"VariableDeclaration","scope":3462,"src":"4214:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3417,"mutability":"mutable","name":"r","nameLocation":"4244:1:18","nodeType":"VariableDeclaration","scope":3462,"src":"4236:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3419,"mutability":"mutable","name":"vs","nameLocation":"4263:2:18","nodeType":"VariableDeclaration","scope":3462,"src":"4255:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:18"},"returnParameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:18","nodeType":"VariableDeclaration","scope":3462,"src":"4295:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3421,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"err","nameLocation":"4327:3:18","nodeType":"VariableDeclaration","scope":3462,"src":"4314:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3424,"nodeType":"UserDefinedTypeName","pathNode":{"id":3423,"name":"RecoverError","nameLocations":["4314:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3316,"src":"4314:12:18"},"referencedDeclaration":3316,"src":"4314:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:18","nodeType":"VariableDeclaration","scope":3462,"src":"4332:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:18"},"scope":3656,"src":"4185:505:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3494,"nodeType":"Block","src":"4903:164:18","statements":[{"assignments":[3475,3478,3480],"declarations":[{"constant":false,"id":3475,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:18","nodeType":"VariableDeclaration","scope":3494,"src":"4914:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3474,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"error","nameLocation":"4946:5:18","nodeType":"VariableDeclaration","scope":3494,"src":"4933:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3477,"nodeType":"UserDefinedTypeName","pathNode":{"id":3476,"name":"RecoverError","nameLocations":["4933:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3316,"src":"4933:12:18"},"referencedDeclaration":3316,"src":"4933:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:18","nodeType":"VariableDeclaration","scope":3494,"src":"4953:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3486,"initialValue":{"arguments":[{"id":3482,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"4984:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3483,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"4990:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3484,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"4993:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3481,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3382,3462,3570],"referencedDeclaration":3462,"src":"4973:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:18"},{"expression":{"arguments":[{"id":3488,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5018:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},{"id":3489,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"5025:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3487,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"5006:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3316_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3491,"nodeType":"ExpressionStatement","src":"5006:28:18"},{"expression":{"id":3492,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"5051:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3473,"id":3493,"nodeType":"Return","src":"5044:16:18"}]},"documentation":{"id":3463,"nodeType":"StructuredDocumentation","src":"4696:116:18","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3495,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:18","nodeType":"FunctionDefinition","parameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3465,"mutability":"mutable","name":"hash","nameLocation":"4842:4:18","nodeType":"VariableDeclaration","scope":3495,"src":"4834:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3467,"mutability":"mutable","name":"r","nameLocation":"4856:1:18","nodeType":"VariableDeclaration","scope":3495,"src":"4848:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3469,"mutability":"mutable","name":"vs","nameLocation":"4867:2:18","nodeType":"VariableDeclaration","scope":3495,"src":"4859:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:18"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3495,"src":"4894:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3471,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:18"},"scope":3656,"src":"4817:250:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3569,"nodeType":"Block","src":"5382:1372:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3516,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"6278:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:18","typeDescriptions":{}}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3530,"nodeType":"IfStatement","src":"6266:164:18","trueBody":{"id":3529,"nodeType":"Block","src":"6351:79:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:18","typeDescriptions":{}}},"id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3524,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"6385:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3315,"src":"6385:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},{"id":3526,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"6417:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3513,"id":3528,"nodeType":"Return","src":"6365:54:18"}]}},{"assignments":[3532],"declarations":[{"constant":false,"id":3532,"mutability":"mutable","name":"signer","nameLocation":"6532:6:18","nodeType":"VariableDeclaration","scope":3569,"src":"6524:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3531,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3539,"initialValue":{"arguments":[{"id":3534,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"6551:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3535,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"6557:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3536,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"6560:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3537,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"6563:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3533,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:18","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3540,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"6579:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3541,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:18","typeDescriptions":{}}},"id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3559,"nodeType":"IfStatement","src":"6575:113:18","trueBody":{"id":3558,"nodeType":"Block","src":"6601:87:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3546,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:18","typeDescriptions":{}}},"id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3550,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"6635:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3313,"src":"6635:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:18","typeDescriptions":{}}},"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3513,"id":3557,"nodeType":"Return","src":"6615:62:18"}]}},{"expression":{"components":[{"id":3560,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"6706:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3561,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"6714:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3312,"src":"6714:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:18","typeDescriptions":{}}},"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3513,"id":3568,"nodeType":"Return","src":"6698:49:18"}]},"documentation":{"id":3496,"nodeType":"StructuredDocumentation","src":"5073:125:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3570,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:18","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3498,"mutability":"mutable","name":"hash","nameLocation":"5240:4:18","nodeType":"VariableDeclaration","scope":3570,"src":"5232:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"v","nameLocation":"5260:1:18","nodeType":"VariableDeclaration","scope":3570,"src":"5254:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3499,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3502,"mutability":"mutable","name":"r","nameLocation":"5279:1:18","nodeType":"VariableDeclaration","scope":3570,"src":"5271:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"s","nameLocation":"5298:1:18","nodeType":"VariableDeclaration","scope":3570,"src":"5290:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:18"},"returnParameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:18","nodeType":"VariableDeclaration","scope":3570,"src":"5329:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3506,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3510,"mutability":"mutable","name":"err","nameLocation":"5361:3:18","nodeType":"VariableDeclaration","scope":3570,"src":"5348:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3509,"nodeType":"UserDefinedTypeName","pathNode":{"id":3508,"name":"RecoverError","nameLocations":["5348:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3316,"src":"5348:12:18"},"referencedDeclaration":3316,"src":"5348:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:18","nodeType":"VariableDeclaration","scope":3570,"src":"5366:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:18"},"scope":3656,"src":"5203:1551:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3605,"nodeType":"Block","src":"6981:166:18","statements":[{"assignments":[3585,3588,3590],"declarations":[{"constant":false,"id":3585,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:18","nodeType":"VariableDeclaration","scope":3605,"src":"6992:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3584,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"error","nameLocation":"7024:5:18","nodeType":"VariableDeclaration","scope":3605,"src":"7011:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3587,"nodeType":"UserDefinedTypeName","pathNode":{"id":3586,"name":"RecoverError","nameLocations":["7011:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3316,"src":"7011:12:18"},"referencedDeclaration":3316,"src":"7011:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:18","nodeType":"VariableDeclaration","scope":3605,"src":"7031:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3597,"initialValue":{"arguments":[{"id":3592,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"7062:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3593,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"7068:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3594,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"7071:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3595,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"7074:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3591,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3382,3462,3570],"referencedDeclaration":3570,"src":"7051:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:18"},{"expression":{"arguments":[{"id":3599,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"7098:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},{"id":3600,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"7105:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3598,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"7086:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3316_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3602,"nodeType":"ExpressionStatement","src":"7086:28:18"},{"expression":{"id":3603,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"7131:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3583,"id":3604,"nodeType":"Return","src":"7124:16:18"}]},"documentation":{"id":3571,"nodeType":"StructuredDocumentation","src":"6760:122:18","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3606,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:18","nodeType":"FunctionDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"hash","nameLocation":"6912:4:18","nodeType":"VariableDeclaration","scope":3606,"src":"6904:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3575,"mutability":"mutable","name":"v","nameLocation":"6924:1:18","nodeType":"VariableDeclaration","scope":3606,"src":"6918:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3574,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"r","nameLocation":"6935:1:18","nodeType":"VariableDeclaration","scope":3606,"src":"6927:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3579,"mutability":"mutable","name":"s","nameLocation":"6946:1:18","nodeType":"VariableDeclaration","scope":3606,"src":"6938:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:18"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3606,"src":"6972:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3581,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:18"},"scope":3656,"src":"6887:260:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3654,"nodeType":"Block","src":"7352:460:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3615,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"7366:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3616,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"7375:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3312,"src":"7375:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"7462:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3622,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"7471:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3313,"src":"7471:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3629,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"7567:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3630,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"7576:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3314,"src":"7576:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"7701:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3642,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"7710:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3315,"src":"7710:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3650,"nodeType":"IfStatement","src":"7697:109:18","trueBody":{"id":3649,"nodeType":"Block","src":"7742:64:18","statements":[{"errorCall":{"arguments":[{"id":3646,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"7786:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3645,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"7763:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3648,"nodeType":"RevertStatement","src":"7756:39:18"}]}},"id":3651,"nodeType":"IfStatement","src":"7563:243:18","trueBody":{"id":3640,"nodeType":"Block","src":"7613:78:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3636,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"7670:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:18","typeDescriptions":{}}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3633,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"7634:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3639,"nodeType":"RevertStatement","src":"7627:53:18"}]}},"id":3652,"nodeType":"IfStatement","src":"7458:348:18","trueBody":{"id":3628,"nodeType":"Block","src":"7502:55:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3625,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"7523:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3627,"nodeType":"RevertStatement","src":"7516:30:18"}]}},"id":3653,"nodeType":"IfStatement","src":"7362:444:18","trueBody":{"id":3620,"nodeType":"Block","src":"7397:55:18","statements":[{"functionReturnParameters":3614,"id":3619,"nodeType":"Return","src":"7411:7:18"}]}}]},"documentation":{"id":3607,"nodeType":"StructuredDocumentation","src":"7153:122:18","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3655,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:18","nodeType":"FunctionDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"error","nameLocation":"7314:5:18","nodeType":"VariableDeclaration","scope":3655,"src":"7301:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3609,"nodeType":"UserDefinedTypeName","pathNode":{"id":3608,"name":"RecoverError","nameLocations":["7301:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3316,"src":"7301:12:18"},"referencedDeclaration":3316,"src":"7301:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:18","nodeType":"VariableDeclaration","scope":3655,"src":"7321:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:18"},"returnParameters":{"id":3614,"nodeType":"ParameterList","parameters":[],"src":"7352:0:18"},"scope":3656,"src":"7280:532:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3657,"src":"344:7470:18","usedErrors":[3319,3324,3329],"usedEvents":[]}],"src":"112:7703:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3883],"IERC5267":[262],"MessageHashUtils":[3957],"ShortString":[1773],"ShortStrings":[1984]},"id":3884,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3658,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3884,"sourceUnit":3958,"src":"139:56:19","symbolAliases":[{"foreign":{"id":3659,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"147:16:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3663,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3884,"sourceUnit":1985,"src":"196:62:19","symbolAliases":[{"foreign":{"id":3661,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"204:12:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3662,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"218:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3665,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3884,"sourceUnit":263,"src":"259:55:19","symbolAliases":[{"foreign":{"id":3664,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"267:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3667,"name":"IERC5267","nameLocations":["1988:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":262,"src":"1988:8:19"},"id":3668,"nodeType":"InheritanceSpecifier","src":"1988:8:19"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3666,"nodeType":"StructuredDocumentation","src":"316:1643:19","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3883,"linearizedBaseContracts":[3883,262],"name":"EIP712","nameLocation":"1978:6:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3670,"libraryName":{"id":3669,"name":"ShortStrings","nameLocations":["2009:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":1984,"src":"2009:12:19"},"nodeType":"UsingForDirective","src":"2003:25:19"},{"constant":true,"id":3675,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:19","nodeType":"VariableDeclaration","scope":3883,"src":"2034:140:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3672,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3677,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:19","nodeType":"VariableDeclaration","scope":3883,"src":"2373:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3679,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:19","nodeType":"VariableDeclaration","scope":3883,"src":"2427:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3681,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:19","nodeType":"VariableDeclaration","scope":3883,"src":"2473:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3680,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3683,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:19","nodeType":"VariableDeclaration","scope":3883,"src":"2517:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3685,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:19","nodeType":"VariableDeclaration","scope":3883,"src":"2560:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3688,"mutability":"immutable","name":"_name","nameLocation":"2637:5:19","nodeType":"VariableDeclaration","scope":3883,"src":"2607:35:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"},"typeName":{"id":3687,"nodeType":"UserDefinedTypeName","pathNode":{"id":3686,"name":"ShortString","nameLocations":["2607:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"2607:11:19"},"referencedDeclaration":1773,"src":"2607:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3691,"mutability":"immutable","name":"_version","nameLocation":"2678:8:19","nodeType":"VariableDeclaration","scope":3883,"src":"2648:38:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"},"typeName":{"id":3690,"nodeType":"UserDefinedTypeName","pathNode":{"id":3689,"name":"ShortString","nameLocations":["2648:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"2648:11:19"},"referencedDeclaration":1773,"src":"2648:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3693,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:19","nodeType":"VariableDeclaration","scope":3883,"src":"2692:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3692,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3695,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:19","nodeType":"VariableDeclaration","scope":3883,"src":"2726:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3694,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3752,"nodeType":"Block","src":"3383:376:19","statements":[{"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3703,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"3393:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3706,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"3432:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3704,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3401:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1925,"src":"3401:30:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1773_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"src":"3393:53:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"id":3709,"nodeType":"ExpressionStatement","src":"3393:53:19"},{"expression":{"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3710,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"3456:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3713,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"3501:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3711,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"3467:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1925,"src":"3467:33:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1773_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"src":"3456:62:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"id":3716,"nodeType":"ExpressionStatement","src":"3456:62:19"},{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3717,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"3528:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3721,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3558:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3719,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:19","typeDescriptions":{}}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3718,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3725,"nodeType":"ExpressionStatement","src":"3528:36:19"},{"expression":{"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"3574:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3730,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"3607:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3728,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:19","typeDescriptions":{}}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3727,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3734,"nodeType":"ExpressionStatement","src":"3574:42:19"},{"expression":{"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3735,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"3627:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3736,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3739,"nodeType":"ExpressionStatement","src":"3627:30:19"},{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3740,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"3667:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3741,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"3692:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3744,"nodeType":"ExpressionStatement","src":"3667:48:19"},{"expression":{"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3745,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"3725:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3748,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3883","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3883","typeString":"contract EIP712"}],"id":3747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3746,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:19","typeDescriptions":{}}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3751,"nodeType":"ExpressionStatement","src":"3725:27:19"}]},"documentation":{"id":3696,"nodeType":"StructuredDocumentation","src":"2764:559:19","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3753,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"name","nameLocation":"3354:4:19","nodeType":"VariableDeclaration","scope":3753,"src":"3340:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3697,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3700,"mutability":"mutable","name":"version","nameLocation":"3374:7:19","nodeType":"VariableDeclaration","scope":3753,"src":"3360:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3699,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:19"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[],"src":"3383:0:19"},"scope":3883,"src":"3328:431:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3778,"nodeType":"Block","src":"3907:200:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3761,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3883","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3883","typeString":"contract EIP712"}],"id":3760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3759,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:19","typeDescriptions":{}}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3763,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"3938:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3765,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3767,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"3970:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3776,"nodeType":"Block","src":"4046:55:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3773,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"4067:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3758,"id":3775,"nodeType":"Return","src":"4060:30:19"}]},"id":3777,"nodeType":"IfStatement","src":"3917:184:19","trueBody":{"id":3772,"nodeType":"Block","src":"3986:54:19","statements":[{"expression":{"id":3770,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"4007:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3758,"id":3771,"nodeType":"Return","src":"4000:29:19"}]}}]},"documentation":{"id":3754,"nodeType":"StructuredDocumentation","src":"3765:75:19","text":" @dev Returns the domain separator for the current chain."},"id":3779,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:19","nodeType":"FunctionDefinition","parameters":{"id":3755,"nodeType":"ParameterList","parameters":[],"src":"3872:2:19"},"returnParameters":{"id":3758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3779,"src":"3898:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:19"},"scope":3883,"src":"3845:262:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3799,"nodeType":"Block","src":"4177:115:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3787,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"4215:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3788,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"4226:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3789,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"4239:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3790,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3794,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3883","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3883","typeString":"contract EIP712"}],"id":3793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3792,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:19","typeDescriptions":{}}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3785,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:19","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3784,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3783,"id":3798,"nodeType":"Return","src":"4187:98:19"}]},"id":3800,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:19","nodeType":"FunctionDefinition","parameters":{"id":3780,"nodeType":"ParameterList","parameters":[],"src":"4143:2:19"},"returnParameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3800,"src":"4168:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:19"},"scope":3883,"src":"4113:179:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3815,"nodeType":"Block","src":"5003:90:19","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3810,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"5053:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3812,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"5075:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3808,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"5020:16:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3957_$","typeString":"type(library MessageHashUtils)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:19","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3956,"src":"5020:32:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3807,"id":3814,"nodeType":"Return","src":"5013:73:19"}]},"documentation":{"id":3801,"nodeType":"StructuredDocumentation","src":"4298:614:19","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3816,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:19","nodeType":"FunctionDefinition","parameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:19","nodeType":"VariableDeclaration","scope":3816,"src":"4943:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:19"},"returnParameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3816,"src":"4994:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:19"},"scope":3883,"src":"4917:176:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[261],"body":{"id":3857,"nodeType":"Block","src":"5472:229:19","statements":[{"expression":{"components":[{"hexValue":"0f","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3836,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"5533:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3838,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"5560:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3840,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3844,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3883","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3883","typeString":"contract EIP712"}],"id":3843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3842,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:19","typeDescriptions":{}}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:19","typeDescriptions":{}}},"id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3851,"nodeType":"ArrayTypeName","src":"5672:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3834,"id":3856,"nodeType":"Return","src":"5482:212:19"}]},"documentation":{"id":3817,"nodeType":"StructuredDocumentation","src":"5099:40:19","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3858,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:19","nodeType":"FunctionDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[],"src":"5165:2:19"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"fields","nameLocation":"5249:6:19","nodeType":"VariableDeclaration","scope":3858,"src":"5242:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3819,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"name","nameLocation":"5283:4:19","nodeType":"VariableDeclaration","scope":3858,"src":"5269:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3821,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"version","nameLocation":"5315:7:19","nodeType":"VariableDeclaration","scope":3858,"src":"5301:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3823,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3826,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:19","nodeType":"VariableDeclaration","scope":3858,"src":"5336:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:19","nodeType":"VariableDeclaration","scope":3858,"src":"5365:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3827,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"salt","nameLocation":"5412:4:19","nodeType":"VariableDeclaration","scope":3858,"src":"5404:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3833,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:19","nodeType":"VariableDeclaration","scope":3858,"src":"5430:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3832,"nodeType":"ArrayTypeName","src":"5430:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:19"},"scope":3883,"src":"5144:557:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3869,"nodeType":"Block","src":"6082:65:19","statements":[{"expression":{"arguments":[{"id":3866,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"6126:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3864,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"6099:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1952,"src":"6099:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1773_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1773_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3863,"id":3868,"nodeType":"Return","src":"6092:48:19"}]},"documentation":{"id":3859,"nodeType":"StructuredDocumentation","src":"5707:256:19","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3870,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:19","nodeType":"FunctionDefinition","parameters":{"id":3860,"nodeType":"ParameterList","parameters":[],"src":"6041:2:19"},"returnParameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3870,"src":"6067:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3861,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:19"},"scope":3883,"src":"6021:126:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3881,"nodeType":"Block","src":"6537:71:19","statements":[{"expression":{"arguments":[{"id":3878,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"6584:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3876,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"6554:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1773","typeString":"ShortString"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1952,"src":"6554:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1773_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1773_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3875,"id":3880,"nodeType":"Return","src":"6547:54:19"}]},"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"6153:262:19","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3882,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:19","nodeType":"FunctionDefinition","parameters":{"id":3872,"nodeType":"ParameterList","parameters":[],"src":"6496:2:19"},"returnParameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3882,"src":"6522:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3873,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:19"},"scope":3883,"src":"6473:135:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3884,"src":"1960:4650:19","usedErrors":[1781,1783],"usedEvents":[242]}],"src":"113:6498:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3957],"Strings":[3308]},"id":3958,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3885,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3887,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3958,"sourceUnit":3309,"src":"149:39:20","symbolAliases":[{"foreign":{"id":3886,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"157:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3888,"nodeType":"StructuredDocumentation","src":"190:330:20","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3957,"linearizedBaseContracts":[3957],"name":"MessageHashUtils","nameLocation":"529:16:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3897,"nodeType":"Block","src":"1314:341:20","statements":[{"AST":{"nativeSrc":"1349:300:20","nodeType":"YulBlock","src":"1349:300:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:20","nodeType":"YulLiteral","src":"1370:4:20","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:20","nodeType":"YulLiteral","src":"1376:34:20","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:20","nodeType":"YulIdentifier","src":"1363:6:20"},"nativeSrc":"1363:48:20","nodeType":"YulFunctionCall","src":"1363:48:20"},"nativeSrc":"1363:48:20","nodeType":"YulExpressionStatement","src":"1363:48:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:20","nodeType":"YulLiteral","src":"1472:4:20","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:20","nodeType":"YulIdentifier","src":"1478:11:20"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:20","nodeType":"YulIdentifier","src":"1465:6:20"},"nativeSrc":"1465:25:20","nodeType":"YulFunctionCall","src":"1465:25:20"},"nativeSrc":"1465:25:20","nodeType":"YulExpressionStatement","src":"1465:25:20"},{"nativeSrc":"1544:31:20","nodeType":"YulAssignment","src":"1544:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:20","nodeType":"YulLiteral","src":"1564:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:20","nodeType":"YulLiteral","src":"1570:4:20","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:20","nodeType":"YulIdentifier","src":"1554:9:20"},"nativeSrc":"1554:21:20","nodeType":"YulFunctionCall","src":"1554:21:20"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:20","nodeType":"YulIdentifier","src":"1544:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3894,"isOffset":false,"isSlot":false,"src":"1544:6:20","valueSize":1},{"declaration":3891,"isOffset":false,"isSlot":false,"src":"1478:11:20","valueSize":1}],"flags":["memory-safe"],"id":3896,"nodeType":"InlineAssembly","src":"1324:325:20"}]},"documentation":{"id":3889,"nodeType":"StructuredDocumentation","src":"552:665:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3898,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:20","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:20","nodeType":"VariableDeclaration","scope":3898,"src":"1254:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:20"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"digest","nameLocation":"1306:6:20","nodeType":"VariableDeclaration","scope":3898,"src":"1298:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:20"},"scope":3957,"src":"1222:433:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3923,"nodeType":"Block","src":"2207:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3915,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"2316:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:20","memberName":"length","nodeType":"MemberAccess","src":"2316:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3913,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"2299:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3308_$","typeString":"type(library Strings)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:20","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2186,"src":"2299:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3911,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:20","typeDescriptions":{}}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3919,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"2334:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3907,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:20","typeDescriptions":{}}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:20","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:20","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3906,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3905,"id":3922,"nodeType":"Return","src":"2217:126:20"}]},"documentation":{"id":3899,"nodeType":"StructuredDocumentation","src":"1661:455:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3924,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:20","nodeType":"FunctionDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"mutability":"mutable","name":"message","nameLocation":"2166:7:20","nodeType":"VariableDeclaration","scope":3924,"src":"2153:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3900,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:20"},"returnParameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3924,"src":"2198:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:20"},"scope":3957,"src":"2121:229:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3943,"nodeType":"Block","src":"2804:80:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3938,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"2860:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3939,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"2871:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3935,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3934,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3933,"id":3942,"nodeType":"Return","src":"2814:63:20"}]},"documentation":{"id":3925,"nodeType":"StructuredDocumentation","src":"2356:332:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3944,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:20","nodeType":"FunctionDefinition","parameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"validator","nameLocation":"2742:9:20","nodeType":"VariableDeclaration","scope":3944,"src":"2734:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3926,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3929,"mutability":"mutable","name":"data","nameLocation":"2766:4:20","nodeType":"VariableDeclaration","scope":3944,"src":"2753:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3928,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:20"},"returnParameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3944,"src":"2795:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:20"},"scope":3957,"src":"2693:191:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3955,"nodeType":"Block","src":"3435:265:20","statements":[{"AST":{"nativeSrc":"3470:224:20","nodeType":"YulBlock","src":"3470:224:20","statements":[{"nativeSrc":"3484:22:20","nodeType":"YulVariableDeclaration","src":"3484:22:20","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:20","nodeType":"YulLiteral","src":"3501:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:20","nodeType":"YulIdentifier","src":"3495:5:20"},"nativeSrc":"3495:11:20","nodeType":"YulFunctionCall","src":"3495:11:20"},"variables":[{"name":"ptr","nativeSrc":"3488:3:20","nodeType":"YulTypedName","src":"3488:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:20","nodeType":"YulIdentifier","src":"3526:3:20"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:20","nodeType":"YulLiteral","src":"3531:10:20","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:20","nodeType":"YulIdentifier","src":"3519:6:20"},"nativeSrc":"3519:23:20","nodeType":"YulFunctionCall","src":"3519:23:20"},"nativeSrc":"3519:23:20","nodeType":"YulExpressionStatement","src":"3519:23:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:20","nodeType":"YulIdentifier","src":"3566:3:20"},{"kind":"number","nativeSrc":"3571:4:20","nodeType":"YulLiteral","src":"3571:4:20","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:20","nodeType":"YulIdentifier","src":"3562:3:20"},"nativeSrc":"3562:14:20","nodeType":"YulFunctionCall","src":"3562:14:20"},{"name":"domainSeparator","nativeSrc":"3578:15:20","nodeType":"YulIdentifier","src":"3578:15:20"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:20","nodeType":"YulIdentifier","src":"3555:6:20"},"nativeSrc":"3555:39:20","nodeType":"YulFunctionCall","src":"3555:39:20"},"nativeSrc":"3555:39:20","nodeType":"YulExpressionStatement","src":"3555:39:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:20","nodeType":"YulIdentifier","src":"3618:3:20"},{"kind":"number","nativeSrc":"3623:4:20","nodeType":"YulLiteral","src":"3623:4:20","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:20","nodeType":"YulIdentifier","src":"3614:3:20"},"nativeSrc":"3614:14:20","nodeType":"YulFunctionCall","src":"3614:14:20"},{"name":"structHash","nativeSrc":"3630:10:20","nodeType":"YulIdentifier","src":"3630:10:20"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:20","nodeType":"YulIdentifier","src":"3607:6:20"},"nativeSrc":"3607:34:20","nodeType":"YulFunctionCall","src":"3607:34:20"},"nativeSrc":"3607:34:20","nodeType":"YulExpressionStatement","src":"3607:34:20"},{"nativeSrc":"3654:30:20","nodeType":"YulAssignment","src":"3654:30:20","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:20","nodeType":"YulIdentifier","src":"3674:3:20"},{"kind":"number","nativeSrc":"3679:4:20","nodeType":"YulLiteral","src":"3679:4:20","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:20","nodeType":"YulIdentifier","src":"3664:9:20"},"nativeSrc":"3664:20:20","nodeType":"YulFunctionCall","src":"3664:20:20"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:20","nodeType":"YulIdentifier","src":"3654:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3952,"isOffset":false,"isSlot":false,"src":"3654:6:20","valueSize":1},{"declaration":3947,"isOffset":false,"isSlot":false,"src":"3578:15:20","valueSize":1},{"declaration":3949,"isOffset":false,"isSlot":false,"src":"3630:10:20","valueSize":1}],"flags":["memory-safe"],"id":3954,"nodeType":"InlineAssembly","src":"3445:249:20"}]},"documentation":{"id":3945,"nodeType":"StructuredDocumentation","src":"2890:431:20","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3956,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:20","nodeType":"FunctionDefinition","parameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:20","nodeType":"VariableDeclaration","scope":3956,"src":"3351:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:20","nodeType":"VariableDeclaration","scope":3956,"src":"3376:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:20"},"returnParameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"digest","nameLocation":"3427:6:20","nodeType":"VariableDeclaration","scope":3956,"src":"3419:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:20"},"scope":3957,"src":"3326:374:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3958,"src":"521:3181:20","usedErrors":[],"usedEvents":[]}],"src":"123:3580:20"},"id":20},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3969]},"id":3970,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3959,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3960,"nodeType":"StructuredDocumentation","src":"141:280:21","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3969,"linearizedBaseContracts":[3969],"name":"IERC165","nameLocation":"432:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3961,"nodeType":"StructuredDocumentation","src":"446:340:21","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3968,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:21","nodeType":"FunctionDefinition","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:21","nodeType":"VariableDeclaration","scope":3968,"src":"818:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3962,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:21"},"returnParameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3968,"src":"861:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3965,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:21"},"scope":3969,"src":"791:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3970,"src":"422:447:21","usedErrors":[],"usedEvents":[]}],"src":"115:755:21"},"id":21},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5575],"Panic":[1767],"SafeCast":[7340]},"id":5576,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3971,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3973,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5576,"sourceUnit":1768,"src":"129:35:22","symbolAliases":[{"foreign":{"id":3972,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"137:5:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5576,"sourceUnit":7341,"src":"165:40:22","symbolAliases":[{"foreign":{"id":3974,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"173:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"207:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5575,"linearizedBaseContracts":[5575],"name":"Math","nameLocation":"289:4:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3981,"members":[{"id":3977,"name":"Floor","nameLocation":"324:5:22","nodeType":"EnumValue","src":"324:5:22"},{"id":3978,"name":"Ceil","nameLocation":"367:4:22","nodeType":"EnumValue","src":"367:4:22"},{"id":3979,"name":"Trunc","nameLocation":"409:5:22","nodeType":"EnumValue","src":"409:5:22"},{"id":3980,"name":"Expand","nameLocation":"439:6:22","nodeType":"EnumValue","src":"439:6:22"}],"name":"Rounding","nameLocation":"305:8:22","nodeType":"EnumDefinition","src":"300:169:22"},{"body":{"id":4012,"nodeType":"Block","src":"677:140:22","statements":[{"id":4011,"nodeType":"UncheckedBlock","src":"687:124:22","statements":[{"assignments":[3994],"declarations":[{"constant":false,"id":3994,"mutability":"mutable","name":"c","nameLocation":"719:1:22","nodeType":"VariableDeclaration","scope":4011,"src":"711:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3998,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"723:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3996,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"727:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3999,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"746:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4000,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"750:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4006,"nodeType":"IfStatement","src":"742:28:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3992,"id":4005,"nodeType":"Return","src":"753:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4008,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"798:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3992,"id":4010,"nodeType":"Return","src":"784:16:22"}]}]},"documentation":{"id":3982,"nodeType":"StructuredDocumentation","src":"475:106:22","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4013,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:22","nodeType":"FunctionDefinition","parameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3984,"mutability":"mutable","name":"a","nameLocation":"610:1:22","nodeType":"VariableDeclaration","scope":4013,"src":"602:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3986,"mutability":"mutable","name":"b","nameLocation":"621:1:22","nodeType":"VariableDeclaration","scope":4013,"src":"613:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3985,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:22"},"returnParameters":{"id":3992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"success","nameLocation":"652:7:22","nodeType":"VariableDeclaration","scope":4013,"src":"647:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3988,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"result","nameLocation":"669:6:22","nodeType":"VariableDeclaration","scope":4013,"src":"661:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:22"},"scope":5575,"src":"586:231:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4040,"nodeType":"Block","src":"1028:113:22","statements":[{"id":4039,"nodeType":"UncheckedBlock","src":"1038:97:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"1066:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"1070:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4032,"nodeType":"IfStatement","src":"1062:28:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4024,"id":4031,"nodeType":"Return","src":"1073:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"1118:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4035,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"1122:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4024,"id":4038,"nodeType":"Return","src":"1104:20:22"}]}]},"documentation":{"id":4014,"nodeType":"StructuredDocumentation","src":"823:109:22","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4041,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:22","nodeType":"FunctionDefinition","parameters":{"id":4019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"a","nameLocation":"961:1:22","nodeType":"VariableDeclaration","scope":4041,"src":"953:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4018,"mutability":"mutable","name":"b","nameLocation":"972:1:22","nodeType":"VariableDeclaration","scope":4041,"src":"964:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:22"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"success","nameLocation":"1003:7:22","nodeType":"VariableDeclaration","scope":4041,"src":"998:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4020,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4023,"mutability":"mutable","name":"result","nameLocation":"1020:6:22","nodeType":"VariableDeclaration","scope":4041,"src":"1012:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:22"},"scope":5575,"src":"937:204:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4082,"nodeType":"Block","src":"1355:417:22","statements":[{"id":4081,"nodeType":"UncheckedBlock","src":"1365:401:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4053,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"1623:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4060,"nodeType":"IfStatement","src":"1619:28:22","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4052,"id":4059,"nodeType":"Return","src":"1631:16:22"}},{"assignments":[4062],"declarations":[{"constant":false,"id":4062,"mutability":"mutable","name":"c","nameLocation":"1669:1:22","nodeType":"VariableDeclaration","scope":4081,"src":"1661:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4066,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"1673:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4064,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"1677:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"1696:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4068,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"1700:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4070,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"1705:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4076,"nodeType":"IfStatement","src":"1692:33:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4052,"id":4075,"nodeType":"Return","src":"1708:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4078,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"1753:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4052,"id":4080,"nodeType":"Return","src":"1739:16:22"}]}]},"documentation":{"id":4042,"nodeType":"StructuredDocumentation","src":"1147:112:22","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":4083,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:22","nodeType":"FunctionDefinition","parameters":{"id":4047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"a","nameLocation":"1288:1:22","nodeType":"VariableDeclaration","scope":4083,"src":"1280:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"b","nameLocation":"1299:1:22","nodeType":"VariableDeclaration","scope":4083,"src":"1291:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:22"},"returnParameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"success","nameLocation":"1330:7:22","nodeType":"VariableDeclaration","scope":4083,"src":"1325:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4048,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4051,"mutability":"mutable","name":"result","nameLocation":"1347:6:22","nodeType":"VariableDeclaration","scope":4083,"src":"1339:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:22"},"scope":5575,"src":"1264:508:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4110,"nodeType":"Block","src":"1987:114:22","statements":[{"id":4109,"nodeType":"UncheckedBlock","src":"1997:98:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"2025:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4102,"nodeType":"IfStatement","src":"2021:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4094,"id":4101,"nodeType":"Return","src":"2033:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4104,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"2078:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4105,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"2082:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4094,"id":4108,"nodeType":"Return","src":"2064:20:22"}]}]},"documentation":{"id":4084,"nodeType":"StructuredDocumentation","src":"1778:113:22","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4111,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:22","nodeType":"FunctionDefinition","parameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"a","nameLocation":"1920:1:22","nodeType":"VariableDeclaration","scope":4111,"src":"1912:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4088,"mutability":"mutable","name":"b","nameLocation":"1931:1:22","nodeType":"VariableDeclaration","scope":4111,"src":"1923:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:22"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"success","nameLocation":"1962:7:22","nodeType":"VariableDeclaration","scope":4111,"src":"1957:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4090,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4093,"mutability":"mutable","name":"result","nameLocation":"1979:6:22","nodeType":"VariableDeclaration","scope":4111,"src":"1971:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:22"},"scope":5575,"src":"1896:205:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4138,"nodeType":"Block","src":"2326:114:22","statements":[{"id":4137,"nodeType":"UncheckedBlock","src":"2336:98:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"2364:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4130,"nodeType":"IfStatement","src":"2360:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4122,"id":4129,"nodeType":"Return","src":"2372:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4132,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"2417:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4133,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"2421:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4122,"id":4136,"nodeType":"Return","src":"2403:20:22"}]}]},"documentation":{"id":4112,"nodeType":"StructuredDocumentation","src":"2107:123:22","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4139,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:22","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"a","nameLocation":"2259:1:22","nodeType":"VariableDeclaration","scope":4139,"src":"2251:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4116,"mutability":"mutable","name":"b","nameLocation":"2270:1:22","nodeType":"VariableDeclaration","scope":4139,"src":"2262:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:22"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"success","nameLocation":"2301:7:22","nodeType":"VariableDeclaration","scope":4139,"src":"2296:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4118,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4121,"mutability":"mutable","name":"result","nameLocation":"2318:6:22","nodeType":"VariableDeclaration","scope":4139,"src":"2310:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:22"},"scope":5575,"src":"2235:205:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4165,"nodeType":"Block","src":"2912:207:22","statements":[{"id":4164,"nodeType":"UncheckedBlock","src":"2922:191:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"3060:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"3066:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4153,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"3070:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4158,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"3091:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4156,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"3075:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"3075:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4150,"id":4163,"nodeType":"Return","src":"3053:49:22"}]}]},"documentation":{"id":4140,"nodeType":"StructuredDocumentation","src":"2446:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4166,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:22","nodeType":"FunctionDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"mutability":"mutable","name":"condition","nameLocation":"2847:9:22","nodeType":"VariableDeclaration","scope":4166,"src":"2842:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4141,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"a","nameLocation":"2866:1:22","nodeType":"VariableDeclaration","scope":4166,"src":"2858:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"b","nameLocation":"2877:1:22","nodeType":"VariableDeclaration","scope":4166,"src":"2869:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:22"},"returnParameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4166,"src":"2903:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:22"},"scope":5575,"src":"2825:294:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4184,"nodeType":"Block","src":"3256:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"3281:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"3285:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4180,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"3288:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4181,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"3291:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4176,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"3273:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4175,"id":4183,"nodeType":"Return","src":"3266:27:22"}]},"documentation":{"id":4167,"nodeType":"StructuredDocumentation","src":"3125:59:22","text":" @dev Returns the largest of two numbers."},"id":4185,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:22","nodeType":"FunctionDefinition","parameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"a","nameLocation":"3210:1:22","nodeType":"VariableDeclaration","scope":4185,"src":"3202:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4171,"mutability":"mutable","name":"b","nameLocation":"3221:1:22","nodeType":"VariableDeclaration","scope":4185,"src":"3213:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:22"},"returnParameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4185,"src":"3247:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:22"},"scope":5575,"src":"3189:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4203,"nodeType":"Block","src":"3438:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"3463:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4197,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"3467:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4199,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"3470:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"3473:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4195,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"3455:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4194,"id":4202,"nodeType":"Return","src":"3448:27:22"}]},"documentation":{"id":4186,"nodeType":"StructuredDocumentation","src":"3306:60:22","text":" @dev Returns the smallest of two numbers."},"id":4204,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:22","nodeType":"FunctionDefinition","parameters":{"id":4191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"a","nameLocation":"3392:1:22","nodeType":"VariableDeclaration","scope":4204,"src":"3384:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4187,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4190,"mutability":"mutable","name":"b","nameLocation":"3403:1:22","nodeType":"VariableDeclaration","scope":4204,"src":"3395:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:22"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4204,"src":"3429:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:22"},"scope":5575,"src":"3371:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4226,"nodeType":"Block","src":"3666:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"3721:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4215,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"3725:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4218,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"3731:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4219,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"3735:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4213,"id":4225,"nodeType":"Return","src":"3713:28:22"}]},"documentation":{"id":4205,"nodeType":"StructuredDocumentation","src":"3488:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:22","nodeType":"FunctionDefinition","parameters":{"id":4210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"a","nameLocation":"3620:1:22","nodeType":"VariableDeclaration","scope":4227,"src":"3612:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4209,"mutability":"mutable","name":"b","nameLocation":"3631:1:22","nodeType":"VariableDeclaration","scope":4227,"src":"3623:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4208,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:22"},"returnParameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4227,"src":"3657:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:22"},"scope":5575,"src":"3595:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4267,"nodeType":"Block","src":"4040:633:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4237,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"4054:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4248,"nodeType":"IfStatement","src":"4050:150:22","trueBody":{"id":4247,"nodeType":"Block","src":"4062:138:22","statements":[{"expression":{"arguments":[{"expression":{"id":4243,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"4166:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1767_$","typeString":"type(library Panic)"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1734,"src":"4166:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4240,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"4154:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1767_$","typeString":"type(library Panic)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"4154:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4246,"nodeType":"ExpressionStatement","src":"4154:35:22"}]}},{"id":4266,"nodeType":"UncheckedBlock","src":"4583:84:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"4630:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4249,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"4614:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"4614:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"4641:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4259,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"4650:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4236,"id":4265,"nodeType":"Return","src":"4607:49:22"}]}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"3754:210:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4268,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:22","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"a","nameLocation":"3994:1:22","nodeType":"VariableDeclaration","scope":4268,"src":"3986:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"b","nameLocation":"4005:1:22","nodeType":"VariableDeclaration","scope":4268,"src":"3997:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4231,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:22"},"returnParameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4268,"src":"4031:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:22"},"scope":5575,"src":"3969:704:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4404,"nodeType":"Block","src":"5094:4128:22","statements":[{"id":4403,"nodeType":"UncheckedBlock","src":"5104:4112:22","statements":[{"assignments":[4281],"declarations":[{"constant":false,"id":4281,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:22","nodeType":"VariableDeclaration","scope":4403,"src":"5433:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4285,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4282,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"5449:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4283,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"5453:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:22"},{"assignments":[4287],"declarations":[{"constant":false,"id":4287,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:22","nodeType":"VariableDeclaration","scope":4403,"src":"5513:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4288,"nodeType":"VariableDeclarationStatement","src":"5513:13:22"},{"AST":{"nativeSrc":"5593:122:22","nodeType":"YulBlock","src":"5593:122:22","statements":[{"nativeSrc":"5611:30:22","nodeType":"YulVariableDeclaration","src":"5611:30:22","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:22","nodeType":"YulIdentifier","src":"5628:1:22"},{"name":"y","nativeSrc":"5631:1:22","nodeType":"YulIdentifier","src":"5631:1:22"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:22","nodeType":"YulLiteral","src":"5638:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:22","nodeType":"YulIdentifier","src":"5634:3:22"},"nativeSrc":"5634:6:22","nodeType":"YulFunctionCall","src":"5634:6:22"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:22","nodeType":"YulIdentifier","src":"5621:6:22"},"nativeSrc":"5621:20:22","nodeType":"YulFunctionCall","src":"5621:20:22"},"variables":[{"name":"mm","nativeSrc":"5615:2:22","nodeType":"YulTypedName","src":"5615:2:22","type":""}]},{"nativeSrc":"5658:43:22","nodeType":"YulAssignment","src":"5658:43:22","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:22","nodeType":"YulIdentifier","src":"5675:2:22"},{"name":"prod0","nativeSrc":"5679:5:22","nodeType":"YulIdentifier","src":"5679:5:22"}],"functionName":{"name":"sub","nativeSrc":"5671:3:22","nodeType":"YulIdentifier","src":"5671:3:22"},"nativeSrc":"5671:14:22","nodeType":"YulFunctionCall","src":"5671:14:22"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:22","nodeType":"YulIdentifier","src":"5690:2:22"},{"name":"prod0","nativeSrc":"5694:5:22","nodeType":"YulIdentifier","src":"5694:5:22"}],"functionName":{"name":"lt","nativeSrc":"5687:2:22","nodeType":"YulIdentifier","src":"5687:2:22"},"nativeSrc":"5687:13:22","nodeType":"YulFunctionCall","src":"5687:13:22"}],"functionName":{"name":"sub","nativeSrc":"5667:3:22","nodeType":"YulIdentifier","src":"5667:3:22"},"nativeSrc":"5667:34:22","nodeType":"YulFunctionCall","src":"5667:34:22"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:22","nodeType":"YulIdentifier","src":"5658:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4281,"isOffset":false,"isSlot":false,"src":"5679:5:22","valueSize":1},{"declaration":4281,"isOffset":false,"isSlot":false,"src":"5694:5:22","valueSize":1},{"declaration":4287,"isOffset":false,"isSlot":false,"src":"5658:5:22","valueSize":1},{"declaration":4271,"isOffset":false,"isSlot":false,"src":"5628:1:22","valueSize":1},{"declaration":4273,"isOffset":false,"isSlot":false,"src":"5631:1:22","valueSize":1}],"id":4289,"nodeType":"InlineAssembly","src":"5584:131:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"5796:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4298,"nodeType":"IfStatement","src":"5792:368:22","trueBody":{"id":4297,"nodeType":"Block","src":"5808:352:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4293,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"6126:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4294,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"6134:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4279,"id":4296,"nodeType":"Return","src":"6119:26:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4299,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"6270:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4300,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"6285:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4317,"nodeType":"IfStatement","src":"6266:143:22","trueBody":{"id":4316,"nodeType":"Block","src":"6292:117:22","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"6330:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4309,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"6348:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1767_$","typeString":"type(library Panic)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1734,"src":"6348:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4311,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"6372:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1767_$","typeString":"type(library Panic)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:22","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"6372:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4305,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"6322:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4302,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"6310:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1767_$","typeString":"type(library Panic)"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"6310:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4315,"nodeType":"ExpressionStatement","src":"6310:84:22"}]}},{"assignments":[4319],"declarations":[{"constant":false,"id":4319,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:22","nodeType":"VariableDeclaration","scope":4403,"src":"6664:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4320,"nodeType":"VariableDeclarationStatement","src":"6664:17:22"},{"AST":{"nativeSrc":"6704:291:22","nodeType":"YulBlock","src":"6704:291:22","statements":[{"nativeSrc":"6773:38:22","nodeType":"YulAssignment","src":"6773:38:22","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:22","nodeType":"YulIdentifier","src":"6793:1:22"},{"name":"y","nativeSrc":"6796:1:22","nodeType":"YulIdentifier","src":"6796:1:22"},{"name":"denominator","nativeSrc":"6799:11:22","nodeType":"YulIdentifier","src":"6799:11:22"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:22","nodeType":"YulIdentifier","src":"6786:6:22"},"nativeSrc":"6786:25:22","nodeType":"YulFunctionCall","src":"6786:25:22"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:22","nodeType":"YulIdentifier","src":"6773:9:22"}]},{"nativeSrc":"6893:41:22","nodeType":"YulAssignment","src":"6893:41:22","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:22","nodeType":"YulIdentifier","src":"6906:5:22"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:22","nodeType":"YulIdentifier","src":"6916:9:22"},{"name":"prod0","nativeSrc":"6927:5:22","nodeType":"YulIdentifier","src":"6927:5:22"}],"functionName":{"name":"gt","nativeSrc":"6913:2:22","nodeType":"YulIdentifier","src":"6913:2:22"},"nativeSrc":"6913:20:22","nodeType":"YulFunctionCall","src":"6913:20:22"}],"functionName":{"name":"sub","nativeSrc":"6902:3:22","nodeType":"YulIdentifier","src":"6902:3:22"},"nativeSrc":"6902:32:22","nodeType":"YulFunctionCall","src":"6902:32:22"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:22","nodeType":"YulIdentifier","src":"6893:5:22"}]},{"nativeSrc":"6951:30:22","nodeType":"YulAssignment","src":"6951:30:22","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:22","nodeType":"YulIdentifier","src":"6964:5:22"},{"name":"remainder","nativeSrc":"6971:9:22","nodeType":"YulIdentifier","src":"6971:9:22"}],"functionName":{"name":"sub","nativeSrc":"6960:3:22","nodeType":"YulIdentifier","src":"6960:3:22"},"nativeSrc":"6960:21:22","nodeType":"YulFunctionCall","src":"6960:21:22"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:22","nodeType":"YulIdentifier","src":"6951:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4275,"isOffset":false,"isSlot":false,"src":"6799:11:22","valueSize":1},{"declaration":4281,"isOffset":false,"isSlot":false,"src":"6927:5:22","valueSize":1},{"declaration":4281,"isOffset":false,"isSlot":false,"src":"6951:5:22","valueSize":1},{"declaration":4281,"isOffset":false,"isSlot":false,"src":"6964:5:22","valueSize":1},{"declaration":4287,"isOffset":false,"isSlot":false,"src":"6893:5:22","valueSize":1},{"declaration":4287,"isOffset":false,"isSlot":false,"src":"6906:5:22","valueSize":1},{"declaration":4319,"isOffset":false,"isSlot":false,"src":"6773:9:22","valueSize":1},{"declaration":4319,"isOffset":false,"isSlot":false,"src":"6916:9:22","valueSize":1},{"declaration":4319,"isOffset":false,"isSlot":false,"src":"6971:9:22","valueSize":1},{"declaration":4271,"isOffset":false,"isSlot":false,"src":"6793:1:22","valueSize":1},{"declaration":4273,"isOffset":false,"isSlot":false,"src":"6796:1:22","valueSize":1}],"id":4321,"nodeType":"InlineAssembly","src":"6695:300:22"},{"assignments":[4323],"declarations":[{"constant":false,"id":4323,"mutability":"mutable","name":"twos","nameLocation":"7207:4:22","nodeType":"VariableDeclaration","scope":4403,"src":"7199:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4330,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4324,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"7214:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4326,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"7233:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:22"},{"AST":{"nativeSrc":"7268:366:22","nodeType":"YulBlock","src":"7268:366:22","statements":[{"nativeSrc":"7333:37:22","nodeType":"YulAssignment","src":"7333:37:22","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:22","nodeType":"YulIdentifier","src":"7352:11:22"},{"name":"twos","nativeSrc":"7365:4:22","nodeType":"YulIdentifier","src":"7365:4:22"}],"functionName":{"name":"div","nativeSrc":"7348:3:22","nodeType":"YulIdentifier","src":"7348:3:22"},"nativeSrc":"7348:22:22","nodeType":"YulFunctionCall","src":"7348:22:22"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:22","nodeType":"YulIdentifier","src":"7333:11:22"}]},{"nativeSrc":"7437:25:22","nodeType":"YulAssignment","src":"7437:25:22","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:22","nodeType":"YulIdentifier","src":"7450:5:22"},{"name":"twos","nativeSrc":"7457:4:22","nodeType":"YulIdentifier","src":"7457:4:22"}],"functionName":{"name":"div","nativeSrc":"7446:3:22","nodeType":"YulIdentifier","src":"7446:3:22"},"nativeSrc":"7446:16:22","nodeType":"YulFunctionCall","src":"7446:16:22"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:22","nodeType":"YulIdentifier","src":"7437:5:22"}]},{"nativeSrc":"7581:39:22","nodeType":"YulAssignment","src":"7581:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:22","nodeType":"YulLiteral","src":"7601:1:22","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:22","nodeType":"YulIdentifier","src":"7604:4:22"}],"functionName":{"name":"sub","nativeSrc":"7597:3:22","nodeType":"YulIdentifier","src":"7597:3:22"},"nativeSrc":"7597:12:22","nodeType":"YulFunctionCall","src":"7597:12:22"},{"name":"twos","nativeSrc":"7611:4:22","nodeType":"YulIdentifier","src":"7611:4:22"}],"functionName":{"name":"div","nativeSrc":"7593:3:22","nodeType":"YulIdentifier","src":"7593:3:22"},"nativeSrc":"7593:23:22","nodeType":"YulFunctionCall","src":"7593:23:22"},{"kind":"number","nativeSrc":"7618:1:22","nodeType":"YulLiteral","src":"7618:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:22","nodeType":"YulIdentifier","src":"7589:3:22"},"nativeSrc":"7589:31:22","nodeType":"YulFunctionCall","src":"7589:31:22"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:22","nodeType":"YulIdentifier","src":"7581:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4275,"isOffset":false,"isSlot":false,"src":"7333:11:22","valueSize":1},{"declaration":4275,"isOffset":false,"isSlot":false,"src":"7352:11:22","valueSize":1},{"declaration":4281,"isOffset":false,"isSlot":false,"src":"7437:5:22","valueSize":1},{"declaration":4281,"isOffset":false,"isSlot":false,"src":"7450:5:22","valueSize":1},{"declaration":4323,"isOffset":false,"isSlot":false,"src":"7365:4:22","valueSize":1},{"declaration":4323,"isOffset":false,"isSlot":false,"src":"7457:4:22","valueSize":1},{"declaration":4323,"isOffset":false,"isSlot":false,"src":"7581:4:22","valueSize":1},{"declaration":4323,"isOffset":false,"isSlot":false,"src":"7604:4:22","valueSize":1},{"declaration":4323,"isOffset":false,"isSlot":false,"src":"7611:4:22","valueSize":1}],"id":4331,"nodeType":"InlineAssembly","src":"7259:375:22"},{"expression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4332,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"7700:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4333,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"7709:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4334,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"7717:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4337,"nodeType":"ExpressionStatement","src":"7700:21:22"},{"assignments":[4339],"declarations":[{"constant":false,"id":4339,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:22","nodeType":"VariableDeclaration","scope":4403,"src":"8056:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4346,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4341,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"8079:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:22"},{"expression":{"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4347,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8312:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4349,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"8327:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4350,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8341:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4354,"nodeType":"ExpressionStatement","src":"8312:36:22"},{"expression":{"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8382:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"8397:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4358,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8411:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4362,"nodeType":"ExpressionStatement","src":"8382:36:22"},{"expression":{"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4363,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8454:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"8469:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4366,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8483:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4370,"nodeType":"ExpressionStatement","src":"8454:36:22"},{"expression":{"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4371,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8525:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"8540:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4374,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8554:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4378,"nodeType":"ExpressionStatement","src":"8525:36:22"},{"expression":{"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4379,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8598:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4381,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"8613:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4382,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8627:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4386,"nodeType":"ExpressionStatement","src":"8598:36:22"},{"expression":{"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4387,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8672:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4389,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"8687:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4390,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8701:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4394,"nodeType":"ExpressionStatement","src":"8672:36:22"},{"expression":{"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"9154:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4396,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"9163:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4397,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"9171:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4400,"nodeType":"ExpressionStatement","src":"9154:24:22"},{"expression":{"id":4401,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"9199:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4279,"id":4402,"nodeType":"Return","src":"9192:13:22"}]}]},"documentation":{"id":4269,"nodeType":"StructuredDocumentation","src":"4679:312:22","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4405,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:22","nodeType":"FunctionDefinition","parameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"x","nameLocation":"5020:1:22","nodeType":"VariableDeclaration","scope":4405,"src":"5012:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"y","nameLocation":"5031:1:22","nodeType":"VariableDeclaration","scope":4405,"src":"5023:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4275,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:22","nodeType":"VariableDeclaration","scope":4405,"src":"5034:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4274,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:22"},"returnParameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"result","nameLocation":"5086:6:22","nodeType":"VariableDeclaration","scope":4405,"src":"5078:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4277,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:22"},"scope":5575,"src":"4996:4226:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4441,"nodeType":"Block","src":"9461:128:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4421,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"9485:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4422,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"9488:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4423,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"9491:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4420,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4405,4442],"referencedDeclaration":4405,"src":"9478:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4428,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"9539:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}],"id":4427,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"9522:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3981_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4431,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"9559:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4432,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"9562:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4433,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"9565:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4430,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4425,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"9506:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"9506:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4419,"id":4440,"nodeType":"Return","src":"9471:111:22"}]},"documentation":{"id":4406,"nodeType":"StructuredDocumentation","src":"9228:118:22","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4442,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:22","nodeType":"FunctionDefinition","parameters":{"id":4416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"x","nameLocation":"9375:1:22","nodeType":"VariableDeclaration","scope":4442,"src":"9367:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4410,"mutability":"mutable","name":"y","nameLocation":"9386:1:22","nodeType":"VariableDeclaration","scope":4442,"src":"9378:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4412,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:22","nodeType":"VariableDeclaration","scope":4442,"src":"9389:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4411,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4415,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:22","nodeType":"VariableDeclaration","scope":4442,"src":"9410:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"},"typeName":{"id":4414,"nodeType":"UserDefinedTypeName","pathNode":{"id":4413,"name":"Rounding","nameLocations":["9410:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3981,"src":"9410:8:22"},"referencedDeclaration":3981,"src":"9410:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:22"},"returnParameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4442,"src":"9452:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:22"},"scope":5575,"src":"9351:238:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4538,"nodeType":"Block","src":"10223:1849:22","statements":[{"id":4537,"nodeType":"UncheckedBlock","src":"10233:1833:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4452,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"10261:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4457,"nodeType":"IfStatement","src":"10257:20:22","trueBody":{"expression":{"hexValue":"30","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4451,"id":4456,"nodeType":"Return","src":"10269:8:22"}},{"assignments":[4459],"declarations":[{"constant":false,"id":4459,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:22","nodeType":"VariableDeclaration","scope":4537,"src":"10748:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4463,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"10768:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4461,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"10772:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:22"},{"assignments":[4465],"declarations":[{"constant":false,"id":4465,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:22","nodeType":"VariableDeclaration","scope":4537,"src":"10787:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4467,"initialValue":{"id":4466,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"10801:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:22"},{"assignments":[4469],"declarations":[{"constant":false,"id":4469,"mutability":"mutable","name":"x","nameLocation":"10945:1:22","nodeType":"VariableDeclaration","scope":4537,"src":"10938:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4468,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4471,"initialValue":{"hexValue":"30","id":4470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:22"},{"assignments":[4473],"declarations":[{"constant":false,"id":4473,"mutability":"mutable","name":"y","nameLocation":"10971:1:22","nodeType":"VariableDeclaration","scope":4537,"src":"10964:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4472,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4475,"initialValue":{"hexValue":"31","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:22"},{"body":{"id":4512,"nodeType":"Block","src":"11014:882:22","statements":[{"assignments":[4480],"declarations":[{"constant":false,"id":4480,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:22","nodeType":"VariableDeclaration","scope":4512,"src":"11032:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4479,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4484,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"11051:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4482,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"11057:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:22"},{"expression":{"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4485,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"11086:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4486,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"11091:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4487,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4488,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"11191:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4489,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"11436:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4490,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"11442:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4491,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"11454:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4494,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4496,"nodeType":"ExpressionStatement","src":"11085:395:22"},{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4497,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"11500:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4498,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"11503:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4499,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4500,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"11585:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"11839:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"11843:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4505,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"11854:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4503,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:22","typeDescriptions":{}}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4511,"nodeType":"ExpressionStatement","src":"11499:382:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"10998:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4513,"nodeType":"WhileStatement","src":"10991:905:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4514,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"11914:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4519,"nodeType":"IfStatement","src":"11910:22:22","trueBody":{"expression":{"hexValue":"30","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4451,"id":4518,"nodeType":"Return","src":"11924:8:22"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4521,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"11983:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"11990:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:22","subExpression":{"id":4527,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"12003:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4525,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:22","typeDescriptions":{}}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4533,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"12015:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:22","typeDescriptions":{}}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4520,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"11975:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4451,"id":4536,"nodeType":"Return","src":"11968:50:22"}]}]},"documentation":{"id":4443,"nodeType":"StructuredDocumentation","src":"9595:553:22","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4539,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:22","nodeType":"FunctionDefinition","parameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"a","nameLocation":"10177:1:22","nodeType":"VariableDeclaration","scope":4539,"src":"10169:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4447,"mutability":"mutable","name":"n","nameLocation":"10188:1:22","nodeType":"VariableDeclaration","scope":4539,"src":"10180:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:22"},"returnParameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4539,"src":"10214:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:22"},"scope":5575,"src":"10153:1919:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4559,"nodeType":"Block","src":"12672:82:22","statements":[{"id":4558,"nodeType":"UncheckedBlock","src":"12682:66:22","statements":[{"expression":{"arguments":[{"id":4551,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"12725:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"12728:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4555,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"12735:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4549,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"12713:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5575_$","typeString":"type(library Math)"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:22","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4596,"src":"12713:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4548,"id":4557,"nodeType":"Return","src":"12706:31:22"}]}]},"documentation":{"id":4540,"nodeType":"StructuredDocumentation","src":"12078:514:22","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4560,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:22","nodeType":"FunctionDefinition","parameters":{"id":4545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"a","nameLocation":"12626:1:22","nodeType":"VariableDeclaration","scope":4560,"src":"12618:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4544,"mutability":"mutable","name":"p","nameLocation":"12637:1:22","nodeType":"VariableDeclaration","scope":4560,"src":"12629:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4543,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:22"},"returnParameters":{"id":4548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4560,"src":"12663:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:22"},"scope":5575,"src":"12597:157:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4595,"nodeType":"Block","src":"13524:174:22","statements":[{"assignments":[4573,4575],"declarations":[{"constant":false,"id":4573,"mutability":"mutable","name":"success","nameLocation":"13540:7:22","nodeType":"VariableDeclaration","scope":4595,"src":"13535:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4572,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4575,"mutability":"mutable","name":"result","nameLocation":"13557:6:22","nodeType":"VariableDeclaration","scope":4595,"src":"13549:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4581,"initialValue":{"arguments":[{"id":4577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"13577:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4578,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"13580:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4579,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"13583:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4576,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4620,4702],"referencedDeclaration":4620,"src":"13567:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:22"},{"condition":{"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:22","subExpression":{"id":4582,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"13600:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4592,"nodeType":"IfStatement","src":"13595:74:22","trueBody":{"id":4591,"nodeType":"Block","src":"13609:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":4587,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"13635:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1767_$","typeString":"type(library Panic)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1734,"src":"13635:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4584,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"13623:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1767_$","typeString":"type(library Panic)"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"13623:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4590,"nodeType":"ExpressionStatement","src":"13623:35:22"}]}},{"expression":{"id":4593,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"13685:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4571,"id":4594,"nodeType":"Return","src":"13678:13:22"}]},"documentation":{"id":4561,"nodeType":"StructuredDocumentation","src":"12760:678:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4596,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:22","nodeType":"FunctionDefinition","parameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"b","nameLocation":"13467:1:22","nodeType":"VariableDeclaration","scope":4596,"src":"13459:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4562,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4565,"mutability":"mutable","name":"e","nameLocation":"13478:1:22","nodeType":"VariableDeclaration","scope":4596,"src":"13470:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4567,"mutability":"mutable","name":"m","nameLocation":"13489:1:22","nodeType":"VariableDeclaration","scope":4596,"src":"13481:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4566,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:22"},"returnParameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4596,"src":"13515:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:22"},"scope":5575,"src":"13443:255:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4619,"nodeType":"Block","src":"14552:1493:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4610,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"14566:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4617,"nodeType":"IfStatement","src":"14562:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4609,"id":4616,"nodeType":"Return","src":"14574:17:22"}},{"AST":{"nativeSrc":"14626:1413:22","nodeType":"YulBlock","src":"14626:1413:22","statements":[{"nativeSrc":"14640:22:22","nodeType":"YulVariableDeclaration","src":"14640:22:22","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:22","nodeType":"YulLiteral","src":"14657:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:22","nodeType":"YulIdentifier","src":"14651:5:22"},"nativeSrc":"14651:11:22","nodeType":"YulFunctionCall","src":"14651:11:22"},"variables":[{"name":"ptr","nativeSrc":"14644:3:22","nodeType":"YulTypedName","src":"14644:3:22","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:22","nodeType":"YulIdentifier","src":"15570:3:22"},{"kind":"number","nativeSrc":"15575:4:22","nodeType":"YulLiteral","src":"15575:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:22","nodeType":"YulIdentifier","src":"15563:6:22"},"nativeSrc":"15563:17:22","nodeType":"YulFunctionCall","src":"15563:17:22"},"nativeSrc":"15563:17:22","nodeType":"YulExpressionStatement","src":"15563:17:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:22","nodeType":"YulIdentifier","src":"15604:3:22"},{"kind":"number","nativeSrc":"15609:4:22","nodeType":"YulLiteral","src":"15609:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:22","nodeType":"YulIdentifier","src":"15600:3:22"},"nativeSrc":"15600:14:22","nodeType":"YulFunctionCall","src":"15600:14:22"},{"kind":"number","nativeSrc":"15616:4:22","nodeType":"YulLiteral","src":"15616:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:22","nodeType":"YulIdentifier","src":"15593:6:22"},"nativeSrc":"15593:28:22","nodeType":"YulFunctionCall","src":"15593:28:22"},"nativeSrc":"15593:28:22","nodeType":"YulExpressionStatement","src":"15593:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:22","nodeType":"YulIdentifier","src":"15645:3:22"},{"kind":"number","nativeSrc":"15650:4:22","nodeType":"YulLiteral","src":"15650:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:22","nodeType":"YulIdentifier","src":"15641:3:22"},"nativeSrc":"15641:14:22","nodeType":"YulFunctionCall","src":"15641:14:22"},{"kind":"number","nativeSrc":"15657:4:22","nodeType":"YulLiteral","src":"15657:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:22","nodeType":"YulIdentifier","src":"15634:6:22"},"nativeSrc":"15634:28:22","nodeType":"YulFunctionCall","src":"15634:28:22"},"nativeSrc":"15634:28:22","nodeType":"YulExpressionStatement","src":"15634:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:22","nodeType":"YulIdentifier","src":"15686:3:22"},{"kind":"number","nativeSrc":"15691:4:22","nodeType":"YulLiteral","src":"15691:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:22","nodeType":"YulIdentifier","src":"15682:3:22"},"nativeSrc":"15682:14:22","nodeType":"YulFunctionCall","src":"15682:14:22"},{"name":"b","nativeSrc":"15698:1:22","nodeType":"YulIdentifier","src":"15698:1:22"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:22","nodeType":"YulIdentifier","src":"15675:6:22"},"nativeSrc":"15675:25:22","nodeType":"YulFunctionCall","src":"15675:25:22"},"nativeSrc":"15675:25:22","nodeType":"YulExpressionStatement","src":"15675:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:22","nodeType":"YulIdentifier","src":"15724:3:22"},{"kind":"number","nativeSrc":"15729:4:22","nodeType":"YulLiteral","src":"15729:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:22","nodeType":"YulIdentifier","src":"15720:3:22"},"nativeSrc":"15720:14:22","nodeType":"YulFunctionCall","src":"15720:14:22"},{"name":"e","nativeSrc":"15736:1:22","nodeType":"YulIdentifier","src":"15736:1:22"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:22","nodeType":"YulIdentifier","src":"15713:6:22"},"nativeSrc":"15713:25:22","nodeType":"YulFunctionCall","src":"15713:25:22"},"nativeSrc":"15713:25:22","nodeType":"YulExpressionStatement","src":"15713:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:22","nodeType":"YulIdentifier","src":"15762:3:22"},{"kind":"number","nativeSrc":"15767:4:22","nodeType":"YulLiteral","src":"15767:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:22","nodeType":"YulIdentifier","src":"15758:3:22"},"nativeSrc":"15758:14:22","nodeType":"YulFunctionCall","src":"15758:14:22"},{"name":"m","nativeSrc":"15774:1:22","nodeType":"YulIdentifier","src":"15774:1:22"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:22","nodeType":"YulIdentifier","src":"15751:6:22"},"nativeSrc":"15751:25:22","nodeType":"YulFunctionCall","src":"15751:25:22"},"nativeSrc":"15751:25:22","nodeType":"YulExpressionStatement","src":"15751:25:22"},{"nativeSrc":"15938:57:22","nodeType":"YulAssignment","src":"15938:57:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:22","nodeType":"YulIdentifier","src":"15960:3:22"},"nativeSrc":"15960:5:22","nodeType":"YulFunctionCall","src":"15960:5:22"},{"kind":"number","nativeSrc":"15967:4:22","nodeType":"YulLiteral","src":"15967:4:22","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:22","nodeType":"YulIdentifier","src":"15973:3:22"},{"kind":"number","nativeSrc":"15978:4:22","nodeType":"YulLiteral","src":"15978:4:22","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:22","nodeType":"YulLiteral","src":"15984:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:22","nodeType":"YulLiteral","src":"15990:4:22","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:22","nodeType":"YulIdentifier","src":"15949:10:22"},"nativeSrc":"15949:46:22","nodeType":"YulFunctionCall","src":"15949:46:22"},"variableNames":[{"name":"success","nativeSrc":"15938:7:22","nodeType":"YulIdentifier","src":"15938:7:22"}]},{"nativeSrc":"16008:21:22","nodeType":"YulAssignment","src":"16008:21:22","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:22","nodeType":"YulLiteral","src":"16024:4:22","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:22","nodeType":"YulIdentifier","src":"16018:5:22"},"nativeSrc":"16018:11:22","nodeType":"YulFunctionCall","src":"16018:11:22"},"variableNames":[{"name":"result","nativeSrc":"16008:6:22","nodeType":"YulIdentifier","src":"16008:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4599,"isOffset":false,"isSlot":false,"src":"15698:1:22","valueSize":1},{"declaration":4601,"isOffset":false,"isSlot":false,"src":"15736:1:22","valueSize":1},{"declaration":4603,"isOffset":false,"isSlot":false,"src":"15774:1:22","valueSize":1},{"declaration":4608,"isOffset":false,"isSlot":false,"src":"16008:6:22","valueSize":1},{"declaration":4606,"isOffset":false,"isSlot":false,"src":"15938:7:22","valueSize":1}],"flags":["memory-safe"],"id":4618,"nodeType":"InlineAssembly","src":"14601:1438:22"}]},"documentation":{"id":4597,"nodeType":"StructuredDocumentation","src":"13704:738:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4620,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:22","nodeType":"FunctionDefinition","parameters":{"id":4604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"b","nameLocation":"14474:1:22","nodeType":"VariableDeclaration","scope":4620,"src":"14466:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4601,"mutability":"mutable","name":"e","nameLocation":"14485:1:22","nodeType":"VariableDeclaration","scope":4620,"src":"14477:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4600,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4603,"mutability":"mutable","name":"m","nameLocation":"14496:1:22","nodeType":"VariableDeclaration","scope":4620,"src":"14488:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:22"},"returnParameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"success","nameLocation":"14527:7:22","nodeType":"VariableDeclaration","scope":4620,"src":"14522:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4605,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"result","nameLocation":"14544:6:22","nodeType":"VariableDeclaration","scope":4620,"src":"14536:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4607,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:22"},"scope":5575,"src":"14447:1598:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4655,"nodeType":"Block","src":"16242:179:22","statements":[{"assignments":[4633,4635],"declarations":[{"constant":false,"id":4633,"mutability":"mutable","name":"success","nameLocation":"16258:7:22","nodeType":"VariableDeclaration","scope":4655,"src":"16253:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4632,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4635,"mutability":"mutable","name":"result","nameLocation":"16280:6:22","nodeType":"VariableDeclaration","scope":4655,"src":"16267:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4634,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4641,"initialValue":{"arguments":[{"id":4637,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"16300:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4638,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"16303:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4639,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"16306:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4636,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4620,4702],"referencedDeclaration":4702,"src":"16290:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:22"},{"condition":{"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:22","subExpression":{"id":4642,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"16323:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4652,"nodeType":"IfStatement","src":"16318:74:22","trueBody":{"id":4651,"nodeType":"Block","src":"16332:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":4647,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"16358:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1767_$","typeString":"type(library Panic)"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1734,"src":"16358:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4644,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"16346:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1767_$","typeString":"type(library Panic)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"16346:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4650,"nodeType":"ExpressionStatement","src":"16346:35:22"}]}},{"expression":{"id":4653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"16408:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4631,"id":4654,"nodeType":"Return","src":"16401:13:22"}]},"documentation":{"id":4621,"nodeType":"StructuredDocumentation","src":"16051:85:22","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4656,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:22","nodeType":"FunctionDefinition","parameters":{"id":4628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4623,"mutability":"mutable","name":"b","nameLocation":"16170:1:22","nodeType":"VariableDeclaration","scope":4656,"src":"16157:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4622,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4625,"mutability":"mutable","name":"e","nameLocation":"16186:1:22","nodeType":"VariableDeclaration","scope":4656,"src":"16173:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4624,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4627,"mutability":"mutable","name":"m","nameLocation":"16202:1:22","nodeType":"VariableDeclaration","scope":4656,"src":"16189:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4626,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:22"},"returnParameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4656,"src":"16228:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4629,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:22"},"scope":5575,"src":"16141:280:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4701,"nodeType":"Block","src":"16675:771:22","statements":[{"condition":{"arguments":[{"id":4671,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"16700:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4670,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"16689:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4680,"nodeType":"IfStatement","src":"16685:47:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4674,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4669,"id":4679,"nodeType":"Return","src":"16704:28:22"}},{"assignments":[4682],"declarations":[{"constant":false,"id":4682,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:22","nodeType":"VariableDeclaration","scope":4701,"src":"16743:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4685,"initialValue":{"expression":{"id":4683,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"16758:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:22","memberName":"length","nodeType":"MemberAccess","src":"16758:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:22"},{"expression":{"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"16848:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"16874:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:22","memberName":"length","nodeType":"MemberAccess","src":"16874:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4691,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"16884:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:22","memberName":"length","nodeType":"MemberAccess","src":"16884:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4693,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"16894:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4694,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"16900:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4695,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"16903:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4696,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"16906:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4687,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4699,"nodeType":"ExpressionStatement","src":"16848:60:22"},{"AST":{"nativeSrc":"16944:496:22","nodeType":"YulBlock","src":"16944:496:22","statements":[{"nativeSrc":"16958:32:22","nodeType":"YulVariableDeclaration","src":"16958:32:22","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:22","nodeType":"YulIdentifier","src":"16977:6:22"},{"kind":"number","nativeSrc":"16985:4:22","nodeType":"YulLiteral","src":"16985:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:22","nodeType":"YulIdentifier","src":"16973:3:22"},"nativeSrc":"16973:17:22","nodeType":"YulFunctionCall","src":"16973:17:22"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:22","nodeType":"YulTypedName","src":"16962:7:22","type":""}]},{"nativeSrc":"17080:73:22","nodeType":"YulAssignment","src":"17080:73:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:22","nodeType":"YulIdentifier","src":"17102:3:22"},"nativeSrc":"17102:5:22","nodeType":"YulFunctionCall","src":"17102:5:22"},{"kind":"number","nativeSrc":"17109:4:22","nodeType":"YulLiteral","src":"17109:4:22","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:22","nodeType":"YulIdentifier","src":"17115:7:22"},{"arguments":[{"name":"result","nativeSrc":"17130:6:22","nodeType":"YulIdentifier","src":"17130:6:22"}],"functionName":{"name":"mload","nativeSrc":"17124:5:22","nodeType":"YulIdentifier","src":"17124:5:22"},"nativeSrc":"17124:13:22","nodeType":"YulFunctionCall","src":"17124:13:22"},{"name":"dataPtr","nativeSrc":"17139:7:22","nodeType":"YulIdentifier","src":"17139:7:22"},{"name":"mLen","nativeSrc":"17148:4:22","nodeType":"YulIdentifier","src":"17148:4:22"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:22","nodeType":"YulIdentifier","src":"17091:10:22"},"nativeSrc":"17091:62:22","nodeType":"YulFunctionCall","src":"17091:62:22"},"variableNames":[{"name":"success","nativeSrc":"17080:7:22","nodeType":"YulIdentifier","src":"17080:7:22"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:22","nodeType":"YulIdentifier","src":"17309:6:22"},{"name":"mLen","nativeSrc":"17317:4:22","nodeType":"YulIdentifier","src":"17317:4:22"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:22","nodeType":"YulIdentifier","src":"17302:6:22"},"nativeSrc":"17302:20:22","nodeType":"YulFunctionCall","src":"17302:20:22"},"nativeSrc":"17302:20:22","nodeType":"YulExpressionStatement","src":"17302:20:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:22","nodeType":"YulLiteral","src":"17405:4:22","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:22","nodeType":"YulIdentifier","src":"17415:7:22"},{"name":"mLen","nativeSrc":"17424:4:22","nodeType":"YulIdentifier","src":"17424:4:22"}],"functionName":{"name":"add","nativeSrc":"17411:3:22","nodeType":"YulIdentifier","src":"17411:3:22"},"nativeSrc":"17411:18:22","nodeType":"YulFunctionCall","src":"17411:18:22"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:22","nodeType":"YulIdentifier","src":"17398:6:22"},"nativeSrc":"17398:32:22","nodeType":"YulFunctionCall","src":"17398:32:22"},"nativeSrc":"17398:32:22","nodeType":"YulExpressionStatement","src":"17398:32:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":4682,"isOffset":false,"isSlot":false,"src":"17148:4:22","valueSize":1},{"declaration":4682,"isOffset":false,"isSlot":false,"src":"17317:4:22","valueSize":1},{"declaration":4682,"isOffset":false,"isSlot":false,"src":"17424:4:22","valueSize":1},{"declaration":4668,"isOffset":false,"isSlot":false,"src":"16977:6:22","valueSize":1},{"declaration":4668,"isOffset":false,"isSlot":false,"src":"17130:6:22","valueSize":1},{"declaration":4668,"isOffset":false,"isSlot":false,"src":"17309:6:22","valueSize":1},{"declaration":4666,"isOffset":false,"isSlot":false,"src":"17080:7:22","valueSize":1}],"flags":["memory-safe"],"id":4700,"nodeType":"InlineAssembly","src":"16919:521:22"}]},"documentation":{"id":4657,"nodeType":"StructuredDocumentation","src":"16427:88:22","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4702,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:22","nodeType":"FunctionDefinition","parameters":{"id":4664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4659,"mutability":"mutable","name":"b","nameLocation":"16561:1:22","nodeType":"VariableDeclaration","scope":4702,"src":"16548:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4658,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4661,"mutability":"mutable","name":"e","nameLocation":"16585:1:22","nodeType":"VariableDeclaration","scope":4702,"src":"16572:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4660,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4663,"mutability":"mutable","name":"m","nameLocation":"16609:1:22","nodeType":"VariableDeclaration","scope":4702,"src":"16596:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4662,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:22"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4666,"mutability":"mutable","name":"success","nameLocation":"16645:7:22","nodeType":"VariableDeclaration","scope":4702,"src":"16640:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4665,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4668,"mutability":"mutable","name":"result","nameLocation":"16667:6:22","nodeType":"VariableDeclaration","scope":4702,"src":"16654:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4667,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:22"},"scope":5575,"src":"16520:926:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4734,"nodeType":"Block","src":"17601:176:22","statements":[{"body":{"id":4730,"nodeType":"Block","src":"17658:92:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4721,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"17676:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4723,"indexExpression":{"id":4722,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"17686:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4729,"nodeType":"IfStatement","src":"17672:68:22","trueBody":{"id":4728,"nodeType":"Block","src":"17695:45:22","statements":[{"expression":{"hexValue":"66616c7365","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4709,"id":4727,"nodeType":"Return","src":"17713:12:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"17631:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4715,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"17635:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:22","memberName":"length","nodeType":"MemberAccess","src":"17635:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4731,"initializationExpression":{"assignments":[4711],"declarations":[{"constant":false,"id":4711,"mutability":"mutable","name":"i","nameLocation":"17624:1:22","nodeType":"VariableDeclaration","scope":4731,"src":"17616:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4710,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4713,"initialValue":{"hexValue":"30","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:22","subExpression":{"id":4718,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"17655:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4720,"nodeType":"ExpressionStatement","src":"17653:3:22"},"nodeType":"ForStatement","src":"17611:139:22"},{"expression":{"hexValue":"74727565","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4709,"id":4733,"nodeType":"Return","src":"17759:11:22"}]},"documentation":{"id":4703,"nodeType":"StructuredDocumentation","src":"17452:72:22","text":" @dev Returns whether the provided byte array is zero."},"id":4735,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:22","nodeType":"FunctionDefinition","parameters":{"id":4706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4705,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:22","nodeType":"VariableDeclaration","scope":4735,"src":"17549:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4704,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:22"},"returnParameters":{"id":4709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4735,"src":"17595:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4707,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:22"},"scope":5575,"src":"17529:248:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4953,"nodeType":"Block","src":"18137:5124:22","statements":[{"id":4952,"nodeType":"UncheckedBlock","src":"18147:5108:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"18241:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4749,"nodeType":"IfStatement","src":"18237:53:22","trueBody":{"id":4748,"nodeType":"Block","src":"18249:41:22","statements":[{"expression":{"id":4746,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"18274:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4742,"id":4747,"nodeType":"Return","src":"18267:8:22"}]}},{"assignments":[4751],"declarations":[{"constant":false,"id":4751,"mutability":"mutable","name":"aa","nameLocation":"19225:2:22","nodeType":"VariableDeclaration","scope":4952,"src":"19217:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4750,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4753,"initialValue":{"id":4752,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"19230:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:22"},{"assignments":[4755],"declarations":[{"constant":false,"id":4755,"mutability":"mutable","name":"xn","nameLocation":"19253:2:22","nodeType":"VariableDeclaration","scope":4952,"src":"19245:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4754,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4757,"initialValue":{"hexValue":"31","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4758,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19278:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4773,"nodeType":"IfStatement","src":"19274:92:22","trueBody":{"id":4772,"nodeType":"Block","src":"19296:70:22","statements":[{"expression":{"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4764,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19314:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4767,"nodeType":"ExpressionStatement","src":"19314:10:22"},{"expression":{"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4768,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"19342:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4771,"nodeType":"ExpressionStatement","src":"19342:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4774,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19383:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4789,"nodeType":"IfStatement","src":"19379:90:22","trueBody":{"id":4788,"nodeType":"Block","src":"19400:69:22","statements":[{"expression":{"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4780,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19418:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4783,"nodeType":"ExpressionStatement","src":"19418:9:22"},{"expression":{"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4784,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"19445:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4787,"nodeType":"ExpressionStatement","src":"19445:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4790,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19486:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4805,"nodeType":"IfStatement","src":"19482:90:22","trueBody":{"id":4804,"nodeType":"Block","src":"19503:69:22","statements":[{"expression":{"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4796,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19521:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4799,"nodeType":"ExpressionStatement","src":"19521:9:22"},{"expression":{"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4800,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"19548:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4803,"nodeType":"ExpressionStatement","src":"19548:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4806,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19589:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4821,"nodeType":"IfStatement","src":"19585:89:22","trueBody":{"id":4820,"nodeType":"Block","src":"19606:68:22","statements":[{"expression":{"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4812,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19624:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4815,"nodeType":"ExpressionStatement","src":"19624:9:22"},{"expression":{"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4816,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"19651:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4819,"nodeType":"ExpressionStatement","src":"19651:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4822,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19691:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4837,"nodeType":"IfStatement","src":"19687:87:22","trueBody":{"id":4836,"nodeType":"Block","src":"19707:67:22","statements":[{"expression":{"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4828,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19725:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4831,"nodeType":"ExpressionStatement","src":"19725:8:22"},{"expression":{"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4832,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"19751:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4835,"nodeType":"ExpressionStatement","src":"19751:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19791:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4853,"nodeType":"IfStatement","src":"19787:87:22","trueBody":{"id":4852,"nodeType":"Block","src":"19807:67:22","statements":[{"expression":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4844,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19825:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4847,"nodeType":"ExpressionStatement","src":"19825:8:22"},{"expression":{"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4848,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"19851:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4851,"nodeType":"ExpressionStatement","src":"19851:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4854,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19891:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4865,"nodeType":"IfStatement","src":"19887:61:22","trueBody":{"id":4864,"nodeType":"Block","src":"19907:41:22","statements":[{"expression":{"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4860,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"19925:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4863,"nodeType":"ExpressionStatement","src":"19925:8:22"}]}},{"expression":{"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4866,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"20368:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4868,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"20378:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4874,"nodeType":"ExpressionStatement","src":"20368:18:22"},{"expression":{"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4875,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22273:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4876,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22279:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"22284:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4878,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22288:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4885,"nodeType":"ExpressionStatement","src":"22273:23:22"},{"expression":{"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4886,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22382:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22388:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"22393:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4889,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22397:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4896,"nodeType":"ExpressionStatement","src":"22382:23:22"},{"expression":{"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4897,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22493:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4898,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22499:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"22504:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4900,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22508:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4907,"nodeType":"ExpressionStatement","src":"22493:23:22"},{"expression":{"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4908,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22602:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4909,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22608:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"22613:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4911,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22617:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4918,"nodeType":"ExpressionStatement","src":"22602:23:22"},{"expression":{"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4919,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22712:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4920,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22718:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"22723:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4922,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22727:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4929,"nodeType":"ExpressionStatement","src":"22712:23:22"},{"expression":{"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4930,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22822:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4931,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22828:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4932,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"22833:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4933,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"22837:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"nodeType":"ExpressionStatement","src":"22822:23:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4941,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"23211:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"23232:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"23237:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4946,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"23241:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4942,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"23216:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"23216:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4742,"id":4951,"nodeType":"Return","src":"23204:40:22"}]}]},"documentation":{"id":4736,"nodeType":"StructuredDocumentation","src":"17783:292:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:22","nodeType":"FunctionDefinition","parameters":{"id":4739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4738,"mutability":"mutable","name":"a","nameLocation":"18102:1:22","nodeType":"VariableDeclaration","scope":4954,"src":"18094:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:22"},"returnParameters":{"id":4742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"18128:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4740,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:22"},"scope":5575,"src":"18080:5181:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4987,"nodeType":"Block","src":"23434:171:22","statements":[{"id":4986,"nodeType":"UncheckedBlock","src":"23444:155:22","statements":[{"assignments":[4966],"declarations":[{"constant":false,"id":4966,"mutability":"mutable","name":"result","nameLocation":"23476:6:22","nodeType":"VariableDeclaration","scope":4986,"src":"23468:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4965,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4970,"initialValue":{"arguments":[{"id":4968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"23490:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4967,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4954,4988],"referencedDeclaration":4954,"src":"23485:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"23513:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4975,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"23555:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}],"id":4974,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"23538:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3981_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"23568:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"23577:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4980,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"23586:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4972,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"23522:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"23522:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4964,"id":4985,"nodeType":"Return","src":"23506:82:22"}]}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"23267:86:22","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4988,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:22","nodeType":"FunctionDefinition","parameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"a","nameLocation":"23380:1:22","nodeType":"VariableDeclaration","scope":4988,"src":"23372:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:22","nodeType":"VariableDeclaration","scope":4988,"src":"23383:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"},"typeName":{"id":4959,"nodeType":"UserDefinedTypeName","pathNode":{"id":4958,"name":"Rounding","nameLocations":["23383:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3981,"src":"23383:8:22"},"referencedDeclaration":3981,"src":"23383:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:22"},"returnParameters":{"id":4964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4988,"src":"23425:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4962,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:22"},"scope":5575,"src":"23358:247:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5183,"nodeType":"Block","src":"23796:981:22","statements":[{"assignments":[4997],"declarations":[{"constant":false,"id":4997,"mutability":"mutable","name":"result","nameLocation":"23814:6:22","nodeType":"VariableDeclaration","scope":5183,"src":"23806:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4996,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4999,"initialValue":{"hexValue":"30","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:22"},{"assignments":[5001],"declarations":[{"constant":false,"id":5001,"mutability":"mutable","name":"exp","nameLocation":"23842:3:22","nodeType":"VariableDeclaration","scope":5183,"src":"23834:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5000,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5002,"nodeType":"VariableDeclarationStatement","src":"23834:11:22"},{"id":5180,"nodeType":"UncheckedBlock","src":"23855:893:22","statements":[{"expression":{"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5003,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"23879:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"23907:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5005,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"23891:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"23891:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5018,"nodeType":"ExpressionStatement","src":"23879:51:22"},{"expression":{"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"23944:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5020,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"23954:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5022,"nodeType":"ExpressionStatement","src":"23944:13:22"},{"expression":{"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"23971:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5024,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"23981:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5026,"nodeType":"ExpressionStatement","src":"23971:13:22"},{"expression":{"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5027,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"23999:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24026:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5029,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"24010:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"24010:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5042,"nodeType":"ExpressionStatement","src":"23999:49:22"},{"expression":{"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24062:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5044,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24072:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5046,"nodeType":"ExpressionStatement","src":"24062:13:22"},{"expression":{"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"24089:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5048,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24099:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5050,"nodeType":"ExpressionStatement","src":"24089:13:22"},{"expression":{"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5051,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24117:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24144:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5053,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"24128:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"24128:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5066,"nodeType":"ExpressionStatement","src":"24117:49:22"},{"expression":{"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24180:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5068,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24190:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5070,"nodeType":"ExpressionStatement","src":"24180:13:22"},{"expression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"24207:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5072,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24217:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5074,"nodeType":"ExpressionStatement","src":"24207:13:22"},{"expression":{"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5075,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24235:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24262:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5077,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"24246:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"24246:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5090,"nodeType":"ExpressionStatement","src":"24235:49:22"},{"expression":{"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24298:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5092,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24308:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5094,"nodeType":"ExpressionStatement","src":"24298:13:22"},{"expression":{"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"24325:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5096,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24335:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5098,"nodeType":"ExpressionStatement","src":"24325:13:22"},{"expression":{"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5099,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24353:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24379:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5101,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"24363:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"24363:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5114,"nodeType":"ExpressionStatement","src":"24353:47:22"},{"expression":{"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24414:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5116,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24424:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5118,"nodeType":"ExpressionStatement","src":"24414:13:22"},{"expression":{"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"24441:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5120,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24451:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5122,"nodeType":"ExpressionStatement","src":"24441:13:22"},{"expression":{"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5123,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24469:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24495:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5125,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"24479:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"24479:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5138,"nodeType":"ExpressionStatement","src":"24469:47:22"},{"expression":{"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24530:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5140,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24540:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5142,"nodeType":"ExpressionStatement","src":"24530:13:22"},{"expression":{"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"24557:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5144,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24567:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5146,"nodeType":"ExpressionStatement","src":"24557:13:22"},{"expression":{"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5147,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24585:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24611:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5149,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"24595:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"24595:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5162,"nodeType":"ExpressionStatement","src":"24585:47:22"},{"expression":{"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24646:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5164,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24656:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5166,"nodeType":"ExpressionStatement","src":"24646:13:22"},{"expression":{"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"24673:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5168,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"24683:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5170,"nodeType":"ExpressionStatement","src":"24673:13:22"},{"expression":{"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5171,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"24701:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"24727:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5172,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"24711:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"24711:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5179,"nodeType":"ExpressionStatement","src":"24701:36:22"}]},{"expression":{"id":5181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"24764:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4995,"id":5182,"nodeType":"Return","src":"24757:13:22"}]},"documentation":{"id":4989,"nodeType":"StructuredDocumentation","src":"23611:119:22","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5184,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:22","nodeType":"FunctionDefinition","parameters":{"id":4992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"value","nameLocation":"23757:5:22","nodeType":"VariableDeclaration","scope":5184,"src":"23749:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4990,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:22"},"returnParameters":{"id":4995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5184,"src":"23787:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:22"},"scope":5575,"src":"23735:1042:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5217,"nodeType":"Block","src":"25010:175:22","statements":[{"id":5216,"nodeType":"UncheckedBlock","src":"25020:159:22","statements":[{"assignments":[5196],"declarations":[{"constant":false,"id":5196,"mutability":"mutable","name":"result","nameLocation":"25052:6:22","nodeType":"VariableDeclaration","scope":5216,"src":"25044:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5195,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5200,"initialValue":{"arguments":[{"id":5198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"25066:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5197,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5184,5218],"referencedDeclaration":5184,"src":"25061:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"25093:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5205,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"25135:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}],"id":5204,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"25118:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3981_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"25153:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"25162:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5202,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"25102:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"25102:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5194,"id":5215,"nodeType":"Return","src":"25086:82:22"}]}]},"documentation":{"id":5185,"nodeType":"StructuredDocumentation","src":"24783:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5218,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:22","nodeType":"FunctionDefinition","parameters":{"id":5191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5187,"mutability":"mutable","name":"value","nameLocation":"24952:5:22","nodeType":"VariableDeclaration","scope":5218,"src":"24944:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5186,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5190,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:22","nodeType":"VariableDeclaration","scope":5218,"src":"24959:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"},"typeName":{"id":5189,"nodeType":"UserDefinedTypeName","pathNode":{"id":5188,"name":"Rounding","nameLocations":["24959:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3981,"src":"24959:8:22"},"referencedDeclaration":3981,"src":"24959:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:22"},"returnParameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5218,"src":"25001:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5192,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:22"},"scope":5575,"src":"24930:255:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5346,"nodeType":"Block","src":"25378:854:22","statements":[{"assignments":[5227],"declarations":[{"constant":false,"id":5227,"mutability":"mutable","name":"result","nameLocation":"25396:6:22","nodeType":"VariableDeclaration","scope":5346,"src":"25388:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5226,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5229,"initialValue":{"hexValue":"30","id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:22"},{"id":5343,"nodeType":"UncheckedBlock","src":"25416:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"25444:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5246,"nodeType":"IfStatement","src":"25440:103:22","trueBody":{"id":5245,"nodeType":"Block","src":"25463:80:22","statements":[{"expression":{"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"25481:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5240,"nodeType":"ExpressionStatement","src":"25481:17:22"},{"expression":{"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"25516:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5244,"nodeType":"ExpressionStatement","src":"25516:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"25560:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5263,"nodeType":"IfStatement","src":"25556:103:22","trueBody":{"id":5262,"nodeType":"Block","src":"25579:80:22","statements":[{"expression":{"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"25597:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5257,"nodeType":"ExpressionStatement","src":"25597:17:22"},{"expression":{"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5258,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"25632:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5261,"nodeType":"ExpressionStatement","src":"25632:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"25676:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5280,"nodeType":"IfStatement","src":"25672:103:22","trueBody":{"id":5279,"nodeType":"Block","src":"25695:80:22","statements":[{"expression":{"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"25713:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5274,"nodeType":"ExpressionStatement","src":"25713:17:22"},{"expression":{"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5275,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"25748:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5278,"nodeType":"ExpressionStatement","src":"25748:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"25792:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5297,"nodeType":"IfStatement","src":"25788:100:22","trueBody":{"id":5296,"nodeType":"Block","src":"25810:78:22","statements":[{"expression":{"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"25828:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5291,"nodeType":"ExpressionStatement","src":"25828:16:22"},{"expression":{"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"25862:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5295,"nodeType":"ExpressionStatement","src":"25862:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"25905:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5314,"nodeType":"IfStatement","src":"25901:100:22","trueBody":{"id":5313,"nodeType":"Block","src":"25923:78:22","statements":[{"expression":{"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"25941:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5308,"nodeType":"ExpressionStatement","src":"25941:16:22"},{"expression":{"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"25975:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5312,"nodeType":"ExpressionStatement","src":"25975:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"26018:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5331,"nodeType":"IfStatement","src":"26014:100:22","trueBody":{"id":5330,"nodeType":"Block","src":"26036:78:22","statements":[{"expression":{"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"26054:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5325,"nodeType":"ExpressionStatement","src":"26054:16:22"},{"expression":{"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5326,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"26088:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5329,"nodeType":"ExpressionStatement","src":"26088:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"26131:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5342,"nodeType":"IfStatement","src":"26127:66:22","trueBody":{"id":5341,"nodeType":"Block","src":"26149:44:22","statements":[{"expression":{"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"26167:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5340,"nodeType":"ExpressionStatement","src":"26167:11:22"}]}}]},{"expression":{"id":5344,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"26219:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5225,"id":5345,"nodeType":"Return","src":"26212:13:22"}]},"documentation":{"id":5219,"nodeType":"StructuredDocumentation","src":"25191:120:22","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5347,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:22","nodeType":"FunctionDefinition","parameters":{"id":5222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5221,"mutability":"mutable","name":"value","nameLocation":"25339:5:22","nodeType":"VariableDeclaration","scope":5347,"src":"25331:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5220,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:22"},"returnParameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5347,"src":"25369:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5223,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:22"},"scope":5575,"src":"25316:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5380,"nodeType":"Block","src":"26467:177:22","statements":[{"id":5379,"nodeType":"UncheckedBlock","src":"26477:161:22","statements":[{"assignments":[5359],"declarations":[{"constant":false,"id":5359,"mutability":"mutable","name":"result","nameLocation":"26509:6:22","nodeType":"VariableDeclaration","scope":5379,"src":"26501:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5363,"initialValue":{"arguments":[{"id":5361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"26524:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5360,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5347,5381],"referencedDeclaration":5347,"src":"26518:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"26551:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5368,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"26593:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}],"id":5367,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"26576:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3981_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5371,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"26612:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"26621:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5365,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"26560:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"26560:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5357,"id":5378,"nodeType":"Return","src":"26544:83:22"}]}]},"documentation":{"id":5348,"nodeType":"StructuredDocumentation","src":"26238:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5381,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:22","nodeType":"FunctionDefinition","parameters":{"id":5354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"mutability":"mutable","name":"value","nameLocation":"26409:5:22","nodeType":"VariableDeclaration","scope":5381,"src":"26401:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5349,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5353,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:22","nodeType":"VariableDeclaration","scope":5381,"src":"26416:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"},"typeName":{"id":5352,"nodeType":"UserDefinedTypeName","pathNode":{"id":5351,"name":"Rounding","nameLocations":["26416:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3981,"src":"26416:8:22"},"referencedDeclaration":3981,"src":"26416:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:22"},"returnParameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5381,"src":"26458:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5355,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:22"},"scope":5575,"src":"26386:258:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5517,"nodeType":"Block","src":"26964:674:22","statements":[{"assignments":[5390],"declarations":[{"constant":false,"id":5390,"mutability":"mutable","name":"result","nameLocation":"26982:6:22","nodeType":"VariableDeclaration","scope":5517,"src":"26974:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5392,"initialValue":{"hexValue":"30","id":5391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:22"},{"assignments":[5394],"declarations":[{"constant":false,"id":5394,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:22","nodeType":"VariableDeclaration","scope":5517,"src":"27002:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5393,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5395,"nodeType":"VariableDeclarationStatement","src":"27002:12:22"},{"id":5514,"nodeType":"UncheckedBlock","src":"27024:585:22","statements":[{"expression":{"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5396,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27048:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"27071:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5397,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"27055:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"27055:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5409,"nodeType":"ExpressionStatement","src":"27048:46:22"},{"expression":{"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"27108:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5411,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27118:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5415,"nodeType":"ExpressionStatement","src":"27108:20:22"},{"expression":{"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5416,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"27142:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5417,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27152:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5421,"nodeType":"ExpressionStatement","src":"27142:19:22"},{"expression":{"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5422,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27176:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"27199:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5423,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"27183:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"27183:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5435,"nodeType":"ExpressionStatement","src":"27176:45:22"},{"expression":{"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"27235:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5437,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27245:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5441,"nodeType":"ExpressionStatement","src":"27235:19:22"},{"expression":{"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"27268:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5443,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27278:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5447,"nodeType":"ExpressionStatement","src":"27268:18:22"},{"expression":{"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5448,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27301:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"27324:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5449,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"27308:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"27308:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5461,"nodeType":"ExpressionStatement","src":"27301:45:22"},{"expression":{"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"27360:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5463,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27370:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5467,"nodeType":"ExpressionStatement","src":"27360:19:22"},{"expression":{"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"27393:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5469,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27403:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5473,"nodeType":"ExpressionStatement","src":"27393:18:22"},{"expression":{"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5474,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27426:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"27449:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5475,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"27433:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"27433:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5487,"nodeType":"ExpressionStatement","src":"27426:45:22"},{"expression":{"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"27485:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5489,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27495:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5493,"nodeType":"ExpressionStatement","src":"27485:19:22"},{"expression":{"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5494,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"27518:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5495,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27528:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5499,"nodeType":"ExpressionStatement","src":"27518:18:22"},{"expression":{"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"27551:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"27577:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5501,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"27561:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"27561:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5513,"nodeType":"ExpressionStatement","src":"27551:47:22"}]},{"expression":{"id":5515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"27625:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5388,"id":5516,"nodeType":"Return","src":"27618:13:22"}]},"documentation":{"id":5382,"nodeType":"StructuredDocumentation","src":"26650:246:22","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5518,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:22","nodeType":"FunctionDefinition","parameters":{"id":5385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"value","nameLocation":"26925:5:22","nodeType":"VariableDeclaration","scope":5518,"src":"26917:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5383,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:22"},"returnParameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5518,"src":"26955:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:22"},"scope":5575,"src":"26901:737:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5554,"nodeType":"Block","src":"27875:184:22","statements":[{"id":5553,"nodeType":"UncheckedBlock","src":"27885:168:22","statements":[{"assignments":[5530],"declarations":[{"constant":false,"id":5530,"mutability":"mutable","name":"result","nameLocation":"27917:6:22","nodeType":"VariableDeclaration","scope":5553,"src":"27909:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5529,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5534,"initialValue":{"arguments":[{"id":5532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27933:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5531,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5518,5555],"referencedDeclaration":5518,"src":"27926:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"27960:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5539,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"28002:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}],"id":5538,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"27985:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3981_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5542,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"28021:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"28036:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5536,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"27969:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"27969:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5528,"id":5552,"nodeType":"Return","src":"27953:89:22"}]}]},"documentation":{"id":5519,"nodeType":"StructuredDocumentation","src":"27644:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5555,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:22","nodeType":"FunctionDefinition","parameters":{"id":5525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"value","nameLocation":"27817:5:22","nodeType":"VariableDeclaration","scope":5555,"src":"27809:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5524,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:22","nodeType":"VariableDeclaration","scope":5555,"src":"27824:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"},"typeName":{"id":5523,"nodeType":"UserDefinedTypeName","pathNode":{"id":5522,"name":"Rounding","nameLocations":["27824:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3981,"src":"27824:8:22"},"referencedDeclaration":3981,"src":"27824:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:22"},"returnParameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5555,"src":"27866:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5526,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:22"},"scope":5575,"src":"27793:266:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5573,"nodeType":"Block","src":"28257:48:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5566,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"28280:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}],"id":5565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5564,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:22","typeDescriptions":{}}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5563,"id":5572,"nodeType":"Return","src":"28267:31:22"}]},"documentation":{"id":5556,"nodeType":"StructuredDocumentation","src":"28065:113:22","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5574,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:22","nodeType":"FunctionDefinition","parameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:22","nodeType":"VariableDeclaration","scope":5574,"src":"28209:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"},"typeName":{"id":5558,"nodeType":"UserDefinedTypeName","pathNode":{"id":5557,"name":"Rounding","nameLocations":["28209:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3981,"src":"28209:8:22"},"referencedDeclaration":3981,"src":"28209:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3981","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:22"},"returnParameters":{"id":5563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5574,"src":"28251:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5561,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:22"},"scope":5575,"src":"28183:122:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5576,"src":"281:28026:22","usedErrors":[],"usedEvents":[]}],"src":"103:28205:22"},"id":22},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7340]},"id":7341,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5577,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5578,"nodeType":"StructuredDocumentation","src":"218:550:23","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7340,"linearizedBaseContracts":[7340],"name":"SafeCast","nameLocation":"777:8:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5579,"nodeType":"StructuredDocumentation","src":"792:68:23","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5585,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:23","nodeType":"ErrorDefinition","parameters":{"id":5584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5581,"mutability":"mutable","name":"bits","nameLocation":"908:4:23","nodeType":"VariableDeclaration","scope":5585,"src":"902:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5580,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5583,"mutability":"mutable","name":"value","nameLocation":"922:5:23","nodeType":"VariableDeclaration","scope":5585,"src":"914:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5582,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:23"},"src":"865:64:23"},{"documentation":{"id":5586,"nodeType":"StructuredDocumentation","src":"935:75:23","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5590,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:23","nodeType":"ErrorDefinition","parameters":{"id":5589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5588,"mutability":"mutable","name":"value","nameLocation":"1056:5:23","nodeType":"VariableDeclaration","scope":5590,"src":"1049:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5587,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:23"},"src":"1015:48:23"},{"documentation":{"id":5591,"nodeType":"StructuredDocumentation","src":"1069:67:23","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5597,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:23","nodeType":"ErrorDefinition","parameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5593,"mutability":"mutable","name":"bits","nameLocation":"1183:4:23","nodeType":"VariableDeclaration","scope":5597,"src":"1177:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5592,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5595,"mutability":"mutable","name":"value","nameLocation":"1196:5:23","nodeType":"VariableDeclaration","scope":5597,"src":"1189:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5594,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:23"},"src":"1141:62:23"},{"documentation":{"id":5598,"nodeType":"StructuredDocumentation","src":"1209:75:23","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5602,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:23","nodeType":"ErrorDefinition","parameters":{"id":5601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"value","nameLocation":"1331:5:23","nodeType":"VariableDeclaration","scope":5602,"src":"1323:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:23"},"src":"1289:49:23"},{"body":{"id":5629,"nodeType":"Block","src":"1695:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"1709:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5612,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5611,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:23","memberName":"max","nodeType":"MemberAccess","src":"1717:17:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5623,"nodeType":"IfStatement","src":"1705:105:23","trueBody":{"id":5622,"nodeType":"Block","src":"1736:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"1793:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5617,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"1757:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5621,"nodeType":"RevertStatement","src":"1750:49:23"}]}},{"expression":{"arguments":[{"id":5626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"1834:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5624,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:23","typeDescriptions":{}}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5609,"id":5628,"nodeType":"Return","src":"1819:21:23"}]},"documentation":{"id":5603,"nodeType":"StructuredDocumentation","src":"1344:280:23","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5630,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:23","nodeType":"FunctionDefinition","parameters":{"id":5606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"value","nameLocation":"1656:5:23","nodeType":"VariableDeclaration","scope":5630,"src":"1648:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:23"},"returnParameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5630,"src":"1686:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5607,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:23"},"scope":7340,"src":"1629:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5657,"nodeType":"Block","src":"2204:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"2218:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5640,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5639,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:23","memberName":"max","nodeType":"MemberAccess","src":"2226:17:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5651,"nodeType":"IfStatement","src":"2214:105:23","trueBody":{"id":5650,"nodeType":"Block","src":"2245:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"2302:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5645,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"2266:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5649,"nodeType":"RevertStatement","src":"2259:49:23"}]}},{"expression":{"arguments":[{"id":5654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"2343:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5652,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:23","typeDescriptions":{}}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5637,"id":5656,"nodeType":"Return","src":"2328:21:23"}]},"documentation":{"id":5631,"nodeType":"StructuredDocumentation","src":"1853:280:23","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5658,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:23","nodeType":"FunctionDefinition","parameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5633,"mutability":"mutable","name":"value","nameLocation":"2165:5:23","nodeType":"VariableDeclaration","scope":5658,"src":"2157:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:23"},"returnParameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5658,"src":"2195:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5635,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:23"},"scope":7340,"src":"2138:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5685,"nodeType":"Block","src":"2713:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"2727:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5668,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5667,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:23","memberName":"max","nodeType":"MemberAccess","src":"2735:17:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5679,"nodeType":"IfStatement","src":"2723:105:23","trueBody":{"id":5678,"nodeType":"Block","src":"2754:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"2811:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5673,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"2775:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5677,"nodeType":"RevertStatement","src":"2768:49:23"}]}},{"expression":{"arguments":[{"id":5682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"2852:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5680,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:23","typeDescriptions":{}}},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5665,"id":5684,"nodeType":"Return","src":"2837:21:23"}]},"documentation":{"id":5659,"nodeType":"StructuredDocumentation","src":"2362:280:23","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5686,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:23","nodeType":"FunctionDefinition","parameters":{"id":5662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5661,"mutability":"mutable","name":"value","nameLocation":"2674:5:23","nodeType":"VariableDeclaration","scope":5686,"src":"2666:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:23"},"returnParameters":{"id":5665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5686,"src":"2704:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5663,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:23"},"scope":7340,"src":"2647:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5713,"nodeType":"Block","src":"3222:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"3236:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5696,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5695,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:23","memberName":"max","nodeType":"MemberAccess","src":"3244:17:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5707,"nodeType":"IfStatement","src":"3232:105:23","trueBody":{"id":5706,"nodeType":"Block","src":"3263:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"3320:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5701,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"3284:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5705,"nodeType":"RevertStatement","src":"3277:49:23"}]}},{"expression":{"arguments":[{"id":5710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"3361:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5708,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:23","typeDescriptions":{}}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5693,"id":5712,"nodeType":"Return","src":"3346:21:23"}]},"documentation":{"id":5687,"nodeType":"StructuredDocumentation","src":"2871:280:23","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5714,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:23","nodeType":"FunctionDefinition","parameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"value","nameLocation":"3183:5:23","nodeType":"VariableDeclaration","scope":5714,"src":"3175:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5688,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:23"},"returnParameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5714,"src":"3213:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5691,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:23"},"scope":7340,"src":"3156:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5741,"nodeType":"Block","src":"3731:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"3745:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5724,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5723,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:23","memberName":"max","nodeType":"MemberAccess","src":"3753:17:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5735,"nodeType":"IfStatement","src":"3741:105:23","trueBody":{"id":5734,"nodeType":"Block","src":"3772:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"3829:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5729,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"3793:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5733,"nodeType":"RevertStatement","src":"3786:49:23"}]}},{"expression":{"arguments":[{"id":5738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"3870:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5736,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:23","typeDescriptions":{}}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5721,"id":5740,"nodeType":"Return","src":"3855:21:23"}]},"documentation":{"id":5715,"nodeType":"StructuredDocumentation","src":"3380:280:23","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5742,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:23","nodeType":"FunctionDefinition","parameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5717,"mutability":"mutable","name":"value","nameLocation":"3692:5:23","nodeType":"VariableDeclaration","scope":5742,"src":"3684:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5716,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:23"},"returnParameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5742,"src":"3722:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5719,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:23"},"scope":7340,"src":"3665:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5769,"nodeType":"Block","src":"4240:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"4254:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5752,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5751,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:23","memberName":"max","nodeType":"MemberAccess","src":"4262:17:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5763,"nodeType":"IfStatement","src":"4250:105:23","trueBody":{"id":5762,"nodeType":"Block","src":"4281:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"4338:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5757,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"4302:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5761,"nodeType":"RevertStatement","src":"4295:49:23"}]}},{"expression":{"arguments":[{"id":5766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"4379:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5764,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:23","typeDescriptions":{}}},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5749,"id":5768,"nodeType":"Return","src":"4364:21:23"}]},"documentation":{"id":5743,"nodeType":"StructuredDocumentation","src":"3889:280:23","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5770,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:23","nodeType":"FunctionDefinition","parameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"value","nameLocation":"4201:5:23","nodeType":"VariableDeclaration","scope":5770,"src":"4193:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5744,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:23"},"returnParameters":{"id":5749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5770,"src":"4231:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5747,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:23"},"scope":7340,"src":"4174:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5797,"nodeType":"Block","src":"4749:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"4763:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5780,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5779,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:23","memberName":"max","nodeType":"MemberAccess","src":"4771:17:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5791,"nodeType":"IfStatement","src":"4759:105:23","trueBody":{"id":5790,"nodeType":"Block","src":"4790:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"4847:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5785,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"4811:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5789,"nodeType":"RevertStatement","src":"4804:49:23"}]}},{"expression":{"arguments":[{"id":5794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"4888:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5792,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:23","typeDescriptions":{}}},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5777,"id":5796,"nodeType":"Return","src":"4873:21:23"}]},"documentation":{"id":5771,"nodeType":"StructuredDocumentation","src":"4398:280:23","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5798,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:23","nodeType":"FunctionDefinition","parameters":{"id":5774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"value","nameLocation":"4710:5:23","nodeType":"VariableDeclaration","scope":5798,"src":"4702:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5772,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:23"},"returnParameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5798,"src":"4740:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5775,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:23"},"scope":7340,"src":"4683:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5825,"nodeType":"Block","src":"5258:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5801,"src":"5272:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5808,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5807,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:23","memberName":"max","nodeType":"MemberAccess","src":"5280:17:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5819,"nodeType":"IfStatement","src":"5268:105:23","trueBody":{"id":5818,"nodeType":"Block","src":"5299:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5801,"src":"5356:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5813,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"5320:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5817,"nodeType":"RevertStatement","src":"5313:49:23"}]}},{"expression":{"arguments":[{"id":5822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5801,"src":"5397:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5820,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:23","typeDescriptions":{}}},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5805,"id":5824,"nodeType":"Return","src":"5382:21:23"}]},"documentation":{"id":5799,"nodeType":"StructuredDocumentation","src":"4907:280:23","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5826,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:23","nodeType":"FunctionDefinition","parameters":{"id":5802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5801,"mutability":"mutable","name":"value","nameLocation":"5219:5:23","nodeType":"VariableDeclaration","scope":5826,"src":"5211:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5800,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:23"},"returnParameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5826,"src":"5249:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5803,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:23"},"scope":7340,"src":"5192:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5853,"nodeType":"Block","src":"5767:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"5781:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5836,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5835,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:23","memberName":"max","nodeType":"MemberAccess","src":"5789:17:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5847,"nodeType":"IfStatement","src":"5777:105:23","trueBody":{"id":5846,"nodeType":"Block","src":"5808:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"5865:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5841,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"5829:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5845,"nodeType":"RevertStatement","src":"5822:49:23"}]}},{"expression":{"arguments":[{"id":5850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"5906:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5848,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:23","typeDescriptions":{}}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5833,"id":5852,"nodeType":"Return","src":"5891:21:23"}]},"documentation":{"id":5827,"nodeType":"StructuredDocumentation","src":"5416:280:23","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5854,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:23","nodeType":"FunctionDefinition","parameters":{"id":5830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5829,"mutability":"mutable","name":"value","nameLocation":"5728:5:23","nodeType":"VariableDeclaration","scope":5854,"src":"5720:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:23"},"returnParameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5854,"src":"5758:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5831,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:23"},"scope":7340,"src":"5701:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5881,"nodeType":"Block","src":"6276:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"6290:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5864,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5863,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:23","memberName":"max","nodeType":"MemberAccess","src":"6298:17:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5875,"nodeType":"IfStatement","src":"6286:105:23","trueBody":{"id":5874,"nodeType":"Block","src":"6317:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"6374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5869,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"6338:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5873,"nodeType":"RevertStatement","src":"6331:49:23"}]}},{"expression":{"arguments":[{"id":5878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"6415:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5876,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:23","typeDescriptions":{}}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5861,"id":5880,"nodeType":"Return","src":"6400:21:23"}]},"documentation":{"id":5855,"nodeType":"StructuredDocumentation","src":"5925:280:23","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5882,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:23","nodeType":"FunctionDefinition","parameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5857,"mutability":"mutable","name":"value","nameLocation":"6237:5:23","nodeType":"VariableDeclaration","scope":5882,"src":"6229:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:23"},"returnParameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5882,"src":"6267:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5859,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:23"},"scope":7340,"src":"6210:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5909,"nodeType":"Block","src":"6785:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"6799:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5892,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5891,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:23","memberName":"max","nodeType":"MemberAccess","src":"6807:17:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5903,"nodeType":"IfStatement","src":"6795:105:23","trueBody":{"id":5902,"nodeType":"Block","src":"6826:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"6883:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5897,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"6847:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5901,"nodeType":"RevertStatement","src":"6840:49:23"}]}},{"expression":{"arguments":[{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"6924:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5904,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:23","typeDescriptions":{}}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5889,"id":5908,"nodeType":"Return","src":"6909:21:23"}]},"documentation":{"id":5883,"nodeType":"StructuredDocumentation","src":"6434:280:23","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5910,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:23","nodeType":"FunctionDefinition","parameters":{"id":5886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5885,"mutability":"mutable","name":"value","nameLocation":"6746:5:23","nodeType":"VariableDeclaration","scope":5910,"src":"6738:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5884,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:23"},"returnParameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5910,"src":"6776:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5887,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:23"},"scope":7340,"src":"6719:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5937,"nodeType":"Block","src":"7294:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"7308:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5920,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5919,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:23","memberName":"max","nodeType":"MemberAccess","src":"7316:17:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5931,"nodeType":"IfStatement","src":"7304:105:23","trueBody":{"id":5930,"nodeType":"Block","src":"7335:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"7392:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5925,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"7356:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5929,"nodeType":"RevertStatement","src":"7349:49:23"}]}},{"expression":{"arguments":[{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"7433:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5932,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:23","typeDescriptions":{}}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5917,"id":5936,"nodeType":"Return","src":"7418:21:23"}]},"documentation":{"id":5911,"nodeType":"StructuredDocumentation","src":"6943:280:23","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5938,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:23","nodeType":"FunctionDefinition","parameters":{"id":5914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5913,"mutability":"mutable","name":"value","nameLocation":"7255:5:23","nodeType":"VariableDeclaration","scope":5938,"src":"7247:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5912,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:23"},"returnParameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5938,"src":"7285:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5915,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:23"},"scope":7340,"src":"7228:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5965,"nodeType":"Block","src":"7803:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"7817:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5948,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5947,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:23","memberName":"max","nodeType":"MemberAccess","src":"7825:17:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5959,"nodeType":"IfStatement","src":"7813:105:23","trueBody":{"id":5958,"nodeType":"Block","src":"7844:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"7901:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5953,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"7865:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5957,"nodeType":"RevertStatement","src":"7858:49:23"}]}},{"expression":{"arguments":[{"id":5962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"7942:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5960,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:23","typeDescriptions":{}}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5945,"id":5964,"nodeType":"Return","src":"7927:21:23"}]},"documentation":{"id":5939,"nodeType":"StructuredDocumentation","src":"7452:280:23","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5966,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:23","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"value","nameLocation":"7764:5:23","nodeType":"VariableDeclaration","scope":5966,"src":"7756:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5940,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:23"},"returnParameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5966,"src":"7794:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5943,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:23"},"scope":7340,"src":"7737:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5993,"nodeType":"Block","src":"8312:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"8326:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5976,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5975,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:23","memberName":"max","nodeType":"MemberAccess","src":"8334:17:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5987,"nodeType":"IfStatement","src":"8322:105:23","trueBody":{"id":5986,"nodeType":"Block","src":"8353:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"8410:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5981,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"8374:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5985,"nodeType":"RevertStatement","src":"8367:49:23"}]}},{"expression":{"arguments":[{"id":5990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"8451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5988,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:23","typeDescriptions":{}}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5973,"id":5992,"nodeType":"Return","src":"8436:21:23"}]},"documentation":{"id":5967,"nodeType":"StructuredDocumentation","src":"7961:280:23","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5994,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:23","nodeType":"FunctionDefinition","parameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"value","nameLocation":"8273:5:23","nodeType":"VariableDeclaration","scope":5994,"src":"8265:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:23"},"returnParameters":{"id":5973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5994,"src":"8303:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5971,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:23"},"scope":7340,"src":"8246:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6021,"nodeType":"Block","src":"8821:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"8835:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6004,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6003,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:23","memberName":"max","nodeType":"MemberAccess","src":"8843:17:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6015,"nodeType":"IfStatement","src":"8831:105:23","trueBody":{"id":6014,"nodeType":"Block","src":"8862:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"8919:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6009,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"8883:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6013,"nodeType":"RevertStatement","src":"8876:49:23"}]}},{"expression":{"arguments":[{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"8960:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6016,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:23","typeDescriptions":{}}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6001,"id":6020,"nodeType":"Return","src":"8945:21:23"}]},"documentation":{"id":5995,"nodeType":"StructuredDocumentation","src":"8470:280:23","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6022,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:23","nodeType":"FunctionDefinition","parameters":{"id":5998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"mutability":"mutable","name":"value","nameLocation":"8782:5:23","nodeType":"VariableDeclaration","scope":6022,"src":"8774:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5996,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:23"},"returnParameters":{"id":6001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6022,"src":"8812:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5999,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:23"},"scope":7340,"src":"8755:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6049,"nodeType":"Block","src":"9330:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"9344:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6032,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6031,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:23","memberName":"max","nodeType":"MemberAccess","src":"9352:17:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6043,"nodeType":"IfStatement","src":"9340:105:23","trueBody":{"id":6042,"nodeType":"Block","src":"9371:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"9428:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6037,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"9392:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6041,"nodeType":"RevertStatement","src":"9385:49:23"}]}},{"expression":{"arguments":[{"id":6046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"9469:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6044,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:23","typeDescriptions":{}}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6029,"id":6048,"nodeType":"Return","src":"9454:21:23"}]},"documentation":{"id":6023,"nodeType":"StructuredDocumentation","src":"8979:280:23","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6050,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:23","nodeType":"FunctionDefinition","parameters":{"id":6026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6025,"mutability":"mutable","name":"value","nameLocation":"9291:5:23","nodeType":"VariableDeclaration","scope":6050,"src":"9283:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6024,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:23"},"returnParameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6050,"src":"9321:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6027,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:23"},"scope":7340,"src":"9264:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6077,"nodeType":"Block","src":"9839:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"9853:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6060,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6059,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:23","memberName":"max","nodeType":"MemberAccess","src":"9861:17:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6071,"nodeType":"IfStatement","src":"9849:105:23","trueBody":{"id":6070,"nodeType":"Block","src":"9880:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"9937:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6065,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"9901:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6069,"nodeType":"RevertStatement","src":"9894:49:23"}]}},{"expression":{"arguments":[{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"9978:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6072,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:23","typeDescriptions":{}}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6057,"id":6076,"nodeType":"Return","src":"9963:21:23"}]},"documentation":{"id":6051,"nodeType":"StructuredDocumentation","src":"9488:280:23","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6078,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:23","nodeType":"FunctionDefinition","parameters":{"id":6054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"value","nameLocation":"9800:5:23","nodeType":"VariableDeclaration","scope":6078,"src":"9792:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:23"},"returnParameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6078,"src":"9830:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6055,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:23"},"scope":7340,"src":"9773:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6105,"nodeType":"Block","src":"10348:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"10362:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6088,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:23","memberName":"max","nodeType":"MemberAccess","src":"10370:17:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6099,"nodeType":"IfStatement","src":"10358:105:23","trueBody":{"id":6098,"nodeType":"Block","src":"10389:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"10446:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6093,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"10410:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6097,"nodeType":"RevertStatement","src":"10403:49:23"}]}},{"expression":{"arguments":[{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"10487:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6100,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:23","typeDescriptions":{}}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6085,"id":6104,"nodeType":"Return","src":"10472:21:23"}]},"documentation":{"id":6079,"nodeType":"StructuredDocumentation","src":"9997:280:23","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6106,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:23","nodeType":"FunctionDefinition","parameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"value","nameLocation":"10309:5:23","nodeType":"VariableDeclaration","scope":6106,"src":"10301:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6080,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:23"},"returnParameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6106,"src":"10339:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6083,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:23"},"scope":7340,"src":"10282:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6133,"nodeType":"Block","src":"10857:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"10871:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6116,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6115,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:23","memberName":"max","nodeType":"MemberAccess","src":"10879:17:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6127,"nodeType":"IfStatement","src":"10867:105:23","trueBody":{"id":6126,"nodeType":"Block","src":"10898:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"10955:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6121,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"10919:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6125,"nodeType":"RevertStatement","src":"10912:49:23"}]}},{"expression":{"arguments":[{"id":6130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"10996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6128,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:23","typeDescriptions":{}}},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6113,"id":6132,"nodeType":"Return","src":"10981:21:23"}]},"documentation":{"id":6107,"nodeType":"StructuredDocumentation","src":"10506:280:23","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6134,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:23","nodeType":"FunctionDefinition","parameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"value","nameLocation":"10818:5:23","nodeType":"VariableDeclaration","scope":6134,"src":"10810:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6108,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:23"},"returnParameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6134,"src":"10848:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6111,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:23"},"scope":7340,"src":"10791:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6161,"nodeType":"Block","src":"11360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"11374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6144,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6143,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:23","memberName":"max","nodeType":"MemberAccess","src":"11382:16:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6155,"nodeType":"IfStatement","src":"11370:103:23","trueBody":{"id":6154,"nodeType":"Block","src":"11400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"11456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6149,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"11421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6153,"nodeType":"RevertStatement","src":"11414:48:23"}]}},{"expression":{"arguments":[{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"11496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6156,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:23","typeDescriptions":{}}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6141,"id":6160,"nodeType":"Return","src":"11482:20:23"}]},"documentation":{"id":6135,"nodeType":"StructuredDocumentation","src":"11015:276:23","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6162,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"mutability":"mutable","name":"value","nameLocation":"11322:5:23","nodeType":"VariableDeclaration","scope":6162,"src":"11314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:23"},"returnParameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6162,"src":"11352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6139,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:23"},"scope":7340,"src":"11296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6189,"nodeType":"Block","src":"11860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"11874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6172,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6171,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:23","memberName":"max","nodeType":"MemberAccess","src":"11882:16:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6183,"nodeType":"IfStatement","src":"11870:103:23","trueBody":{"id":6182,"nodeType":"Block","src":"11900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"11956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6177,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"11921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6181,"nodeType":"RevertStatement","src":"11914:48:23"}]}},{"expression":{"arguments":[{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"11996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6184,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:23","typeDescriptions":{}}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6169,"id":6188,"nodeType":"Return","src":"11982:20:23"}]},"documentation":{"id":6163,"nodeType":"StructuredDocumentation","src":"11515:276:23","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6190,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"value","nameLocation":"11822:5:23","nodeType":"VariableDeclaration","scope":6190,"src":"11814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:23"},"returnParameters":{"id":6169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6190,"src":"11852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6167,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:23"},"scope":7340,"src":"11796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6217,"nodeType":"Block","src":"12360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"12374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6200,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6199,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:23","memberName":"max","nodeType":"MemberAccess","src":"12382:16:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6211,"nodeType":"IfStatement","src":"12370:103:23","trueBody":{"id":6210,"nodeType":"Block","src":"12400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"12456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6205,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"12421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6209,"nodeType":"RevertStatement","src":"12414:48:23"}]}},{"expression":{"arguments":[{"id":6214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"12496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6212,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:23","typeDescriptions":{}}},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6197,"id":6216,"nodeType":"Return","src":"12482:20:23"}]},"documentation":{"id":6191,"nodeType":"StructuredDocumentation","src":"12015:276:23","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6218,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"mutability":"mutable","name":"value","nameLocation":"12322:5:23","nodeType":"VariableDeclaration","scope":6218,"src":"12314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6192,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:23"},"returnParameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6218,"src":"12352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6195,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:23"},"scope":7340,"src":"12296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6245,"nodeType":"Block","src":"12860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"12874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6228,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6227,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:23","memberName":"max","nodeType":"MemberAccess","src":"12882:16:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6239,"nodeType":"IfStatement","src":"12870:103:23","trueBody":{"id":6238,"nodeType":"Block","src":"12900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"12956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6233,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"12921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6237,"nodeType":"RevertStatement","src":"12914:48:23"}]}},{"expression":{"arguments":[{"id":6242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"12996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6240,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:23","typeDescriptions":{}}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6225,"id":6244,"nodeType":"Return","src":"12982:20:23"}]},"documentation":{"id":6219,"nodeType":"StructuredDocumentation","src":"12515:276:23","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6246,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6221,"mutability":"mutable","name":"value","nameLocation":"12822:5:23","nodeType":"VariableDeclaration","scope":6246,"src":"12814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6220,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:23"},"returnParameters":{"id":6225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6246,"src":"12852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6223,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:23"},"scope":7340,"src":"12796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6273,"nodeType":"Block","src":"13360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"13374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6256,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6255,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:23","memberName":"max","nodeType":"MemberAccess","src":"13382:16:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6267,"nodeType":"IfStatement","src":"13370:103:23","trueBody":{"id":6266,"nodeType":"Block","src":"13400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"13456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6261,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"13421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6265,"nodeType":"RevertStatement","src":"13414:48:23"}]}},{"expression":{"arguments":[{"id":6270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"13496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6268,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:23","typeDescriptions":{}}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6253,"id":6272,"nodeType":"Return","src":"13482:20:23"}]},"documentation":{"id":6247,"nodeType":"StructuredDocumentation","src":"13015:276:23","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6274,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6249,"mutability":"mutable","name":"value","nameLocation":"13322:5:23","nodeType":"VariableDeclaration","scope":6274,"src":"13314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:23"},"returnParameters":{"id":6253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6274,"src":"13352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6251,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:23"},"scope":7340,"src":"13296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6301,"nodeType":"Block","src":"13860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"13874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6284,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6283,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:23","memberName":"max","nodeType":"MemberAccess","src":"13882:16:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6295,"nodeType":"IfStatement","src":"13870:103:23","trueBody":{"id":6294,"nodeType":"Block","src":"13900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"13956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6289,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"13921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6293,"nodeType":"RevertStatement","src":"13914:48:23"}]}},{"expression":{"arguments":[{"id":6298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"13996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6296,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:23","typeDescriptions":{}}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6281,"id":6300,"nodeType":"Return","src":"13982:20:23"}]},"documentation":{"id":6275,"nodeType":"StructuredDocumentation","src":"13515:276:23","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6302,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"value","nameLocation":"13822:5:23","nodeType":"VariableDeclaration","scope":6302,"src":"13814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6276,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:23"},"returnParameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6302,"src":"13852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6279,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:23"},"scope":7340,"src":"13796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6329,"nodeType":"Block","src":"14360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"14374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6312,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:23","memberName":"max","nodeType":"MemberAccess","src":"14382:16:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6323,"nodeType":"IfStatement","src":"14370:103:23","trueBody":{"id":6322,"nodeType":"Block","src":"14400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"14456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6317,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"14421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6321,"nodeType":"RevertStatement","src":"14414:48:23"}]}},{"expression":{"arguments":[{"id":6326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"14496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6324,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:23","typeDescriptions":{}}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6309,"id":6328,"nodeType":"Return","src":"14482:20:23"}]},"documentation":{"id":6303,"nodeType":"StructuredDocumentation","src":"14015:276:23","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6330,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6305,"mutability":"mutable","name":"value","nameLocation":"14322:5:23","nodeType":"VariableDeclaration","scope":6330,"src":"14314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6304,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:23"},"returnParameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6330,"src":"14352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6307,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:23"},"scope":7340,"src":"14296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6357,"nodeType":"Block","src":"14860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"14874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6340,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6339,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:23","memberName":"max","nodeType":"MemberAccess","src":"14882:16:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6351,"nodeType":"IfStatement","src":"14870:103:23","trueBody":{"id":6350,"nodeType":"Block","src":"14900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"14956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6345,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"14921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6349,"nodeType":"RevertStatement","src":"14914:48:23"}]}},{"expression":{"arguments":[{"id":6354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"14996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6352,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:23","typeDescriptions":{}}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6337,"id":6356,"nodeType":"Return","src":"14982:20:23"}]},"documentation":{"id":6331,"nodeType":"StructuredDocumentation","src":"14515:276:23","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6358,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6333,"mutability":"mutable","name":"value","nameLocation":"14822:5:23","nodeType":"VariableDeclaration","scope":6358,"src":"14814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6332,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:23"},"returnParameters":{"id":6337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6358,"src":"14852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6335,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:23"},"scope":7340,"src":"14796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6385,"nodeType":"Block","src":"15360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"15374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6368,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6367,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:23","memberName":"max","nodeType":"MemberAccess","src":"15382:16:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6379,"nodeType":"IfStatement","src":"15370:103:23","trueBody":{"id":6378,"nodeType":"Block","src":"15400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"15456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6373,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"15421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6377,"nodeType":"RevertStatement","src":"15414:48:23"}]}},{"expression":{"arguments":[{"id":6382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"15496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6380,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:23","typeDescriptions":{}}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6365,"id":6384,"nodeType":"Return","src":"15482:20:23"}]},"documentation":{"id":6359,"nodeType":"StructuredDocumentation","src":"15015:276:23","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6386,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"value","nameLocation":"15322:5:23","nodeType":"VariableDeclaration","scope":6386,"src":"15314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6360,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:23"},"returnParameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6386,"src":"15352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6363,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:23"},"scope":7340,"src":"15296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6413,"nodeType":"Block","src":"15860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"15874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6396,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6395,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:23","memberName":"max","nodeType":"MemberAccess","src":"15882:16:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6407,"nodeType":"IfStatement","src":"15870:103:23","trueBody":{"id":6406,"nodeType":"Block","src":"15900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"15956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6401,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"15921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6405,"nodeType":"RevertStatement","src":"15914:48:23"}]}},{"expression":{"arguments":[{"id":6410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"15996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6408,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:23","typeDescriptions":{}}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6393,"id":6412,"nodeType":"Return","src":"15982:20:23"}]},"documentation":{"id":6387,"nodeType":"StructuredDocumentation","src":"15515:276:23","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6414,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"value","nameLocation":"15822:5:23","nodeType":"VariableDeclaration","scope":6414,"src":"15814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6388,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:23"},"returnParameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6414,"src":"15852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6391,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:23"},"scope":7340,"src":"15796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6441,"nodeType":"Block","src":"16360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"16374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6424,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:23","memberName":"max","nodeType":"MemberAccess","src":"16382:16:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6435,"nodeType":"IfStatement","src":"16370:103:23","trueBody":{"id":6434,"nodeType":"Block","src":"16400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"16456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6429,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"16421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6433,"nodeType":"RevertStatement","src":"16414:48:23"}]}},{"expression":{"arguments":[{"id":6438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"16496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6436,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:23","typeDescriptions":{}}},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6421,"id":6440,"nodeType":"Return","src":"16482:20:23"}]},"documentation":{"id":6415,"nodeType":"StructuredDocumentation","src":"16015:276:23","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6442,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6417,"mutability":"mutable","name":"value","nameLocation":"16322:5:23","nodeType":"VariableDeclaration","scope":6442,"src":"16314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6416,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:23"},"returnParameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6442,"src":"16352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6419,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:23"},"scope":7340,"src":"16296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6469,"nodeType":"Block","src":"16854:146:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"16868:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6452,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:23","memberName":"max","nodeType":"MemberAccess","src":"16876:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6463,"nodeType":"IfStatement","src":"16864:101:23","trueBody":{"id":6462,"nodeType":"Block","src":"16893:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"16948:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6457,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"16914:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6461,"nodeType":"RevertStatement","src":"16907:47:23"}]}},{"expression":{"arguments":[{"id":6466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"16987:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6464,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:23","typeDescriptions":{}}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6449,"id":6468,"nodeType":"Return","src":"16974:19:23"}]},"documentation":{"id":6443,"nodeType":"StructuredDocumentation","src":"16515:272:23","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6470,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:23","nodeType":"FunctionDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"value","nameLocation":"16817:5:23","nodeType":"VariableDeclaration","scope":6470,"src":"16809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6444,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:23"},"returnParameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6470,"src":"16847:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6447,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:23"},"scope":7340,"src":"16792:208:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6492,"nodeType":"Block","src":"17236:128:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"17250:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6486,"nodeType":"IfStatement","src":"17246:81:23","trueBody":{"id":6485,"nodeType":"Block","src":"17261:66:23","statements":[{"errorCall":{"arguments":[{"id":6482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"17310:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6481,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"17282:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6484,"nodeType":"RevertStatement","src":"17275:41:23"}]}},{"expression":{"arguments":[{"id":6489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"17351:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6487,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:23","typeDescriptions":{}}},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6477,"id":6491,"nodeType":"Return","src":"17336:21:23"}]},"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"17006:160:23","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6493,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:23","nodeType":"FunctionDefinition","parameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"value","nameLocation":"17197:5:23","nodeType":"VariableDeclaration","scope":6493,"src":"17190:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6472,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:23"},"returnParameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6493,"src":"17227:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6475,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:23"},"scope":7340,"src":"17171:193:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6518,"nodeType":"Block","src":"17761:150:23","statements":[{"expression":{"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"17771:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"17791:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6502,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:23","typeDescriptions":{}}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6507,"nodeType":"ExpressionStatement","src":"17771:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6508,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"17811:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"17825:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6517,"nodeType":"IfStatement","src":"17807:98:23","trueBody":{"id":6516,"nodeType":"Block","src":"17832:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"17888:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6511,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"17853:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6515,"nodeType":"RevertStatement","src":"17846:48:23"}]}}]},"documentation":{"id":6494,"nodeType":"StructuredDocumentation","src":"17370:312:23","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6519,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:23","nodeType":"FunctionDefinition","parameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"value","nameLocation":"17712:5:23","nodeType":"VariableDeclaration","scope":6519,"src":"17705:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6495,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:23"},"returnParameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6499,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:23","nodeType":"VariableDeclaration","scope":6519,"src":"17742:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6498,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:23"},"scope":7340,"src":"17687:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6544,"nodeType":"Block","src":"18308:150:23","statements":[{"expression":{"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"18318:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"18338:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6528,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:23","typeDescriptions":{}}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6533,"nodeType":"ExpressionStatement","src":"18318:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6534,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"18358:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"18372:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6543,"nodeType":"IfStatement","src":"18354:98:23","trueBody":{"id":6542,"nodeType":"Block","src":"18379:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"18435:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6537,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"18400:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6541,"nodeType":"RevertStatement","src":"18393:48:23"}]}}]},"documentation":{"id":6520,"nodeType":"StructuredDocumentation","src":"17917:312:23","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6545,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:23","nodeType":"FunctionDefinition","parameters":{"id":6523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6522,"mutability":"mutable","name":"value","nameLocation":"18259:5:23","nodeType":"VariableDeclaration","scope":6545,"src":"18252:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6521,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:23"},"returnParameters":{"id":6526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6525,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:23","nodeType":"VariableDeclaration","scope":6545,"src":"18289:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6524,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:23"},"scope":7340,"src":"18234:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6570,"nodeType":"Block","src":"18855:150:23","statements":[{"expression":{"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"18865:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"18885:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6554,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:23","typeDescriptions":{}}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6559,"nodeType":"ExpressionStatement","src":"18865:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6560,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"18905:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"18919:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6569,"nodeType":"IfStatement","src":"18901:98:23","trueBody":{"id":6568,"nodeType":"Block","src":"18926:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"18982:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6563,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"18947:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6567,"nodeType":"RevertStatement","src":"18940:48:23"}]}}]},"documentation":{"id":6546,"nodeType":"StructuredDocumentation","src":"18464:312:23","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6571,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:23","nodeType":"FunctionDefinition","parameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"mutability":"mutable","name":"value","nameLocation":"18806:5:23","nodeType":"VariableDeclaration","scope":6571,"src":"18799:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6547,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:23"},"returnParameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:23","nodeType":"VariableDeclaration","scope":6571,"src":"18836:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6550,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:23"},"scope":7340,"src":"18781:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6596,"nodeType":"Block","src":"19402:150:23","statements":[{"expression":{"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6579,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"19412:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"19432:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6580,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:23","typeDescriptions":{}}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6585,"nodeType":"ExpressionStatement","src":"19412:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6586,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"19452:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"19466:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6595,"nodeType":"IfStatement","src":"19448:98:23","trueBody":{"id":6594,"nodeType":"Block","src":"19473:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"19529:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6589,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"19494:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6593,"nodeType":"RevertStatement","src":"19487:48:23"}]}}]},"documentation":{"id":6572,"nodeType":"StructuredDocumentation","src":"19011:312:23","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6597,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:23","nodeType":"FunctionDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"value","nameLocation":"19353:5:23","nodeType":"VariableDeclaration","scope":6597,"src":"19346:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6573,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:23"},"returnParameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:23","nodeType":"VariableDeclaration","scope":6597,"src":"19383:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6576,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:23"},"scope":7340,"src":"19328:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6622,"nodeType":"Block","src":"19949:150:23","statements":[{"expression":{"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"19959:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"19979:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6606,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:23","typeDescriptions":{}}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6611,"nodeType":"ExpressionStatement","src":"19959:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6612,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"19999:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"20013:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6621,"nodeType":"IfStatement","src":"19995:98:23","trueBody":{"id":6620,"nodeType":"Block","src":"20020:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"20076:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6615,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"20041:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6619,"nodeType":"RevertStatement","src":"20034:48:23"}]}}]},"documentation":{"id":6598,"nodeType":"StructuredDocumentation","src":"19558:312:23","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6623,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:23","nodeType":"FunctionDefinition","parameters":{"id":6601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"mutability":"mutable","name":"value","nameLocation":"19900:5:23","nodeType":"VariableDeclaration","scope":6623,"src":"19893:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6599,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:23"},"returnParameters":{"id":6604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6603,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:23","nodeType":"VariableDeclaration","scope":6623,"src":"19930:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6602,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:23"},"scope":7340,"src":"19875:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6648,"nodeType":"Block","src":"20496:150:23","statements":[{"expression":{"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6631,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"20506:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"20526:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6632,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:23","typeDescriptions":{}}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6637,"nodeType":"ExpressionStatement","src":"20506:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6638,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"20546:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"20560:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6647,"nodeType":"IfStatement","src":"20542:98:23","trueBody":{"id":6646,"nodeType":"Block","src":"20567:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"20623:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6641,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"20588:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6645,"nodeType":"RevertStatement","src":"20581:48:23"}]}}]},"documentation":{"id":6624,"nodeType":"StructuredDocumentation","src":"20105:312:23","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6649,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:23","nodeType":"FunctionDefinition","parameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"value","nameLocation":"20447:5:23","nodeType":"VariableDeclaration","scope":6649,"src":"20440:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6625,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:23"},"returnParameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6629,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:23","nodeType":"VariableDeclaration","scope":6649,"src":"20477:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6628,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:23"},"scope":7340,"src":"20422:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6674,"nodeType":"Block","src":"21043:150:23","statements":[{"expression":{"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6657,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"21053:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"21073:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6658,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:23","typeDescriptions":{}}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6663,"nodeType":"ExpressionStatement","src":"21053:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"21093:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"21107:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6673,"nodeType":"IfStatement","src":"21089:98:23","trueBody":{"id":6672,"nodeType":"Block","src":"21114:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"21170:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6667,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"21135:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6671,"nodeType":"RevertStatement","src":"21128:48:23"}]}}]},"documentation":{"id":6650,"nodeType":"StructuredDocumentation","src":"20652:312:23","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6675,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:23","nodeType":"FunctionDefinition","parameters":{"id":6653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"value","nameLocation":"20994:5:23","nodeType":"VariableDeclaration","scope":6675,"src":"20987:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6651,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:23"},"returnParameters":{"id":6656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6655,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:23","nodeType":"VariableDeclaration","scope":6675,"src":"21024:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6654,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:23"},"scope":7340,"src":"20969:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6700,"nodeType":"Block","src":"21590:150:23","statements":[{"expression":{"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"21600:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"21620:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6684,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:23","typeDescriptions":{}}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6689,"nodeType":"ExpressionStatement","src":"21600:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"21640:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"21654:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6699,"nodeType":"IfStatement","src":"21636:98:23","trueBody":{"id":6698,"nodeType":"Block","src":"21661:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"21717:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6693,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"21682:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6697,"nodeType":"RevertStatement","src":"21675:48:23"}]}}]},"documentation":{"id":6676,"nodeType":"StructuredDocumentation","src":"21199:312:23","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6701,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:23","nodeType":"FunctionDefinition","parameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"value","nameLocation":"21541:5:23","nodeType":"VariableDeclaration","scope":6701,"src":"21534:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6677,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:23"},"returnParameters":{"id":6682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:23","nodeType":"VariableDeclaration","scope":6701,"src":"21571:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6680,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:23"},"scope":7340,"src":"21516:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6726,"nodeType":"Block","src":"22137:150:23","statements":[{"expression":{"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"22147:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"22167:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6710,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:23","typeDescriptions":{}}},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6715,"nodeType":"ExpressionStatement","src":"22147:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"22187:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"22201:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6725,"nodeType":"IfStatement","src":"22183:98:23","trueBody":{"id":6724,"nodeType":"Block","src":"22208:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"22264:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6719,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"22229:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6723,"nodeType":"RevertStatement","src":"22222:48:23"}]}}]},"documentation":{"id":6702,"nodeType":"StructuredDocumentation","src":"21746:312:23","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6727,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:23","nodeType":"FunctionDefinition","parameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6704,"mutability":"mutable","name":"value","nameLocation":"22088:5:23","nodeType":"VariableDeclaration","scope":6727,"src":"22081:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6703,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:23"},"returnParameters":{"id":6708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6707,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:23","nodeType":"VariableDeclaration","scope":6727,"src":"22118:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6706,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:23"},"scope":7340,"src":"22063:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6752,"nodeType":"Block","src":"22684:150:23","statements":[{"expression":{"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"22694:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"22714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6736,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:23","typeDescriptions":{}}},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6741,"nodeType":"ExpressionStatement","src":"22694:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"22734:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"22748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6751,"nodeType":"IfStatement","src":"22730:98:23","trueBody":{"id":6750,"nodeType":"Block","src":"22755:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"22811:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6745,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"22776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6749,"nodeType":"RevertStatement","src":"22769:48:23"}]}}]},"documentation":{"id":6728,"nodeType":"StructuredDocumentation","src":"22293:312:23","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6753,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:23","nodeType":"FunctionDefinition","parameters":{"id":6731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6730,"mutability":"mutable","name":"value","nameLocation":"22635:5:23","nodeType":"VariableDeclaration","scope":6753,"src":"22628:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6729,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:23"},"returnParameters":{"id":6734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6733,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:23","nodeType":"VariableDeclaration","scope":6753,"src":"22665:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6732,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:23"},"scope":7340,"src":"22610:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6778,"nodeType":"Block","src":"23231:150:23","statements":[{"expression":{"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6761,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"23241:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"23261:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6762,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:23","typeDescriptions":{}}},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6767,"nodeType":"ExpressionStatement","src":"23241:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6768,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"23281:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"23295:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6777,"nodeType":"IfStatement","src":"23277:98:23","trueBody":{"id":6776,"nodeType":"Block","src":"23302:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"23358:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6771,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"23323:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6775,"nodeType":"RevertStatement","src":"23316:48:23"}]}}]},"documentation":{"id":6754,"nodeType":"StructuredDocumentation","src":"22840:312:23","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6779,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:23","nodeType":"FunctionDefinition","parameters":{"id":6757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6756,"mutability":"mutable","name":"value","nameLocation":"23182:5:23","nodeType":"VariableDeclaration","scope":6779,"src":"23175:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6755,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:23"},"returnParameters":{"id":6760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6759,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:23","nodeType":"VariableDeclaration","scope":6779,"src":"23212:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6758,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:23"},"scope":7340,"src":"23157:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6804,"nodeType":"Block","src":"23778:150:23","statements":[{"expression":{"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"23788:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"23808:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6788,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:23","typeDescriptions":{}}},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6793,"nodeType":"ExpressionStatement","src":"23788:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"23828:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"23842:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6803,"nodeType":"IfStatement","src":"23824:98:23","trueBody":{"id":6802,"nodeType":"Block","src":"23849:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"23905:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6797,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"23870:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6801,"nodeType":"RevertStatement","src":"23863:48:23"}]}}]},"documentation":{"id":6780,"nodeType":"StructuredDocumentation","src":"23387:312:23","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6805,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:23","nodeType":"FunctionDefinition","parameters":{"id":6783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6782,"mutability":"mutable","name":"value","nameLocation":"23729:5:23","nodeType":"VariableDeclaration","scope":6805,"src":"23722:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6781,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:23"},"returnParameters":{"id":6786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6785,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:23","nodeType":"VariableDeclaration","scope":6805,"src":"23759:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6784,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:23"},"scope":7340,"src":"23704:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6830,"nodeType":"Block","src":"24325:150:23","statements":[{"expression":{"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"24335:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"24355:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6814,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:23","typeDescriptions":{}}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6819,"nodeType":"ExpressionStatement","src":"24335:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6820,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"24375:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"24389:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6829,"nodeType":"IfStatement","src":"24371:98:23","trueBody":{"id":6828,"nodeType":"Block","src":"24396:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"24452:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6823,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"24417:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6827,"nodeType":"RevertStatement","src":"24410:48:23"}]}}]},"documentation":{"id":6806,"nodeType":"StructuredDocumentation","src":"23934:312:23","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6831,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:23","nodeType":"FunctionDefinition","parameters":{"id":6809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"value","nameLocation":"24276:5:23","nodeType":"VariableDeclaration","scope":6831,"src":"24269:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6807,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:23"},"returnParameters":{"id":6812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6811,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:23","nodeType":"VariableDeclaration","scope":6831,"src":"24306:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6810,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:23"},"scope":7340,"src":"24251:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6856,"nodeType":"Block","src":"24872:150:23","statements":[{"expression":{"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6839,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"24882:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"24902:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6840,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:23","typeDescriptions":{}}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6845,"nodeType":"ExpressionStatement","src":"24882:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"24922:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"24936:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6855,"nodeType":"IfStatement","src":"24918:98:23","trueBody":{"id":6854,"nodeType":"Block","src":"24943:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"24999:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6849,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"24964:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6853,"nodeType":"RevertStatement","src":"24957:48:23"}]}}]},"documentation":{"id":6832,"nodeType":"StructuredDocumentation","src":"24481:312:23","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6857,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:23","nodeType":"FunctionDefinition","parameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"mutability":"mutable","name":"value","nameLocation":"24823:5:23","nodeType":"VariableDeclaration","scope":6857,"src":"24816:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6833,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:23"},"returnParameters":{"id":6838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:23","nodeType":"VariableDeclaration","scope":6857,"src":"24853:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6836,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:23"},"scope":7340,"src":"24798:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6882,"nodeType":"Block","src":"25419:150:23","statements":[{"expression":{"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"25429:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"25449:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6866,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:23","typeDescriptions":{}}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6871,"nodeType":"ExpressionStatement","src":"25429:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6872,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"25469:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"25483:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6881,"nodeType":"IfStatement","src":"25465:98:23","trueBody":{"id":6880,"nodeType":"Block","src":"25490:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"25546:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6875,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"25511:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6879,"nodeType":"RevertStatement","src":"25504:48:23"}]}}]},"documentation":{"id":6858,"nodeType":"StructuredDocumentation","src":"25028:312:23","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6883,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:23","nodeType":"FunctionDefinition","parameters":{"id":6861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"value","nameLocation":"25370:5:23","nodeType":"VariableDeclaration","scope":6883,"src":"25363:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6859,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:23"},"returnParameters":{"id":6864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6863,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:23","nodeType":"VariableDeclaration","scope":6883,"src":"25400:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6862,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:23"},"scope":7340,"src":"25345:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6908,"nodeType":"Block","src":"25966:150:23","statements":[{"expression":{"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"25976:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"25996:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6892,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:23","typeDescriptions":{}}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6897,"nodeType":"ExpressionStatement","src":"25976:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"26016:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"26030:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6907,"nodeType":"IfStatement","src":"26012:98:23","trueBody":{"id":6906,"nodeType":"Block","src":"26037:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"26093:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6901,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"26058:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6905,"nodeType":"RevertStatement","src":"26051:48:23"}]}}]},"documentation":{"id":6884,"nodeType":"StructuredDocumentation","src":"25575:312:23","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6909,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:23","nodeType":"FunctionDefinition","parameters":{"id":6887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6886,"mutability":"mutable","name":"value","nameLocation":"25917:5:23","nodeType":"VariableDeclaration","scope":6909,"src":"25910:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6885,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:23"},"returnParameters":{"id":6890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6889,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:23","nodeType":"VariableDeclaration","scope":6909,"src":"25947:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6888,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:23"},"scope":7340,"src":"25892:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6934,"nodeType":"Block","src":"26513:150:23","statements":[{"expression":{"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"26523:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"26543:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6918,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:23","typeDescriptions":{}}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6923,"nodeType":"ExpressionStatement","src":"26523:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6924,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"26563:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"26577:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6933,"nodeType":"IfStatement","src":"26559:98:23","trueBody":{"id":6932,"nodeType":"Block","src":"26584:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"26640:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6927,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"26605:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6931,"nodeType":"RevertStatement","src":"26598:48:23"}]}}]},"documentation":{"id":6910,"nodeType":"StructuredDocumentation","src":"26122:312:23","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6935,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:23","nodeType":"FunctionDefinition","parameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"value","nameLocation":"26464:5:23","nodeType":"VariableDeclaration","scope":6935,"src":"26457:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6911,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:23"},"returnParameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:23","nodeType":"VariableDeclaration","scope":6935,"src":"26494:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6914,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:23"},"scope":7340,"src":"26439:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6960,"nodeType":"Block","src":"27060:150:23","statements":[{"expression":{"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6943,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"27070:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"27090:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6944,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:23","typeDescriptions":{}}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6949,"nodeType":"ExpressionStatement","src":"27070:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6950,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"27110:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"27124:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6959,"nodeType":"IfStatement","src":"27106:98:23","trueBody":{"id":6958,"nodeType":"Block","src":"27131:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"27187:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6953,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"27152:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6957,"nodeType":"RevertStatement","src":"27145:48:23"}]}}]},"documentation":{"id":6936,"nodeType":"StructuredDocumentation","src":"26669:312:23","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6961,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:23","nodeType":"FunctionDefinition","parameters":{"id":6939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6938,"mutability":"mutable","name":"value","nameLocation":"27011:5:23","nodeType":"VariableDeclaration","scope":6961,"src":"27004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6937,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:23"},"returnParameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:23","nodeType":"VariableDeclaration","scope":6961,"src":"27041:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6940,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:23"},"scope":7340,"src":"26986:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6986,"nodeType":"Block","src":"27607:150:23","statements":[{"expression":{"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6967,"src":"27617:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"27637:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6970,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:23","typeDescriptions":{}}},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6975,"nodeType":"ExpressionStatement","src":"27617:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6976,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6967,"src":"27657:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"27671:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6985,"nodeType":"IfStatement","src":"27653:98:23","trueBody":{"id":6984,"nodeType":"Block","src":"27678:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"27734:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6979,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"27699:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6983,"nodeType":"RevertStatement","src":"27692:48:23"}]}}]},"documentation":{"id":6962,"nodeType":"StructuredDocumentation","src":"27216:312:23","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6987,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:23","nodeType":"FunctionDefinition","parameters":{"id":6965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6964,"mutability":"mutable","name":"value","nameLocation":"27558:5:23","nodeType":"VariableDeclaration","scope":6987,"src":"27551:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6963,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:23"},"returnParameters":{"id":6968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6967,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:23","nodeType":"VariableDeclaration","scope":6987,"src":"27588:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6966,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:23"},"scope":7340,"src":"27533:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7012,"nodeType":"Block","src":"28147:148:23","statements":[{"expression":{"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"28157:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"28176:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6996,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:23","typeDescriptions":{}}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7001,"nodeType":"ExpressionStatement","src":"28157:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"28196:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"28210:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7011,"nodeType":"IfStatement","src":"28192:97:23","trueBody":{"id":7010,"nodeType":"Block","src":"28217:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"28272:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7005,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"28238:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7009,"nodeType":"RevertStatement","src":"28231:47:23"}]}}]},"documentation":{"id":6988,"nodeType":"StructuredDocumentation","src":"27763:307:23","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7013,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:23","nodeType":"FunctionDefinition","parameters":{"id":6991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6990,"mutability":"mutable","name":"value","nameLocation":"28099:5:23","nodeType":"VariableDeclaration","scope":7013,"src":"28092:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6989,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:23"},"returnParameters":{"id":6994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6993,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:23","nodeType":"VariableDeclaration","scope":7013,"src":"28129:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6992,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:23"},"scope":7340,"src":"28075:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7038,"nodeType":"Block","src":"28685:148:23","statements":[{"expression":{"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"28695:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"28714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7022,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:23","typeDescriptions":{}}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7027,"nodeType":"ExpressionStatement","src":"28695:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"28734:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"28748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7037,"nodeType":"IfStatement","src":"28730:97:23","trueBody":{"id":7036,"nodeType":"Block","src":"28755:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"28810:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7031,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"28776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7035,"nodeType":"RevertStatement","src":"28769:47:23"}]}}]},"documentation":{"id":7014,"nodeType":"StructuredDocumentation","src":"28301:307:23","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7039,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:23","nodeType":"FunctionDefinition","parameters":{"id":7017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7016,"mutability":"mutable","name":"value","nameLocation":"28637:5:23","nodeType":"VariableDeclaration","scope":7039,"src":"28630:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7015,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:23"},"returnParameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:23","nodeType":"VariableDeclaration","scope":7039,"src":"28667:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7018,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:23"},"scope":7340,"src":"28613:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7064,"nodeType":"Block","src":"29223:148:23","statements":[{"expression":{"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"29233:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"29252:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7048,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:23","typeDescriptions":{}}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7053,"nodeType":"ExpressionStatement","src":"29233:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"29272:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"29286:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7063,"nodeType":"IfStatement","src":"29268:97:23","trueBody":{"id":7062,"nodeType":"Block","src":"29293:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"29348:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7057,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"29314:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7061,"nodeType":"RevertStatement","src":"29307:47:23"}]}}]},"documentation":{"id":7040,"nodeType":"StructuredDocumentation","src":"28839:307:23","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7065,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:23","nodeType":"FunctionDefinition","parameters":{"id":7043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7042,"mutability":"mutable","name":"value","nameLocation":"29175:5:23","nodeType":"VariableDeclaration","scope":7065,"src":"29168:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7041,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:23"},"returnParameters":{"id":7046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7045,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:23","nodeType":"VariableDeclaration","scope":7065,"src":"29205:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7044,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:23"},"scope":7340,"src":"29151:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7090,"nodeType":"Block","src":"29761:148:23","statements":[{"expression":{"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"29771:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"29790:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7074,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:23","typeDescriptions":{}}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7079,"nodeType":"ExpressionStatement","src":"29771:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"29810:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"29824:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7089,"nodeType":"IfStatement","src":"29806:97:23","trueBody":{"id":7088,"nodeType":"Block","src":"29831:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"29886:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7083,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"29852:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7087,"nodeType":"RevertStatement","src":"29845:47:23"}]}}]},"documentation":{"id":7066,"nodeType":"StructuredDocumentation","src":"29377:307:23","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7091,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:23","nodeType":"FunctionDefinition","parameters":{"id":7069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7068,"mutability":"mutable","name":"value","nameLocation":"29713:5:23","nodeType":"VariableDeclaration","scope":7091,"src":"29706:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7067,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:23"},"returnParameters":{"id":7072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7071,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:23","nodeType":"VariableDeclaration","scope":7091,"src":"29743:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7070,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:23"},"scope":7340,"src":"29689:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7116,"nodeType":"Block","src":"30299:148:23","statements":[{"expression":{"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"30309:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"30328:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7100,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:23","typeDescriptions":{}}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7105,"nodeType":"ExpressionStatement","src":"30309:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"30348:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"30362:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7115,"nodeType":"IfStatement","src":"30344:97:23","trueBody":{"id":7114,"nodeType":"Block","src":"30369:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"30424:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7109,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"30390:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7113,"nodeType":"RevertStatement","src":"30383:47:23"}]}}]},"documentation":{"id":7092,"nodeType":"StructuredDocumentation","src":"29915:307:23","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7117,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:23","nodeType":"FunctionDefinition","parameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7094,"mutability":"mutable","name":"value","nameLocation":"30251:5:23","nodeType":"VariableDeclaration","scope":7117,"src":"30244:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7093,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:23"},"returnParameters":{"id":7098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7097,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:23","nodeType":"VariableDeclaration","scope":7117,"src":"30281:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7096,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:23"},"scope":7340,"src":"30227:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7142,"nodeType":"Block","src":"30837:148:23","statements":[{"expression":{"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"30847:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"30866:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7126,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:23","typeDescriptions":{}}},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7131,"nodeType":"ExpressionStatement","src":"30847:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"30886:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"30900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7141,"nodeType":"IfStatement","src":"30882:97:23","trueBody":{"id":7140,"nodeType":"Block","src":"30907:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"30962:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7135,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"30928:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7139,"nodeType":"RevertStatement","src":"30921:47:23"}]}}]},"documentation":{"id":7118,"nodeType":"StructuredDocumentation","src":"30453:307:23","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7143,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:23","nodeType":"FunctionDefinition","parameters":{"id":7121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7120,"mutability":"mutable","name":"value","nameLocation":"30789:5:23","nodeType":"VariableDeclaration","scope":7143,"src":"30782:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7119,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:23"},"returnParameters":{"id":7124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7123,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:23","nodeType":"VariableDeclaration","scope":7143,"src":"30819:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7122,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:23"},"scope":7340,"src":"30765:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7168,"nodeType":"Block","src":"31375:148:23","statements":[{"expression":{"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"31385:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"31404:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7152,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:23","typeDescriptions":{}}},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7157,"nodeType":"ExpressionStatement","src":"31385:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"31424:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"31438:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7167,"nodeType":"IfStatement","src":"31420:97:23","trueBody":{"id":7166,"nodeType":"Block","src":"31445:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"31500:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7161,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"31466:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7165,"nodeType":"RevertStatement","src":"31459:47:23"}]}}]},"documentation":{"id":7144,"nodeType":"StructuredDocumentation","src":"30991:307:23","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7169,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:23","nodeType":"FunctionDefinition","parameters":{"id":7147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7146,"mutability":"mutable","name":"value","nameLocation":"31327:5:23","nodeType":"VariableDeclaration","scope":7169,"src":"31320:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7145,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:23"},"returnParameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:23","nodeType":"VariableDeclaration","scope":7169,"src":"31357:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7148,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:23"},"scope":7340,"src":"31303:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7194,"nodeType":"Block","src":"31913:148:23","statements":[{"expression":{"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7177,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"31923:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"31942:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7178,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:23","typeDescriptions":{}}},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7183,"nodeType":"ExpressionStatement","src":"31923:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"31962:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"31976:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7193,"nodeType":"IfStatement","src":"31958:97:23","trueBody":{"id":7192,"nodeType":"Block","src":"31983:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"32038:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7187,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"32004:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7191,"nodeType":"RevertStatement","src":"31997:47:23"}]}}]},"documentation":{"id":7170,"nodeType":"StructuredDocumentation","src":"31529:307:23","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7195,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:23","nodeType":"FunctionDefinition","parameters":{"id":7173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"value","nameLocation":"31865:5:23","nodeType":"VariableDeclaration","scope":7195,"src":"31858:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7171,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:23"},"returnParameters":{"id":7176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7175,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:23","nodeType":"VariableDeclaration","scope":7195,"src":"31895:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7174,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:23"},"scope":7340,"src":"31841:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7220,"nodeType":"Block","src":"32451:148:23","statements":[{"expression":{"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"32461:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"32480:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7204,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:23","typeDescriptions":{}}},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7209,"nodeType":"ExpressionStatement","src":"32461:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"32500:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"32514:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7219,"nodeType":"IfStatement","src":"32496:97:23","trueBody":{"id":7218,"nodeType":"Block","src":"32521:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"32576:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7213,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"32542:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7217,"nodeType":"RevertStatement","src":"32535:47:23"}]}}]},"documentation":{"id":7196,"nodeType":"StructuredDocumentation","src":"32067:307:23","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7221,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:23","nodeType":"FunctionDefinition","parameters":{"id":7199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7198,"mutability":"mutable","name":"value","nameLocation":"32403:5:23","nodeType":"VariableDeclaration","scope":7221,"src":"32396:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7197,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:23"},"returnParameters":{"id":7202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7201,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:23","nodeType":"VariableDeclaration","scope":7221,"src":"32433:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7200,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:23"},"scope":7340,"src":"32379:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7246,"nodeType":"Block","src":"32989:148:23","statements":[{"expression":{"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7229,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"32999:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"33018:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7230,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:23","typeDescriptions":{}}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7235,"nodeType":"ExpressionStatement","src":"32999:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"33038:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"33052:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7245,"nodeType":"IfStatement","src":"33034:97:23","trueBody":{"id":7244,"nodeType":"Block","src":"33059:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"33114:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7239,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"33080:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7243,"nodeType":"RevertStatement","src":"33073:47:23"}]}}]},"documentation":{"id":7222,"nodeType":"StructuredDocumentation","src":"32605:307:23","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7247,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:23","nodeType":"FunctionDefinition","parameters":{"id":7225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7224,"mutability":"mutable","name":"value","nameLocation":"32941:5:23","nodeType":"VariableDeclaration","scope":7247,"src":"32934:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7223,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:23"},"returnParameters":{"id":7228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7227,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:23","nodeType":"VariableDeclaration","scope":7247,"src":"32971:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7226,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:23"},"scope":7340,"src":"32917:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7272,"nodeType":"Block","src":"33527:148:23","statements":[{"expression":{"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7255,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"33537:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"33556:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7256,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:23","typeDescriptions":{}}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7261,"nodeType":"ExpressionStatement","src":"33537:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"33576:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"33590:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7271,"nodeType":"IfStatement","src":"33572:97:23","trueBody":{"id":7270,"nodeType":"Block","src":"33597:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"33652:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7265,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"33618:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7269,"nodeType":"RevertStatement","src":"33611:47:23"}]}}]},"documentation":{"id":7248,"nodeType":"StructuredDocumentation","src":"33143:307:23","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7273,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:23","nodeType":"FunctionDefinition","parameters":{"id":7251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7250,"mutability":"mutable","name":"value","nameLocation":"33479:5:23","nodeType":"VariableDeclaration","scope":7273,"src":"33472:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7249,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:23"},"returnParameters":{"id":7254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7253,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:23","nodeType":"VariableDeclaration","scope":7273,"src":"33509:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7252,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:23"},"scope":7340,"src":"33455:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7298,"nodeType":"Block","src":"34058:146:23","statements":[{"expression":{"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7281,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"34068:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"34086:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7282,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:23","typeDescriptions":{}}},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7287,"nodeType":"ExpressionStatement","src":"34068:24:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"34106:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"34120:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7297,"nodeType":"IfStatement","src":"34102:96:23","trueBody":{"id":7296,"nodeType":"Block","src":"34127:71:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"34181:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7291,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"34148:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7295,"nodeType":"RevertStatement","src":"34141:46:23"}]}}]},"documentation":{"id":7274,"nodeType":"StructuredDocumentation","src":"33681:302:23","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7299,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:23","nodeType":"FunctionDefinition","parameters":{"id":7277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7276,"mutability":"mutable","name":"value","nameLocation":"34011:5:23","nodeType":"VariableDeclaration","scope":7299,"src":"34004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7275,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:23"},"returnParameters":{"id":7280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7279,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:23","nodeType":"VariableDeclaration","scope":7299,"src":"34041:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7278,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:23"},"scope":7340,"src":"33988:216:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7328,"nodeType":"Block","src":"34444:250:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"34557:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7311,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7310,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:23","memberName":"max","nodeType":"MemberAccess","src":"34573:16:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7308,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:23","typeDescriptions":{}}},"id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7322,"nodeType":"IfStatement","src":"34553:105:23","trueBody":{"id":7321,"nodeType":"Block","src":"34592:66:23","statements":[{"errorCall":{"arguments":[{"id":7318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"34641:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7317,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"34613:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7320,"nodeType":"RevertStatement","src":"34606:41:23"}]}},{"expression":{"arguments":[{"id":7325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"34681:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7323,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:23","typeDescriptions":{}}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7306,"id":7327,"nodeType":"Return","src":"34667:20:23"}]},"documentation":{"id":7300,"nodeType":"StructuredDocumentation","src":"34210:165:23","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7329,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:23","nodeType":"FunctionDefinition","parameters":{"id":7303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7302,"mutability":"mutable","name":"value","nameLocation":"34406:5:23","nodeType":"VariableDeclaration","scope":7329,"src":"34398:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7301,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:23"},"returnParameters":{"id":7306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7329,"src":"34436:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7304,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:23"},"scope":7340,"src":"34380:314:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7338,"nodeType":"Block","src":"34853:87:23","statements":[{"AST":{"nativeSrc":"34888:46:23","nodeType":"YulBlock","src":"34888:46:23","statements":[{"nativeSrc":"34902:22:23","nodeType":"YulAssignment","src":"34902:22:23","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:23","nodeType":"YulIdentifier","src":"34921:1:23"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:23","nodeType":"YulIdentifier","src":"34914:6:23"},"nativeSrc":"34914:9:23","nodeType":"YulFunctionCall","src":"34914:9:23"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:23","nodeType":"YulIdentifier","src":"34907:6:23"},"nativeSrc":"34907:17:23","nodeType":"YulFunctionCall","src":"34907:17:23"},"variableNames":[{"name":"u","nativeSrc":"34902:1:23","nodeType":"YulIdentifier","src":"34902:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7332,"isOffset":false,"isSlot":false,"src":"34921:1:23","valueSize":1},{"declaration":7335,"isOffset":false,"isSlot":false,"src":"34902:1:23","valueSize":1}],"flags":["memory-safe"],"id":7337,"nodeType":"InlineAssembly","src":"34863:71:23"}]},"documentation":{"id":7330,"nodeType":"StructuredDocumentation","src":"34700:90:23","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:23","nodeType":"FunctionDefinition","parameters":{"id":7333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7332,"mutability":"mutable","name":"b","nameLocation":"34816:1:23","nodeType":"VariableDeclaration","scope":7339,"src":"34811:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7331,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:23"},"returnParameters":{"id":7336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7335,"mutability":"mutable","name":"u","nameLocation":"34850:1:23","nodeType":"VariableDeclaration","scope":7339,"src":"34842:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7334,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:23"},"scope":7340,"src":"34795:145:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7341,"src":"769:34173:23","usedErrors":[5585,5590,5597,5602],"usedEvents":[]}],"src":"192:34751:23"},"id":23},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7340],"SignedMath":[7484]},"id":7485,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7342,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7485,"sourceUnit":7341,"src":"135:40:24","symbolAliases":[{"foreign":{"id":7343,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"143:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7345,"nodeType":"StructuredDocumentation","src":"177:80:24","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7484,"linearizedBaseContracts":[7484],"name":"SignedMath","nameLocation":"266:10:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":7374,"nodeType":"Block","src":"746:215:24","statements":[{"id":7373,"nodeType":"UncheckedBlock","src":"756:199:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7357,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"894:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"900:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"904:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7366,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"932:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7364,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"916:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7340_$","typeString":"type(library SafeCast)"}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7339,"src":"916:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7362,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:24","typeDescriptions":{}}},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7356,"id":7372,"nodeType":"Return","src":"887:57:24"}]}]},"documentation":{"id":7346,"nodeType":"StructuredDocumentation","src":"283:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7375,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:24","nodeType":"FunctionDefinition","parameters":{"id":7353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7348,"mutability":"mutable","name":"condition","nameLocation":"684:9:24","nodeType":"VariableDeclaration","scope":7375,"src":"679:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7347,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7350,"mutability":"mutable","name":"a","nameLocation":"702:1:24","nodeType":"VariableDeclaration","scope":7375,"src":"695:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7349,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7352,"mutability":"mutable","name":"b","nameLocation":"712:1:24","nodeType":"VariableDeclaration","scope":7375,"src":"705:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7351,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:24"},"returnParameters":{"id":7356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7375,"src":"738:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7354,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:24"},"scope":7484,"src":"662:299:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7393,"nodeType":"Block","src":"1102:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7386,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7378,"src":"1127:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7387,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7380,"src":"1131:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7378,"src":"1134:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7380,"src":"1137:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7385,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"1119:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7384,"id":7392,"nodeType":"Return","src":"1112:27:24"}]},"documentation":{"id":7376,"nodeType":"StructuredDocumentation","src":"967:66:24","text":" @dev Returns the largest of two signed numbers."},"id":7394,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:24","nodeType":"FunctionDefinition","parameters":{"id":7381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7378,"mutability":"mutable","name":"a","nameLocation":"1058:1:24","nodeType":"VariableDeclaration","scope":7394,"src":"1051:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7377,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7380,"mutability":"mutable","name":"b","nameLocation":"1068:1:24","nodeType":"VariableDeclaration","scope":7394,"src":"1061:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7379,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:24"},"returnParameters":{"id":7384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7394,"src":"1094:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7382,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:24"},"scope":7484,"src":"1038:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7412,"nodeType":"Block","src":"1288:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7405,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"1313:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7399,"src":"1317:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7408,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"1320:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7409,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7399,"src":"1323:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7404,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"1305:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7403,"id":7411,"nodeType":"Return","src":"1298:27:24"}]},"documentation":{"id":7395,"nodeType":"StructuredDocumentation","src":"1152:67:24","text":" @dev Returns the smallest of two signed numbers."},"id":7413,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:24","nodeType":"FunctionDefinition","parameters":{"id":7400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7397,"mutability":"mutable","name":"a","nameLocation":"1244:1:24","nodeType":"VariableDeclaration","scope":7413,"src":"1237:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7396,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7399,"mutability":"mutable","name":"b","nameLocation":"1254:1:24","nodeType":"VariableDeclaration","scope":7413,"src":"1247:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7398,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:24"},"returnParameters":{"id":7403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7413,"src":"1280:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7401,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:24"},"scope":7484,"src":"1224:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7456,"nodeType":"Block","src":"1537:162:24","statements":[{"assignments":[7424],"declarations":[{"constant":false,"id":7424,"mutability":"mutable","name":"x","nameLocation":"1606:1:24","nodeType":"VariableDeclaration","scope":7456,"src":"1599:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7423,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7437,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"1611:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7426,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"1615:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"1622:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7430,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"1626:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:24"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7438,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"1651:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7443,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"1671:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:24","typeDescriptions":{}}},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7439,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:24","typeDescriptions":{}}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"1685:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7449,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"1689:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7422,"id":7455,"nodeType":"Return","src":"1644:48:24"}]},"documentation":{"id":7414,"nodeType":"StructuredDocumentation","src":"1338:126:24","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7457,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:24","nodeType":"FunctionDefinition","parameters":{"id":7419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7416,"mutability":"mutable","name":"a","nameLocation":"1493:1:24","nodeType":"VariableDeclaration","scope":7457,"src":"1486:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7415,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7418,"mutability":"mutable","name":"b","nameLocation":"1503:1:24","nodeType":"VariableDeclaration","scope":7457,"src":"1496:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7417,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:24"},"returnParameters":{"id":7422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7457,"src":"1529:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7420,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:24"},"scope":7484,"src":"1469:230:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7482,"nodeType":"Block","src":"1843:767:24","statements":[{"id":7481,"nodeType":"UncheckedBlock","src":"1853:751:24","statements":[{"assignments":[7466],"declarations":[{"constant":false,"id":7466,"mutability":"mutable","name":"mask","nameLocation":"2424:4:24","nodeType":"VariableDeclaration","scope":7481,"src":"2417:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7465,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7470,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7467,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"2431:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7473,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"2576:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7474,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"2580:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7477,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"2588:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:24","typeDescriptions":{}}},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7464,"id":7480,"nodeType":"Return","src":"2560:33:24"}]}]},"documentation":{"id":7458,"nodeType":"StructuredDocumentation","src":"1705:78:24","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7483,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:24","nodeType":"FunctionDefinition","parameters":{"id":7461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7460,"mutability":"mutable","name":"n","nameLocation":"1808:1:24","nodeType":"VariableDeclaration","scope":7483,"src":"1801:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7459,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:24"},"returnParameters":{"id":7464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7483,"src":"1834:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:24"},"scope":7484,"src":"1788:822:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7485,"src":"258:2354:24","usedErrors":[],"usedEvents":[]}],"src":"109:2504:24"},"id":24},"contracts/RewardToken.sol":{"ast":{"absolutePath":"contracts/RewardToken.sol","exportedSymbols":{"Context":[1647],"ECDSA":[3656],"EIP712":[3883],"ERC20":[914],"ERC20Permit":[1146],"IERC20":[992],"IERC20Errors":[304],"IERC20Metadata":[1172],"IERC20Permit":[1208],"Nonces":[1715],"Ownable":[147],"RewardToken":[7528]},"id":7529,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7486,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"83:24:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7529,"sourceUnit":915,"src":"111:55:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7488,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7529,"sourceUnit":148,"src":"168:52:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":7489,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7529,"sourceUnit":1147,"src":"222:72:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7490,"name":"ERC20","nameLocations":["322:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"322:5:25"},"id":7491,"nodeType":"InheritanceSpecifier","src":"322:5:25"},{"baseName":{"id":7492,"name":"Ownable","nameLocations":["329:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"329:7:25"},"id":7493,"nodeType":"InheritanceSpecifier","src":"329:7:25"},{"baseName":{"id":7494,"name":"ERC20Permit","nameLocations":["338:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"338:11:25"},"id":7495,"nodeType":"InheritanceSpecifier","src":"338:11:25"}],"canonicalName":"RewardToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7528,"linearizedBaseContracts":[7528,1146,1715,3883,262,1208,147,914,304,1172,992,1647],"name":"RewardToken","nameLocation":"307:11:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":7513,"nodeType":"Block","src":"501:2:25","statements":[]},"id":7514,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7502,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"426:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7503,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"432:6:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7504,"kind":"baseConstructorSpecifier","modifierName":{"id":7501,"name":"ERC20","nameLocations":["420:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"420:5:25"},"nodeType":"ModifierInvocation","src":"420:19:25"},{"arguments":[{"expression":{"id":7506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"457:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"461:6:25","memberName":"sender","nodeType":"MemberAccess","src":"457:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7508,"kind":"baseConstructorSpecifier","modifierName":{"id":7505,"name":"Ownable","nameLocations":["449:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"449:7:25"},"nodeType":"ModifierInvocation","src":"449:19:25"},{"arguments":[{"id":7510,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"490:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7511,"kind":"baseConstructorSpecifier","modifierName":{"id":7509,"name":"ERC20Permit","nameLocations":["478:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"478:11:25"},"nodeType":"ModifierInvocation","src":"478:17:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7497,"mutability":"mutable","name":"name","nameLocation":"383:4:25","nodeType":"VariableDeclaration","scope":7514,"src":"369:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7496,"name":"string","nodeType":"ElementaryTypeName","src":"369:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7499,"mutability":"mutable","name":"symbol","nameLocation":"403:6:25","nodeType":"VariableDeclaration","scope":7514,"src":"389:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7498,"name":"string","nodeType":"ElementaryTypeName","src":"389:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"368:42:25"},"returnParameters":{"id":7512,"nodeType":"ParameterList","parameters":[],"src":"501:0:25"},"scope":7528,"src":"357:146:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7526,"nodeType":"Block","src":"560:36:25","statements":[{"expression":{"arguments":[{"id":7522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"577:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7523,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"581:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7521,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"571:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7525,"nodeType":"ExpressionStatement","src":"571:17:25"}]},"functionSelector":"40c10f19","id":7527,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"520:4:25","nodeType":"FunctionDefinition","parameters":{"id":7519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7516,"mutability":"mutable","name":"to","nameLocation":"533:2:25","nodeType":"VariableDeclaration","scope":7527,"src":"525:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7515,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7518,"mutability":"mutable","name":"amount","nameLocation":"545:6:25","nodeType":"VariableDeclaration","scope":7527,"src":"537:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7517,"name":"uint256","nodeType":"ElementaryTypeName","src":"537:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"524:28:25"},"returnParameters":{"id":7520,"nodeType":"ParameterList","parameters":[],"src":"560:0:25"},"scope":7528,"src":"511:85:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7529,"src":"298:301:25","usedErrors":[13,18,274,279,284,293,298,303,1023,1030,1657,1781,1783,3319,3324,3329],"usedEvents":[24,242,926,935]}],"src":"83:516:25"},"id":25},"contracts/StakingDapp.sol":{"ast":{"absolutePath":"contracts/StakingDapp.sol","exportedSymbols":{"Context":[1647],"IERC1363":[229],"IERC20":[992],"IRewardToken":[7543],"Ownable":[147],"SafeERC20":[1617],"StakingDapp":[7898]},"id":7899,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7530,"literals":["solidity","0.8",".24"],"nodeType":"PragmaDirective","src":"33:23:26"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7899,"sourceUnit":993,"src":"60:56:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7899,"sourceUnit":148,"src":"118:52:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":7533,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7899,"sourceUnit":1618,"src":"172:65:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7534,"name":"IERC20","nameLocations":["267:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"267:6:26"},"id":7535,"nodeType":"InheritanceSpecifier","src":"267:6:26"}],"canonicalName":"IRewardToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7543,"linearizedBaseContracts":[7543,992],"name":"IRewardToken","nameLocation":"251:12:26","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40c10f19","id":7542,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"290:4:26","nodeType":"FunctionDefinition","parameters":{"id":7540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7537,"mutability":"mutable","name":"to","nameLocation":"303:2:26","nodeType":"VariableDeclaration","scope":7542,"src":"295:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7536,"name":"address","nodeType":"ElementaryTypeName","src":"295:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7539,"mutability":"mutable","name":"amount","nameLocation":"315:6:26","nodeType":"VariableDeclaration","scope":7542,"src":"307:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7538,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"294:28:26"},"returnParameters":{"id":7541,"nodeType":"ParameterList","parameters":[],"src":"331:0:26"},"scope":7543,"src":"281:51:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7899,"src":"241:94:26","usedErrors":[],"usedEvents":[926,935]},{"abstract":false,"baseContracts":[{"baseName":{"id":7544,"name":"Ownable","nameLocations":["363:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"363:7:26"},"id":7545,"nodeType":"InheritanceSpecifier","src":"363:7:26"}],"canonicalName":"StakingDapp","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7898,"linearizedBaseContracts":[7898,147,1647],"name":"StakingDapp","nameLocation":"348:11:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7549,"libraryName":{"id":7546,"name":"SafeERC20","nameLocations":["384:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"384:9:26"},"nodeType":"UsingForDirective","src":"378:27:26","typeName":{"id":7548,"nodeType":"UserDefinedTypeName","pathNode":{"id":7547,"name":"IERC20","nameLocations":["398:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"398:6:26"},"referencedDeclaration":992,"src":"398:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"72f702f3","id":7552,"mutability":"mutable","name":"stakingToken","nameLocation":"427:12:26","nodeType":"VariableDeclaration","scope":7898,"src":"413:26:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":7551,"nodeType":"UserDefinedTypeName","pathNode":{"id":7550,"name":"IERC20","nameLocations":["413:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"413:6:26"},"referencedDeclaration":992,"src":"413:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"f7c618c1","id":7555,"mutability":"mutable","name":"rewardToken","nameLocation":"466:11:26","nodeType":"VariableDeclaration","scope":7898,"src":"446:31:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardToken_$7543","typeString":"contract IRewardToken"},"typeName":{"id":7554,"nodeType":"UserDefinedTypeName","pathNode":{"id":7553,"name":"IRewardToken","nameLocations":["446:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":7543,"src":"446:12:26"},"referencedDeclaration":7543,"src":"446:12:26","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardToken_$7543","typeString":"contract IRewardToken"}},"visibility":"public"},{"canonicalName":"StakingDapp.Stake","id":7560,"members":[{"constant":false,"id":7557,"mutability":"mutable","name":"amount","nameLocation":"518:6:26","nodeType":"VariableDeclaration","scope":7560,"src":"510:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7556,"name":"uint256","nodeType":"ElementaryTypeName","src":"510:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7559,"mutability":"mutable","name":"lastRewardTime","nameLocation":"543:14:26","nodeType":"VariableDeclaration","scope":7560,"src":"535:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7558,"name":"uint256","nodeType":"ElementaryTypeName","src":"535:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Stake","nameLocation":"493:5:26","nodeType":"StructDefinition","scope":7898,"src":"486:126:26","visibility":"public"},{"constant":false,"functionSelector":"16934fc4","id":7565,"mutability":"mutable","name":"stakes","nameLocation":"653:6:26","nodeType":"VariableDeclaration","scope":7898,"src":"620:39:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$7560_storage_$","typeString":"mapping(address => struct StakingDapp.Stake)"},"typeName":{"id":7564,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7561,"name":"address","nodeType":"ElementaryTypeName","src":"628:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"620:25:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$7560_storage_$","typeString":"mapping(address => struct StakingDapp.Stake)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7563,"nodeType":"UserDefinedTypeName","pathNode":{"id":7562,"name":"Stake","nameLocations":["639:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":7560,"src":"639:5:26"},"referencedDeclaration":7560,"src":"639:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_storage_ptr","typeString":"struct StakingDapp.Stake"}}},"visibility":"public"},{"constant":false,"functionSelector":"67b40cf7","id":7569,"mutability":"mutable","name":"rewardBalance","nameLocation":"701:13:26","nodeType":"VariableDeclaration","scope":7898,"src":"666:48:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7568,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7566,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"666:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7567,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":true,"functionSelector":"cf849442","id":7572,"mutability":"constant","name":"REWARD_AMOUNT","nameLocation":"747:13:26","nodeType":"VariableDeclaration","scope":7898,"src":"723:41:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7570,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":7571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"763:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":true,"functionSelector":"5dbdda69","id":7575,"mutability":"constant","name":"REWARD_INTERVAL","nameLocation":"825:15:26","nodeType":"VariableDeclaration","scope":7898,"src":"801:44:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7573,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":7574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"843:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"anonymous":false,"eventSelector":"9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d","id":7581,"name":"Staked","nameLocation":"894:6:26","nodeType":"EventDefinition","parameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7577,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"917:4:26","nodeType":"VariableDeclaration","scope":7581,"src":"901:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7576,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7579,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"931:6:26","nodeType":"VariableDeclaration","scope":7581,"src":"923:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7578,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"900:38:26"},"src":"888:51:26"},{"anonymous":false,"eventSelector":"0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75","id":7587,"name":"Unstaked","nameLocation":"951:8:26","nodeType":"EventDefinition","parameters":{"id":7586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7583,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"976:4:26","nodeType":"VariableDeclaration","scope":7587,"src":"960:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7582,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7585,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"990:6:26","nodeType":"VariableDeclaration","scope":7587,"src":"982:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7584,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"959:38:26"},"src":"945:53:26"},{"anonymous":false,"eventSelector":"106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241","id":7593,"name":"RewardClaimed","nameLocation":"1010:13:26","nodeType":"EventDefinition","parameters":{"id":7592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7589,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1040:4:26","nodeType":"VariableDeclaration","scope":7593,"src":"1024:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7588,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7591,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1054:6:26","nodeType":"VariableDeclaration","scope":7593,"src":"1046:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1046:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1023:38:26"},"src":"1004:58:26"},{"body":{"id":7633,"nodeType":"Block","src":"1147:210:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7605,"name":"_stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"1166:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1191:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1183:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7606,"name":"address","nodeType":"ElementaryTypeName","src":"1183:7:26","typeDescriptions":{}}},"id":7609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1166:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7611,"name":"_rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"1197:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1221:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1213:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7612,"name":"address","nodeType":"ElementaryTypeName","src":"1213:7:26","typeDescriptions":{}}},"id":7615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1213:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1197:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1166:57:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20616464726573736573","id":7618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1225:25:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e","typeString":"literal_string \"Invalid token addresses\""},"value":"Invalid token addresses"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e","typeString":"literal_string \"Invalid token addresses\""}],"id":7604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1158:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1158:93:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7620,"nodeType":"ExpressionStatement","src":"1158:93:26"},{"expression":{"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7621,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"1262:12:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7623,"name":"_stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"1284:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7622,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"1277:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1277:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"src":"1262:36:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":7626,"nodeType":"ExpressionStatement","src":"1262:36:26"},{"expression":{"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7627,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"1309:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardToken_$7543","typeString":"contract IRewardToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7629,"name":"_rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"1336:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7628,"name":"IRewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"1323:12:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardToken_$7543_$","typeString":"type(contract IRewardToken)"}},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1323:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewardToken_$7543","typeString":"contract IRewardToken"}},"src":"1309:40:26","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardToken_$7543","typeString":"contract IRewardToken"}},"id":7632,"nodeType":"ExpressionStatement","src":"1309:40:26"}]},"id":7634,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7600,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1135:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1139:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1135:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7602,"kind":"baseConstructorSpecifier","modifierName":{"id":7599,"name":"Ownable","nameLocations":["1127:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1127:7:26"},"nodeType":"ModifierInvocation","src":"1127:19:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7595,"mutability":"mutable","name":"_stakingToken","nameLocation":"1090:13:26","nodeType":"VariableDeclaration","scope":7634,"src":"1082:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7594,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7597,"mutability":"mutable","name":"_rewardToken","nameLocation":"1113:12:26","nodeType":"VariableDeclaration","scope":7634,"src":"1105:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7596,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1081:45:26"},"returnParameters":{"id":7603,"nodeType":"ParameterList","parameters":[],"src":"1147:0:26"},"scope":7898,"src":"1070:287:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7646,"nodeType":"Block","src":"1436:45:26","statements":[{"expression":{"expression":{"baseExpression":{"id":7641,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"1454:6:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$7560_storage_$","typeString":"mapping(address => struct StakingDapp.Stake storage ref)"}},"id":7643,"indexExpression":{"id":7642,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"1461:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1454:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_storage","typeString":"struct StakingDapp.Stake storage ref"}},"id":7644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1467:6:26","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7557,"src":"1454:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7640,"id":7645,"nodeType":"Return","src":"1447:26:26"}]},"functionSelector":"4da6a556","id":7647,"implemented":true,"kind":"function","modifiers":[],"name":"getStakedAmount","nameLocation":"1374:15:26","nodeType":"FunctionDefinition","parameters":{"id":7637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7636,"mutability":"mutable","name":"user","nameLocation":"1398:4:26","nodeType":"VariableDeclaration","scope":7647,"src":"1390:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7635,"name":"address","nodeType":"ElementaryTypeName","src":"1390:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1389:14:26"},"returnParameters":{"id":7640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7647,"src":"1427:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1427:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1426:9:26"},"scope":7898,"src":"1365:116:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7717,"nodeType":"Block","src":"1531:651:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7653,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"1550:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1559:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1550:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":7656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1562:31:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":7652,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1542:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1542:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7658,"nodeType":"ExpressionStatement","src":"1542:52:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7659,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"1619:6:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$7560_storage_$","typeString":"mapping(address => struct StakingDapp.Stake storage ref)"}},"id":7662,"indexExpression":{"expression":{"id":7660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1626:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1626:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1619:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_storage","typeString":"struct StakingDapp.Stake storage ref"}},"id":7663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1638:6:26","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7557,"src":"1619:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1619:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7681,"nodeType":"IfStatement","src":"1615:248:26","trueBody":{"id":7680,"nodeType":"Block","src":"1650:213:26","statements":[{"assignments":[7667],"declarations":[{"constant":false,"id":7667,"mutability":"mutable","name":"pendingReward","nameLocation":"1751:13:26","nodeType":"VariableDeclaration","scope":7680,"src":"1743:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1743:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7672,"initialValue":{"arguments":[{"expression":{"id":7669,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1783:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1787:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1783:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7668,"name":"calculateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"1767:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1767:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1743:51:26"},{"expression":{"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7673,"name":"rewardBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"1809:13:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7676,"indexExpression":{"expression":{"id":7674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1823:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1827:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1823:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7677,"name":"pendingReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"1838:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1809:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7679,"nodeType":"ExpressionStatement","src":"1809:42:26"}]}},{"expression":{"arguments":[{"expression":{"id":7685,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1913:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1917:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1913:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7689,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1933:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_StakingDapp_$7898","typeString":"contract StakingDapp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakingDapp_$7898","typeString":"contract StakingDapp"}],"id":7688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1925:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7687,"name":"address","nodeType":"ElementaryTypeName","src":"1925:7:26","typeDescriptions":{}}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1925:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7691,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"1940:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7682,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"1883:12:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1896:16:26","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1280,"src":"1883:29:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1883:64:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7693,"nodeType":"ExpressionStatement","src":"1883:64:26"},{"expression":{"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7694,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"2025:6:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$7560_storage_$","typeString":"mapping(address => struct StakingDapp.Stake storage ref)"}},"id":7697,"indexExpression":{"expression":{"id":7695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2032:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2036:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2032:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2025:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_storage","typeString":"struct StakingDapp.Stake storage ref"}},"id":7698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2044:6:26","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7557,"src":"2025:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7699,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"2054:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2025:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7701,"nodeType":"ExpressionStatement","src":"2025:35:26"},{"expression":{"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7702,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"2071:6:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$7560_storage_$","typeString":"mapping(address => struct StakingDapp.Stake storage ref)"}},"id":7705,"indexExpression":{"expression":{"id":7703,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2078:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2082:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2078:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2071:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_storage","typeString":"struct StakingDapp.Stake storage ref"}},"id":7706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2090:14:26","memberName":"lastRewardTime","nodeType":"MemberAccess","referencedDeclaration":7559,"src":"2071:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7707,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2107:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2113:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"2107:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2071:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7710,"nodeType":"ExpressionStatement","src":"2071:51:26"},{"eventCall":{"arguments":[{"expression":{"id":7712,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2155:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2159:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2155:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7714,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"2167:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7711,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"2148:6:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2148:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7716,"nodeType":"EmitStatement","src":"2143:31:26"}]},"functionSelector":"a694fc3a","id":7718,"implemented":true,"kind":"function","modifiers":[],"name":"stake","nameLocation":"1500:5:26","nodeType":"FunctionDefinition","parameters":{"id":7650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7649,"mutability":"mutable","name":"amount","nameLocation":"1514:6:26","nodeType":"VariableDeclaration","scope":7718,"src":"1506:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1505:16:26"},"returnParameters":{"id":7651,"nodeType":"ParameterList","parameters":[],"src":"1531:0:26"},"scope":7898,"src":"1491:691:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7779,"nodeType":"Block","src":"2232:499:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7724,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"2251:6:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$7560_storage_$","typeString":"mapping(address => struct StakingDapp.Stake storage ref)"}},"id":7727,"indexExpression":{"expression":{"id":7725,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2258:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2262:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2258:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2251:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_storage","typeString":"struct StakingDapp.Stake storage ref"}},"id":7728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2270:6:26","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7557,"src":"2251:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7729,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"2280:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2251:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":7731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2288:22:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":7723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2243:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2243:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7733,"nodeType":"ExpressionStatement","src":"2243:68:26"},{"assignments":[7735],"declarations":[{"constant":false,"id":7735,"mutability":"mutable","name":"pendingReward","nameLocation":"2340:13:26","nodeType":"VariableDeclaration","scope":7779,"src":"2332:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2332:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7740,"initialValue":{"arguments":[{"expression":{"id":7737,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2372:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2376:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2372:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7736,"name":"calculateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"2356:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2332:51:26"},{"expression":{"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7741,"name":"rewardBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"2394:13:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7744,"indexExpression":{"expression":{"id":7742,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2408:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2412:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2408:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2394:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7745,"name":"pendingReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"2423:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2394:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7747,"nodeType":"ExpressionStatement","src":"2394:42:26"},{"expression":{"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7748,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"2506:6:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$7560_storage_$","typeString":"mapping(address => struct StakingDapp.Stake storage ref)"}},"id":7751,"indexExpression":{"expression":{"id":7749,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2513:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2517:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2513:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2506:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_storage","typeString":"struct StakingDapp.Stake storage ref"}},"id":7752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2525:6:26","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7557,"src":"2506:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7753,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"2535:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2506:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7755,"nodeType":"ExpressionStatement","src":"2506:35:26"},{"expression":{"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7756,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"2552:6:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$7560_storage_$","typeString":"mapping(address => struct StakingDapp.Stake storage ref)"}},"id":7759,"indexExpression":{"expression":{"id":7757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2559:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2563:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2559:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2552:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_storage","typeString":"struct StakingDapp.Stake storage ref"}},"id":7760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2571:14:26","memberName":"lastRewardTime","nodeType":"MemberAccess","referencedDeclaration":7559,"src":"2552:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7761,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2588:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2594:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"2588:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2552:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7764,"nodeType":"ExpressionStatement","src":"2552:51:26"},{"expression":{"arguments":[{"expression":{"id":7768,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2650:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2654:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2650:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7770,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"2662:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7765,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"2624:12:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2637:12:26","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1253,"src":"2624:25:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2624:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7772,"nodeType":"ExpressionStatement","src":"2624:45:26"},{"eventCall":{"arguments":[{"expression":{"id":7774,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2704:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2708:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2704:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7776,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"2716:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7773,"name":"Unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"2695:8:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2695:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7778,"nodeType":"EmitStatement","src":"2690:33:26"}]},"functionSelector":"2e17de78","id":7780,"implemented":true,"kind":"function","modifiers":[],"name":"unstake","nameLocation":"2199:7:26","nodeType":"FunctionDefinition","parameters":{"id":7721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7720,"mutability":"mutable","name":"amount","nameLocation":"2215:6:26","nodeType":"VariableDeclaration","scope":7780,"src":"2207:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7719,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:16:26"},"returnParameters":{"id":7722,"nodeType":"ParameterList","parameters":[],"src":"2232:0:26"},"scope":7898,"src":"2190:541:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7832,"nodeType":"Block","src":"2771:425:26","statements":[{"assignments":[7784],"declarations":[{"constant":false,"id":7784,"mutability":"mutable","name":"reward","nameLocation":"2790:6:26","nodeType":"VariableDeclaration","scope":7832,"src":"2782:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7783,"name":"uint256","nodeType":"ElementaryTypeName","src":"2782:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7794,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":7786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2815:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2819:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2815:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7785,"name":"calculateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"2799:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":7789,"name":"rewardBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"2829:13:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7792,"indexExpression":{"expression":{"id":7790,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2843:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2847:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2843:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2829:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2799:55:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2782:72:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7796,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"2873:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2882:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2873:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2072657761726420617661696c61626c65","id":7799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2885:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382","typeString":"literal_string \"No reward available\""},"value":"No reward available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382","typeString":"literal_string \"No reward available\""}],"id":7795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2865:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2865:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7801,"nodeType":"ExpressionStatement","src":"2865:42:26"},{"expression":{"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7802,"name":"rewardBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"2950:13:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7805,"indexExpression":{"expression":{"id":7803,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2964:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2968:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2964:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2950:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2950:29:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7808,"nodeType":"ExpressionStatement","src":"2950:29:26"},{"expression":{"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7809,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"2990:6:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$7560_storage_$","typeString":"mapping(address => struct StakingDapp.Stake storage ref)"}},"id":7812,"indexExpression":{"expression":{"id":7810,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2997:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3001:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2997:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2990:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_storage","typeString":"struct StakingDapp.Stake storage ref"}},"id":7813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3009:14:26","memberName":"lastRewardTime","nodeType":"MemberAccess","referencedDeclaration":7559,"src":"2990:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7814,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3026:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3032:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"3026:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2990:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7817,"nodeType":"ExpressionStatement","src":"2990:51:26"},{"expression":{"arguments":[{"expression":{"id":7821,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3110:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3114:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3110:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7823,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"3122:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7818,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"3093:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardToken_$7543","typeString":"contract IRewardToken"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3105:4:26","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"3093:16:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7825,"nodeType":"ExpressionStatement","src":"3093:36:26"},{"eventCall":{"arguments":[{"expression":{"id":7827,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3169:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3173:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3169:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7829,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"3181:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7826,"name":"RewardClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"3155:13:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3155:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7831,"nodeType":"EmitStatement","src":"3150:38:26"}]},"functionSelector":"b88a802f","id":7833,"implemented":true,"kind":"function","modifiers":[],"name":"claimReward","nameLocation":"2748:11:26","nodeType":"FunctionDefinition","parameters":{"id":7781,"nodeType":"ParameterList","parameters":[],"src":"2759:2:26"},"returnParameters":{"id":7782,"nodeType":"ParameterList","parameters":[],"src":"2771:0:26"},"scope":7898,"src":"2739:457:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7880,"nodeType":"Block","src":"3275:554:26","statements":[{"assignments":[7842],"declarations":[{"constant":false,"id":7842,"mutability":"mutable","name":"userStake","nameLocation":"3299:9:26","nodeType":"VariableDeclaration","scope":7880,"src":"3286:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_memory_ptr","typeString":"struct StakingDapp.Stake"},"typeName":{"id":7841,"nodeType":"UserDefinedTypeName","pathNode":{"id":7840,"name":"Stake","nameLocations":["3286:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":7560,"src":"3286:5:26"},"referencedDeclaration":7560,"src":"3286:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_storage_ptr","typeString":"struct StakingDapp.Stake"}},"visibility":"internal"}],"id":7846,"initialValue":{"baseExpression":{"id":7843,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"3311:6:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$7560_storage_$","typeString":"mapping(address => struct StakingDapp.Stake storage ref)"}},"id":7845,"indexExpression":{"id":7844,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"3318:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3311:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_storage","typeString":"struct StakingDapp.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3286:37:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7847,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"3338:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_memory_ptr","typeString":"struct StakingDapp.Stake memory"}},"id":7848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3348:6:26","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7557,"src":"3338:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3358:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3338:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7854,"nodeType":"IfStatement","src":"3334:62:26","trueBody":{"id":7853,"nodeType":"Block","src":"3361:35:26","statements":[{"expression":{"hexValue":"30","id":7851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3383:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7839,"id":7852,"nodeType":"Return","src":"3376:8:26"}]}},{"assignments":[7856],"declarations":[{"constant":false,"id":7856,"mutability":"mutable","name":"currentTime","nameLocation":"3416:11:26","nodeType":"VariableDeclaration","scope":7880,"src":"3408:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7855,"name":"uint256","nodeType":"ElementaryTypeName","src":"3408:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7859,"initialValue":{"expression":{"id":7857,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3430:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3436:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"3430:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3408:37:26"},{"assignments":[7861],"declarations":[{"constant":false,"id":7861,"mutability":"mutable","name":"timeSinceLastReward","nameLocation":"3464:19:26","nodeType":"VariableDeclaration","scope":7880,"src":"3456:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7860,"name":"uint256","nodeType":"ElementaryTypeName","src":"3456:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7866,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7862,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"3486:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7863,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"3500:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_memory_ptr","typeString":"struct StakingDapp.Stake memory"}},"id":7864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3510:14:26","memberName":"lastRewardTime","nodeType":"MemberAccess","referencedDeclaration":7559,"src":"3500:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3486:38:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3456:68:26"},{"assignments":[7868],"declarations":[{"constant":false,"id":7868,"mutability":"mutable","name":"intervalsPassed","nameLocation":"3543:15:26","nodeType":"VariableDeclaration","scope":7880,"src":"3535:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7867,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7872,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7869,"name":"timeSinceLastReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"3561:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7870,"name":"REWARD_INTERVAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"3583:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3561:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3535:63:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7873,"name":"intervalsPassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"3689:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7874,"name":"REWARD_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"3707:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3689:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7876,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"3723:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$7560_memory_ptr","typeString":"struct StakingDapp.Stake memory"}},"id":7877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3733:6:26","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7557,"src":"3723:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3689:50:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7839,"id":7879,"nodeType":"Return","src":"3682:57:26"}]},"id":7881,"implemented":true,"kind":"function","modifiers":[],"name":"calculateReward","nameLocation":"3213:15:26","nodeType":"FunctionDefinition","parameters":{"id":7836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7835,"mutability":"mutable","name":"user","nameLocation":"3237:4:26","nodeType":"VariableDeclaration","scope":7881,"src":"3229:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7834,"name":"address","nodeType":"ElementaryTypeName","src":"3229:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3228:14:26"},"returnParameters":{"id":7839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7881,"src":"3266:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3266:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3265:9:26"},"scope":7898,"src":"3204:625:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7896,"nodeType":"Block","src":"3906:81:26","statements":[{"assignments":[7889],"declarations":[{"constant":false,"id":7889,"mutability":"mutable","name":"reward","nameLocation":"3925:6:26","nodeType":"VariableDeclaration","scope":7896,"src":"3917:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7888,"name":"uint256","nodeType":"ElementaryTypeName","src":"3917:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7893,"initialValue":{"arguments":[{"id":7891,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"3950:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7890,"name":"calculateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"3934:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3934:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3917:38:26"},{"expression":{"id":7894,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"3973:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7887,"id":7895,"nodeType":"Return","src":"3966:13:26"}]},"functionSelector":"44a040f5","id":7897,"implemented":true,"kind":"function","modifiers":[],"name":"getRewardAmount","nameLocation":"3844:15:26","nodeType":"FunctionDefinition","parameters":{"id":7884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7883,"mutability":"mutable","name":"user","nameLocation":"3868:4:26","nodeType":"VariableDeclaration","scope":7897,"src":"3860:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7882,"name":"address","nodeType":"ElementaryTypeName","src":"3860:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3859:14:26"},"returnParameters":{"id":7887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7897,"src":"3897:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7885,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:9:26"},"scope":7898,"src":"3835:152:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7899,"src":"339:3653:26","usedErrors":[13,18,1220],"usedEvents":[24,7581,7587,7593]}],"src":"33:3961:26"},"id":26},"contracts/StakingToken.sol":{"ast":{"absolutePath":"contracts/StakingToken.sol","exportedSymbols":{"Context":[1647],"ECDSA":[3656],"EIP712":[3883],"ERC20":[914],"ERC20Permit":[1146],"IERC20":[992],"IERC20Errors":[304],"IERC20Metadata":[1172],"IERC20Permit":[1208],"Nonces":[1715],"Ownable":[147],"StakingToken":[7953]},"id":7954,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7900,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"83:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7954,"sourceUnit":915,"src":"111:55:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7954,"sourceUnit":148,"src":"168:52:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":7903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7954,"sourceUnit":1147,"src":"222:72:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7904,"name":"ERC20","nameLocations":["323:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"323:5:27"},"id":7905,"nodeType":"InheritanceSpecifier","src":"323:5:27"},{"baseName":{"id":7906,"name":"Ownable","nameLocations":["330:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"330:7:27"},"id":7907,"nodeType":"InheritanceSpecifier","src":"330:7:27"},{"baseName":{"id":7908,"name":"ERC20Permit","nameLocations":["339:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"339:11:27"},"id":7909,"nodeType":"InheritanceSpecifier","src":"339:11:27"}],"canonicalName":"StakingToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7953,"linearizedBaseContracts":[7953,1146,1715,3883,262,1208,147,914,304,1172,992,1647],"name":"StakingToken","nameLocation":"307:12:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":7927,"nodeType":"Block","src":"502:2:27","statements":[]},"id":7928,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7916,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"427:4:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7917,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"433:6:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7918,"kind":"baseConstructorSpecifier","modifierName":{"id":7915,"name":"ERC20","nameLocations":["421:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"421:5:27"},"nodeType":"ModifierInvocation","src":"421:19:27"},{"arguments":[{"expression":{"id":7920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"458:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"462:6:27","memberName":"sender","nodeType":"MemberAccess","src":"458:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7922,"kind":"baseConstructorSpecifier","modifierName":{"id":7919,"name":"Ownable","nameLocations":["450:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"450:7:27"},"nodeType":"ModifierInvocation","src":"450:19:27"},{"arguments":[{"id":7924,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"491:4:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7925,"kind":"baseConstructorSpecifier","modifierName":{"id":7923,"name":"ERC20Permit","nameLocations":["479:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"479:11:27"},"nodeType":"ModifierInvocation","src":"479:17:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7911,"mutability":"mutable","name":"name","nameLocation":"384:4:27","nodeType":"VariableDeclaration","scope":7928,"src":"370:18:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7910,"name":"string","nodeType":"ElementaryTypeName","src":"370:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7913,"mutability":"mutable","name":"symbol","nameLocation":"404:6:27","nodeType":"VariableDeclaration","scope":7928,"src":"390:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7912,"name":"string","nodeType":"ElementaryTypeName","src":"390:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"369:42:27"},"returnParameters":{"id":7926,"nodeType":"ParameterList","parameters":[],"src":"502:0:27"},"scope":7953,"src":"358:146:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7951,"nodeType":"Block","src":"561:112:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7936,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"580:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"},"id":7941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":7937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:3:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"596:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"602:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"596:8:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"590:14:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"}},"src":"580:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616d6f756e74206d757374206265206c657373207468616e20313030","id":7943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"606:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0a78b37e49b508655b2a997562878feee45ff4a9a04a66d72e46d861d0a1a16","typeString":"literal_string \"amount must be less than 100\""},"value":"amount must be less than 100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a0a78b37e49b508655b2a997562878feee45ff4a9a04a66d72e46d861d0a1a16","typeString":"literal_string \"amount must be less than 100\""}],"id":7935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"572:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"572:65:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7945,"nodeType":"ExpressionStatement","src":"572:65:27"},{"expression":{"arguments":[{"id":7947,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"654:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7948,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"658:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7946,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"648:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"648:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7950,"nodeType":"ExpressionStatement","src":"648:17:27"}]},"functionSelector":"40c10f19","id":7952,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"521:4:27","nodeType":"FunctionDefinition","parameters":{"id":7933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7930,"mutability":"mutable","name":"to","nameLocation":"534:2:27","nodeType":"VariableDeclaration","scope":7952,"src":"526:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7929,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7932,"mutability":"mutable","name":"amount","nameLocation":"546:6:27","nodeType":"VariableDeclaration","scope":7952,"src":"538:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7931,"name":"uint256","nodeType":"ElementaryTypeName","src":"538:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"525:28:27"},"returnParameters":{"id":7934,"nodeType":"ParameterList","parameters":[],"src":"561:0:27"},"scope":7953,"src":"512:161:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7954,"src":"298:378:27","usedErrors":[13,18,274,279,284,293,298,303,1023,1030,1657,1781,1783,3319,3324,3329],"usedEvents":[24,242,926,935]}],"src":"83:593:27"},"id":27}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aacea24e1b56e44596e8c3d38e9c92f650f01c820a764feadfed90691f48ade864736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xCE LOG2 0x4E SHL JUMP 0xE4 GASLIMIT SWAP7 0xE8 0xC3 0xD3 DUP15 SWAP13 SWAP3 0xF6 POP CREATE SHR DUP3 EXP PUSH23 0x4FEADFED90691F48ADE864736F6C634300081800330000 ","sourceMap":"698:8692:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:8692:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aacea24e1b56e44596e8c3d38e9c92f650f01c820a764feadfed90691f48ade864736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xCE LOG2 0x4E SHL JUMP 0xE4 GASLIMIT SWAP7 0xE8 0xC3 0xD3 DUP15 SWAP13 SWAP3 0xF6 POP CREATE SHR DUP3 EXP PUSH23 0x4FEADFED90691F48ADE864736F6C634300081800330000 ","sourceMap":"698:8692:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fec73f632edd47d0e7ae9933b51e8f4da78eb465818c4263bebf6623ab05aff164736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xC7 EXTCODEHASH PUSH4 0x2EDD47D0 0xE7 0xAE SWAP10 CALLER 0xB5 0x1E DUP16 0x4D 0xA7 DUP15 0xB4 PUSH6 0x818C4263BEBF PUSH7 0x23AB05AFF16473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fec73f632edd47d0e7ae9933b51e8f4da78eb465818c4263bebf6623ab05aff164736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xC7 EXTCODEHASH PUSH4 0x2EDD47D0 0xE7 0xAE SWAP10 CALLER 0xB5 0x1E DUP16 0x4D 0xA7 DUP15 0xB4 PUSH6 0x818C4263BEBF PUSH7 0x23AB05AFF16473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"657:1315:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001a255181e92b267162bf792121e07f414fa3a485d831350fe8eb6a73d56042164736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD LOG2 SSTORE XOR 0x1E SWAP3 0xB2 PUSH8 0x162BF792121E07F4 EQ STATICCALL GASPRICE BASEFEE TSTORE DUP4 SGT POP INVALID DUP15 0xB6 0xA7 RETURNDATASIZE JUMP DIV 0x21 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3026:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3026:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001a255181e92b267162bf792121e07f414fa3a485d831350fe8eb6a73d56042164736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD LOG2 SSTORE XOR 0x1E SWAP3 0xB2 PUSH8 0x162BF792121E07F4 EQ STATICCALL GASPRICE BASEFEE TSTORE DUP4 SGT POP INVALID DUP15 0xB6 0xA7 RETURNDATASIZE JUMP DIV 0x21 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3026:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d2fe06b1bb59ae338afa04ee6dce686409d6cdc8b507ba3749c3e142db493ae64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x2F 0xE0 PUSH12 0x1BB59AE338AFA04EE6DCE686 BLOCKHASH SWAP14 PUSH13 0xDC8B507BA3749C3E142DB493AE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1407:2774:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d2fe06b1bb59ae338afa04ee6dce686409d6cdc8b507ba3749c3e142db493ae64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x2F 0xE0 PUSH12 0x1BB59AE338AFA04EE6DCE686 BLOCKHASH SWAP14 PUSH13 0xDC8B507BA3749C3E142DB493AE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1407:2774:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220853155c324e805177ca1443d916d6e35f12a0d05766214d9ab76d094dcc6341564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 BALANCE SSTORE 0xC3 0x24 0xE8 SDIV OR PUSH29 0xA1443D916D6E35F12A0D05766214D9AB76D094DCC6341564736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"297:16541:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:16541:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220853155c324e805177ca1443d916d6e35f12a0d05766214d9ab76d094dcc6341564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 BALANCE SSTORE 0xC3 0x24 0xE8 SDIV OR PUSH29 0xA1443D916D6E35F12A0D05766214D9AB76D094DCC6341564736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"297:16541:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a02ae933cd95f2ee943a9a3e5cbf4c6b7a6f7cc463d2cb58fac8fce23a0ba09464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x2A 0xE9 CALLER 0xCD SWAP6 CALLCODE 0xEE SWAP5 GASPRICE SWAP11 RETURNDATACOPY TLOAD 0xBF 0x4C PUSH12 0x7A6F7CC463D2CB58FAC8FCE2 GASPRICE SIGNEXTEND LOG0 SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"344:7470:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a02ae933cd95f2ee943a9a3e5cbf4c6b7a6f7cc463d2cb58fac8fce23a0ba09464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x2A 0xE9 CALLER 0xCD SWAP6 CALLCODE 0xEE SWAP5 GASPRICE SWAP11 RETURNDATACOPY TLOAD 0xBF 0x4C PUSH12 0x7A6F7CC463D2CB58FAC8FCE2 GASPRICE SIGNEXTEND LOG0 SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"344:7470:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f25c77c450fea70629296fdfc8555e6e48c8cd32156d26270ac2cfec69d8c14964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE TLOAD PUSH24 0xC450FEA70629296FDFC8555E6E48C8CD32156D26270AC2CF 0xEC PUSH10 0xD8C14964736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3181:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3181:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f25c77c450fea70629296fdfc8555e6e48c8cd32156d26270ac2cfec69d8c14964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE TLOAD PUSH24 0xC450FEA70629296FDFC8555E6E48C8CD32156D26270AC2CF 0xEC PUSH10 0xD8C14964736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3181:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220500ae690cce7f52b85ae5e5ccf9350a4116a96b9b4d2be85da01707f2319916564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP EXP 0xE6 SWAP1 0xCC 0xE7 CREATE2 0x2B DUP6 0xAE MCOPY TLOAD 0xCF SWAP4 POP LOG4 GT PUSH11 0x96B9B4D2BE85DA01707F23 NOT SWAP2 PUSH6 0x64736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:28026:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220500ae690cce7f52b85ae5e5ccf9350a4116a96b9b4d2be85da01707f2319916564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP EXP 0xE6 SWAP1 0xCC 0xE7 CREATE2 0x2B DUP6 0xAE MCOPY TLOAD 0xCF SWAP4 POP LOG4 GT PUSH11 0x96B9B4D2BE85DA01707F23 NOT SWAP2 PUSH6 0x64736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:28026:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c97bba8d553a67561101942b2a9afa3628667de55efed8df898d3aab783793c64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP8 0xBB 0xA8 0xD5 MSTORE8 0xA6 PUSH22 0x61101942B2A9AFA3628667DE55EFED8DF898D3AAB783 PUSH26 0x3C64736F6C634300081800330000000000000000000000000000 ","sourceMap":"769:34173:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c97bba8d553a67561101942b2a9afa3628667de55efed8df898d3aab783793c64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP8 0xBB 0xA8 0xD5 MSTORE8 0xA6 PUSH22 0x61101942B2A9AFA3628667DE55EFED8DF898D3AAB783 PUSH26 0x3C64736F6C634300081800330000000000000000000000000000 ","sourceMap":"769:34173:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220680917e17f715636462292a9029e0058e294bcd5d4d4fc83a420501ebb37147664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x917E17F7156364622 SWAP3 0xA9 MUL SWAP15 STOP PC 0xE2 SWAP5 0xBC 0xD5 0xD4 0xD4 0xFC DUP4 LOG4 KECCAK256 POP 0x1E 0xBB CALLDATACOPY EQ PUSH23 0x64736F6C63430008180033000000000000000000000000 ","sourceMap":"258:2354:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220680917e17f715636462292a9029e0058e294bcd5d4d4fc83a420501ebb37147664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x917E17F7156364622 SWAP3 0xA9 MUL SWAP15 STOP PC 0xE2 SWAP5 0xBC 0xD5 0xD4 0xD4 0xFC DUP4 LOG4 KECCAK256 POP 0x1E 0xBB CALLDATACOPY EQ PUSH23 0x64736F6C63430008180033000000000000000000000000 ","sourceMap":"258:2354:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/RewardToken.sol":{"RewardToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1041":{"entryPoint":null,"id":1041,"parameterSlots":1,"returnSlots":0},"@_3753":{"entryPoint":null,"id":3753,"parameterSlots":2,"returnSlots":0},"@_451":{"entryPoint":null,"id":451,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7514":{"entryPoint":null,"id":7514,"parameterSlots":2,"returnSlots":0},"@_buildDomainSeparator_3800":{"entryPoint":null,"id":3800,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":367,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_2085":{"entryPoint":null,"id":2085,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1925":{"entryPoint":449,"id":1925,"parameterSlots":2,"returnSlots":1},"@toShortString_1827":{"entryPoint":506,"id":1827,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":778,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1233,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":944,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1286,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1029,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":595,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":884,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":573,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5654:28","nodeType":"YulBlock","src":"0:5654:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"46:95:28","nodeType":"YulBlock","src":"46:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:28","nodeType":"YulLiteral","src":"63:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:28","nodeType":"YulLiteral","src":"70:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:28","nodeType":"YulLiteral","src":"75:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:28","nodeType":"YulIdentifier","src":"66:3:28"},"nativeSrc":"66:20:28","nodeType":"YulFunctionCall","src":"66:20:28"}],"functionName":{"name":"mstore","nativeSrc":"56:6:28","nodeType":"YulIdentifier","src":"56:6:28"},"nativeSrc":"56:31:28","nodeType":"YulFunctionCall","src":"56:31:28"},"nativeSrc":"56:31:28","nodeType":"YulExpressionStatement","src":"56:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:28","nodeType":"YulLiteral","src":"103:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:28","nodeType":"YulLiteral","src":"106:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:28","nodeType":"YulIdentifier","src":"96:6:28"},"nativeSrc":"96:15:28","nodeType":"YulFunctionCall","src":"96:15:28"},"nativeSrc":"96:15:28","nodeType":"YulExpressionStatement","src":"96:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:28","nodeType":"YulLiteral","src":"127:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:28","nodeType":"YulLiteral","src":"130:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:28","nodeType":"YulIdentifier","src":"120:6:28"},"nativeSrc":"120:15:28","nodeType":"YulFunctionCall","src":"120:15:28"},"nativeSrc":"120:15:28","nodeType":"YulExpressionStatement","src":"120:15:28"}]},"name":"panic_error_0x41","nativeSrc":"14:127:28","nodeType":"YulFunctionDefinition","src":"14:127:28"},{"body":{"nativeSrc":"212:184:28","nodeType":"YulBlock","src":"212:184:28","statements":[{"nativeSrc":"222:10:28","nodeType":"YulVariableDeclaration","src":"222:10:28","value":{"kind":"number","nativeSrc":"231:1:28","nodeType":"YulLiteral","src":"231:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"226:1:28","nodeType":"YulTypedName","src":"226:1:28","type":""}]},{"body":{"nativeSrc":"291:63:28","nodeType":"YulBlock","src":"291:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"316:3:28","nodeType":"YulIdentifier","src":"316:3:28"},{"name":"i","nativeSrc":"321:1:28","nodeType":"YulIdentifier","src":"321:1:28"}],"functionName":{"name":"add","nativeSrc":"312:3:28","nodeType":"YulIdentifier","src":"312:3:28"},"nativeSrc":"312:11:28","nodeType":"YulFunctionCall","src":"312:11:28"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"335:3:28","nodeType":"YulIdentifier","src":"335:3:28"},{"name":"i","nativeSrc":"340:1:28","nodeType":"YulIdentifier","src":"340:1:28"}],"functionName":{"name":"add","nativeSrc":"331:3:28","nodeType":"YulIdentifier","src":"331:3:28"},"nativeSrc":"331:11:28","nodeType":"YulFunctionCall","src":"331:11:28"}],"functionName":{"name":"mload","nativeSrc":"325:5:28","nodeType":"YulIdentifier","src":"325:5:28"},"nativeSrc":"325:18:28","nodeType":"YulFunctionCall","src":"325:18:28"}],"functionName":{"name":"mstore","nativeSrc":"305:6:28","nodeType":"YulIdentifier","src":"305:6:28"},"nativeSrc":"305:39:28","nodeType":"YulFunctionCall","src":"305:39:28"},"nativeSrc":"305:39:28","nodeType":"YulExpressionStatement","src":"305:39:28"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"252:1:28","nodeType":"YulIdentifier","src":"252:1:28"},{"name":"length","nativeSrc":"255:6:28","nodeType":"YulIdentifier","src":"255:6:28"}],"functionName":{"name":"lt","nativeSrc":"249:2:28","nodeType":"YulIdentifier","src":"249:2:28"},"nativeSrc":"249:13:28","nodeType":"YulFunctionCall","src":"249:13:28"},"nativeSrc":"241:113:28","nodeType":"YulForLoop","post":{"nativeSrc":"263:19:28","nodeType":"YulBlock","src":"263:19:28","statements":[{"nativeSrc":"265:15:28","nodeType":"YulAssignment","src":"265:15:28","value":{"arguments":[{"name":"i","nativeSrc":"274:1:28","nodeType":"YulIdentifier","src":"274:1:28"},{"kind":"number","nativeSrc":"277:2:28","nodeType":"YulLiteral","src":"277:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"270:3:28","nodeType":"YulIdentifier","src":"270:3:28"},"nativeSrc":"270:10:28","nodeType":"YulFunctionCall","src":"270:10:28"},"variableNames":[{"name":"i","nativeSrc":"265:1:28","nodeType":"YulIdentifier","src":"265:1:28"}]}]},"pre":{"nativeSrc":"245:3:28","nodeType":"YulBlock","src":"245:3:28","statements":[]},"src":"241:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"374:3:28","nodeType":"YulIdentifier","src":"374:3:28"},{"name":"length","nativeSrc":"379:6:28","nodeType":"YulIdentifier","src":"379:6:28"}],"functionName":{"name":"add","nativeSrc":"370:3:28","nodeType":"YulIdentifier","src":"370:3:28"},"nativeSrc":"370:16:28","nodeType":"YulFunctionCall","src":"370:16:28"},{"kind":"number","nativeSrc":"388:1:28","nodeType":"YulLiteral","src":"388:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"363:6:28","nodeType":"YulIdentifier","src":"363:6:28"},"nativeSrc":"363:27:28","nodeType":"YulFunctionCall","src":"363:27:28"},"nativeSrc":"363:27:28","nodeType":"YulExpressionStatement","src":"363:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"146:250:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"190:3:28","nodeType":"YulTypedName","src":"190:3:28","type":""},{"name":"dst","nativeSrc":"195:3:28","nodeType":"YulTypedName","src":"195:3:28","type":""},{"name":"length","nativeSrc":"200:6:28","nodeType":"YulTypedName","src":"200:6:28","type":""}],"src":"146:250:28"},{"body":{"nativeSrc":"465:635:28","nodeType":"YulBlock","src":"465:635:28","statements":[{"body":{"nativeSrc":"514:16:28","nodeType":"YulBlock","src":"514:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"523:1:28","nodeType":"YulLiteral","src":"523:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"526:1:28","nodeType":"YulLiteral","src":"526:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"516:6:28","nodeType":"YulIdentifier","src":"516:6:28"},"nativeSrc":"516:12:28","nodeType":"YulFunctionCall","src":"516:12:28"},"nativeSrc":"516:12:28","nodeType":"YulExpressionStatement","src":"516:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"493:6:28","nodeType":"YulIdentifier","src":"493:6:28"},{"kind":"number","nativeSrc":"501:4:28","nodeType":"YulLiteral","src":"501:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"489:3:28","nodeType":"YulIdentifier","src":"489:3:28"},"nativeSrc":"489:17:28","nodeType":"YulFunctionCall","src":"489:17:28"},{"name":"end","nativeSrc":"508:3:28","nodeType":"YulIdentifier","src":"508:3:28"}],"functionName":{"name":"slt","nativeSrc":"485:3:28","nodeType":"YulIdentifier","src":"485:3:28"},"nativeSrc":"485:27:28","nodeType":"YulFunctionCall","src":"485:27:28"}],"functionName":{"name":"iszero","nativeSrc":"478:6:28","nodeType":"YulIdentifier","src":"478:6:28"},"nativeSrc":"478:35:28","nodeType":"YulFunctionCall","src":"478:35:28"},"nativeSrc":"475:55:28","nodeType":"YulIf","src":"475:55:28"},{"nativeSrc":"539:23:28","nodeType":"YulVariableDeclaration","src":"539:23:28","value":{"arguments":[{"name":"offset","nativeSrc":"555:6:28","nodeType":"YulIdentifier","src":"555:6:28"}],"functionName":{"name":"mload","nativeSrc":"549:5:28","nodeType":"YulIdentifier","src":"549:5:28"},"nativeSrc":"549:13:28","nodeType":"YulFunctionCall","src":"549:13:28"},"variables":[{"name":"_1","nativeSrc":"543:2:28","nodeType":"YulTypedName","src":"543:2:28","type":""}]},{"nativeSrc":"571:28:28","nodeType":"YulVariableDeclaration","src":"571:28:28","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"589:2:28","nodeType":"YulLiteral","src":"589:2:28","type":"","value":"64"},{"kind":"number","nativeSrc":"593:1:28","nodeType":"YulLiteral","src":"593:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"585:3:28","nodeType":"YulIdentifier","src":"585:3:28"},"nativeSrc":"585:10:28","nodeType":"YulFunctionCall","src":"585:10:28"},{"kind":"number","nativeSrc":"597:1:28","nodeType":"YulLiteral","src":"597:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"581:3:28","nodeType":"YulIdentifier","src":"581:3:28"},"nativeSrc":"581:18:28","nodeType":"YulFunctionCall","src":"581:18:28"},"variables":[{"name":"_2","nativeSrc":"575:2:28","nodeType":"YulTypedName","src":"575:2:28","type":""}]},{"body":{"nativeSrc":"622:22:28","nodeType":"YulBlock","src":"622:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"624:16:28","nodeType":"YulIdentifier","src":"624:16:28"},"nativeSrc":"624:18:28","nodeType":"YulFunctionCall","src":"624:18:28"},"nativeSrc":"624:18:28","nodeType":"YulExpressionStatement","src":"624:18:28"}]},"condition":{"arguments":[{"name":"_1","nativeSrc":"614:2:28","nodeType":"YulIdentifier","src":"614:2:28"},{"name":"_2","nativeSrc":"618:2:28","nodeType":"YulIdentifier","src":"618:2:28"}],"functionName":{"name":"gt","nativeSrc":"611:2:28","nodeType":"YulIdentifier","src":"611:2:28"},"nativeSrc":"611:10:28","nodeType":"YulFunctionCall","src":"611:10:28"},"nativeSrc":"608:36:28","nodeType":"YulIf","src":"608:36:28"},{"nativeSrc":"653:17:28","nodeType":"YulVariableDeclaration","src":"653:17:28","value":{"arguments":[{"kind":"number","nativeSrc":"667:2:28","nodeType":"YulLiteral","src":"667:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"663:3:28","nodeType":"YulIdentifier","src":"663:3:28"},"nativeSrc":"663:7:28","nodeType":"YulFunctionCall","src":"663:7:28"},"variables":[{"name":"_3","nativeSrc":"657:2:28","nodeType":"YulTypedName","src":"657:2:28","type":""}]},{"nativeSrc":"679:23:28","nodeType":"YulVariableDeclaration","src":"679:23:28","value":{"arguments":[{"kind":"number","nativeSrc":"699:2:28","nodeType":"YulLiteral","src":"699:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"693:5:28","nodeType":"YulIdentifier","src":"693:5:28"},"nativeSrc":"693:9:28","nodeType":"YulFunctionCall","src":"693:9:28"},"variables":[{"name":"memPtr","nativeSrc":"683:6:28","nodeType":"YulTypedName","src":"683:6:28","type":""}]},{"nativeSrc":"711:71:28","nodeType":"YulVariableDeclaration","src":"711:71:28","value":{"arguments":[{"name":"memPtr","nativeSrc":"733:6:28","nodeType":"YulIdentifier","src":"733:6:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"757:2:28","nodeType":"YulIdentifier","src":"757:2:28"},{"kind":"number","nativeSrc":"761:4:28","nodeType":"YulLiteral","src":"761:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"753:3:28","nodeType":"YulIdentifier","src":"753:3:28"},"nativeSrc":"753:13:28","nodeType":"YulFunctionCall","src":"753:13:28"},{"name":"_3","nativeSrc":"768:2:28","nodeType":"YulIdentifier","src":"768:2:28"}],"functionName":{"name":"and","nativeSrc":"749:3:28","nodeType":"YulIdentifier","src":"749:3:28"},"nativeSrc":"749:22:28","nodeType":"YulFunctionCall","src":"749:22:28"},{"kind":"number","nativeSrc":"773:2:28","nodeType":"YulLiteral","src":"773:2:28","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"745:3:28","nodeType":"YulIdentifier","src":"745:3:28"},"nativeSrc":"745:31:28","nodeType":"YulFunctionCall","src":"745:31:28"},{"name":"_3","nativeSrc":"778:2:28","nodeType":"YulIdentifier","src":"778:2:28"}],"functionName":{"name":"and","nativeSrc":"741:3:28","nodeType":"YulIdentifier","src":"741:3:28"},"nativeSrc":"741:40:28","nodeType":"YulFunctionCall","src":"741:40:28"}],"functionName":{"name":"add","nativeSrc":"729:3:28","nodeType":"YulIdentifier","src":"729:3:28"},"nativeSrc":"729:53:28","nodeType":"YulFunctionCall","src":"729:53:28"},"variables":[{"name":"newFreePtr","nativeSrc":"715:10:28","nodeType":"YulTypedName","src":"715:10:28","type":""}]},{"body":{"nativeSrc":"841:22:28","nodeType":"YulBlock","src":"841:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"843:16:28","nodeType":"YulIdentifier","src":"843:16:28"},"nativeSrc":"843:18:28","nodeType":"YulFunctionCall","src":"843:18:28"},"nativeSrc":"843:18:28","nodeType":"YulExpressionStatement","src":"843:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"800:10:28","nodeType":"YulIdentifier","src":"800:10:28"},{"name":"_2","nativeSrc":"812:2:28","nodeType":"YulIdentifier","src":"812:2:28"}],"functionName":{"name":"gt","nativeSrc":"797:2:28","nodeType":"YulIdentifier","src":"797:2:28"},"nativeSrc":"797:18:28","nodeType":"YulFunctionCall","src":"797:18:28"},{"arguments":[{"name":"newFreePtr","nativeSrc":"820:10:28","nodeType":"YulIdentifier","src":"820:10:28"},{"name":"memPtr","nativeSrc":"832:6:28","nodeType":"YulIdentifier","src":"832:6:28"}],"functionName":{"name":"lt","nativeSrc":"817:2:28","nodeType":"YulIdentifier","src":"817:2:28"},"nativeSrc":"817:22:28","nodeType":"YulFunctionCall","src":"817:22:28"}],"functionName":{"name":"or","nativeSrc":"794:2:28","nodeType":"YulIdentifier","src":"794:2:28"},"nativeSrc":"794:46:28","nodeType":"YulFunctionCall","src":"794:46:28"},"nativeSrc":"791:72:28","nodeType":"YulIf","src":"791:72:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"879:2:28","nodeType":"YulLiteral","src":"879:2:28","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"883:10:28","nodeType":"YulIdentifier","src":"883:10:28"}],"functionName":{"name":"mstore","nativeSrc":"872:6:28","nodeType":"YulIdentifier","src":"872:6:28"},"nativeSrc":"872:22:28","nodeType":"YulFunctionCall","src":"872:22:28"},"nativeSrc":"872:22:28","nodeType":"YulExpressionStatement","src":"872:22:28"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"910:6:28","nodeType":"YulIdentifier","src":"910:6:28"},{"name":"_1","nativeSrc":"918:2:28","nodeType":"YulIdentifier","src":"918:2:28"}],"functionName":{"name":"mstore","nativeSrc":"903:6:28","nodeType":"YulIdentifier","src":"903:6:28"},"nativeSrc":"903:18:28","nodeType":"YulFunctionCall","src":"903:18:28"},"nativeSrc":"903:18:28","nodeType":"YulExpressionStatement","src":"903:18:28"},{"body":{"nativeSrc":"969:16:28","nodeType":"YulBlock","src":"969:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"978:1:28","nodeType":"YulLiteral","src":"978:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"981:1:28","nodeType":"YulLiteral","src":"981:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"971:6:28","nodeType":"YulIdentifier","src":"971:6:28"},"nativeSrc":"971:12:28","nodeType":"YulFunctionCall","src":"971:12:28"},"nativeSrc":"971:12:28","nodeType":"YulExpressionStatement","src":"971:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"944:6:28","nodeType":"YulIdentifier","src":"944:6:28"},{"name":"_1","nativeSrc":"952:2:28","nodeType":"YulIdentifier","src":"952:2:28"}],"functionName":{"name":"add","nativeSrc":"940:3:28","nodeType":"YulIdentifier","src":"940:3:28"},"nativeSrc":"940:15:28","nodeType":"YulFunctionCall","src":"940:15:28"},{"kind":"number","nativeSrc":"957:4:28","nodeType":"YulLiteral","src":"957:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"936:3:28","nodeType":"YulIdentifier","src":"936:3:28"},"nativeSrc":"936:26:28","nodeType":"YulFunctionCall","src":"936:26:28"},{"name":"end","nativeSrc":"964:3:28","nodeType":"YulIdentifier","src":"964:3:28"}],"functionName":{"name":"gt","nativeSrc":"933:2:28","nodeType":"YulIdentifier","src":"933:2:28"},"nativeSrc":"933:35:28","nodeType":"YulFunctionCall","src":"933:35:28"},"nativeSrc":"930:55:28","nodeType":"YulIf","src":"930:55:28"},{"expression":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1033:6:28","nodeType":"YulIdentifier","src":"1033:6:28"},{"kind":"number","nativeSrc":"1041:4:28","nodeType":"YulLiteral","src":"1041:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1029:3:28","nodeType":"YulIdentifier","src":"1029:3:28"},"nativeSrc":"1029:17:28","nodeType":"YulFunctionCall","src":"1029:17:28"},{"arguments":[{"name":"memPtr","nativeSrc":"1052:6:28","nodeType":"YulIdentifier","src":"1052:6:28"},{"kind":"number","nativeSrc":"1060:4:28","nodeType":"YulLiteral","src":"1060:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1048:3:28","nodeType":"YulIdentifier","src":"1048:3:28"},"nativeSrc":"1048:17:28","nodeType":"YulFunctionCall","src":"1048:17:28"},{"name":"_1","nativeSrc":"1067:2:28","nodeType":"YulIdentifier","src":"1067:2:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"994:34:28","nodeType":"YulIdentifier","src":"994:34:28"},"nativeSrc":"994:76:28","nodeType":"YulFunctionCall","src":"994:76:28"},"nativeSrc":"994:76:28","nodeType":"YulExpressionStatement","src":"994:76:28"},{"nativeSrc":"1079:15:28","nodeType":"YulAssignment","src":"1079:15:28","value":{"name":"memPtr","nativeSrc":"1088:6:28","nodeType":"YulIdentifier","src":"1088:6:28"},"variableNames":[{"name":"array","nativeSrc":"1079:5:28","nodeType":"YulIdentifier","src":"1079:5:28"}]}]},"name":"abi_decode_string_fromMemory","nativeSrc":"401:699:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"439:6:28","nodeType":"YulTypedName","src":"439:6:28","type":""},{"name":"end","nativeSrc":"447:3:28","nodeType":"YulTypedName","src":"447:3:28","type":""}],"returnVariables":[{"name":"array","nativeSrc":"455:5:28","nodeType":"YulTypedName","src":"455:5:28","type":""}],"src":"401:699:28"},{"body":{"nativeSrc":"1223:444:28","nodeType":"YulBlock","src":"1223:444:28","statements":[{"body":{"nativeSrc":"1269:16:28","nodeType":"YulBlock","src":"1269:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1278:1:28","nodeType":"YulLiteral","src":"1278:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1281:1:28","nodeType":"YulLiteral","src":"1281:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1271:6:28","nodeType":"YulIdentifier","src":"1271:6:28"},"nativeSrc":"1271:12:28","nodeType":"YulFunctionCall","src":"1271:12:28"},"nativeSrc":"1271:12:28","nodeType":"YulExpressionStatement","src":"1271:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1244:7:28","nodeType":"YulIdentifier","src":"1244:7:28"},{"name":"headStart","nativeSrc":"1253:9:28","nodeType":"YulIdentifier","src":"1253:9:28"}],"functionName":{"name":"sub","nativeSrc":"1240:3:28","nodeType":"YulIdentifier","src":"1240:3:28"},"nativeSrc":"1240:23:28","nodeType":"YulFunctionCall","src":"1240:23:28"},{"kind":"number","nativeSrc":"1265:2:28","nodeType":"YulLiteral","src":"1265:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1236:3:28","nodeType":"YulIdentifier","src":"1236:3:28"},"nativeSrc":"1236:32:28","nodeType":"YulFunctionCall","src":"1236:32:28"},"nativeSrc":"1233:52:28","nodeType":"YulIf","src":"1233:52:28"},{"nativeSrc":"1294:30:28","nodeType":"YulVariableDeclaration","src":"1294:30:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1314:9:28","nodeType":"YulIdentifier","src":"1314:9:28"}],"functionName":{"name":"mload","nativeSrc":"1308:5:28","nodeType":"YulIdentifier","src":"1308:5:28"},"nativeSrc":"1308:16:28","nodeType":"YulFunctionCall","src":"1308:16:28"},"variables":[{"name":"offset","nativeSrc":"1298:6:28","nodeType":"YulTypedName","src":"1298:6:28","type":""}]},{"nativeSrc":"1333:28:28","nodeType":"YulVariableDeclaration","src":"1333:28:28","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1351:2:28","nodeType":"YulLiteral","src":"1351:2:28","type":"","value":"64"},{"kind":"number","nativeSrc":"1355:1:28","nodeType":"YulLiteral","src":"1355:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1347:3:28","nodeType":"YulIdentifier","src":"1347:3:28"},"nativeSrc":"1347:10:28","nodeType":"YulFunctionCall","src":"1347:10:28"},{"kind":"number","nativeSrc":"1359:1:28","nodeType":"YulLiteral","src":"1359:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1343:3:28","nodeType":"YulIdentifier","src":"1343:3:28"},"nativeSrc":"1343:18:28","nodeType":"YulFunctionCall","src":"1343:18:28"},"variables":[{"name":"_1","nativeSrc":"1337:2:28","nodeType":"YulTypedName","src":"1337:2:28","type":""}]},{"body":{"nativeSrc":"1388:16:28","nodeType":"YulBlock","src":"1388:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:1:28","nodeType":"YulLiteral","src":"1397:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1400:1:28","nodeType":"YulLiteral","src":"1400:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1390:6:28","nodeType":"YulIdentifier","src":"1390:6:28"},"nativeSrc":"1390:12:28","nodeType":"YulFunctionCall","src":"1390:12:28"},"nativeSrc":"1390:12:28","nodeType":"YulExpressionStatement","src":"1390:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1376:6:28","nodeType":"YulIdentifier","src":"1376:6:28"},{"name":"_1","nativeSrc":"1384:2:28","nodeType":"YulIdentifier","src":"1384:2:28"}],"functionName":{"name":"gt","nativeSrc":"1373:2:28","nodeType":"YulIdentifier","src":"1373:2:28"},"nativeSrc":"1373:14:28","nodeType":"YulFunctionCall","src":"1373:14:28"},"nativeSrc":"1370:34:28","nodeType":"YulIf","src":"1370:34:28"},{"nativeSrc":"1413:71:28","nodeType":"YulAssignment","src":"1413:71:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1456:9:28","nodeType":"YulIdentifier","src":"1456:9:28"},{"name":"offset","nativeSrc":"1467:6:28","nodeType":"YulIdentifier","src":"1467:6:28"}],"functionName":{"name":"add","nativeSrc":"1452:3:28","nodeType":"YulIdentifier","src":"1452:3:28"},"nativeSrc":"1452:22:28","nodeType":"YulFunctionCall","src":"1452:22:28"},{"name":"dataEnd","nativeSrc":"1476:7:28","nodeType":"YulIdentifier","src":"1476:7:28"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1423:28:28","nodeType":"YulIdentifier","src":"1423:28:28"},"nativeSrc":"1423:61:28","nodeType":"YulFunctionCall","src":"1423:61:28"},"variableNames":[{"name":"value0","nativeSrc":"1413:6:28","nodeType":"YulIdentifier","src":"1413:6:28"}]},{"nativeSrc":"1493:41:28","nodeType":"YulVariableDeclaration","src":"1493:41:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1519:9:28","nodeType":"YulIdentifier","src":"1519:9:28"},{"kind":"number","nativeSrc":"1530:2:28","nodeType":"YulLiteral","src":"1530:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1515:3:28","nodeType":"YulIdentifier","src":"1515:3:28"},"nativeSrc":"1515:18:28","nodeType":"YulFunctionCall","src":"1515:18:28"}],"functionName":{"name":"mload","nativeSrc":"1509:5:28","nodeType":"YulIdentifier","src":"1509:5:28"},"nativeSrc":"1509:25:28","nodeType":"YulFunctionCall","src":"1509:25:28"},"variables":[{"name":"offset_1","nativeSrc":"1497:8:28","nodeType":"YulTypedName","src":"1497:8:28","type":""}]},{"body":{"nativeSrc":"1563:16:28","nodeType":"YulBlock","src":"1563:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1572:1:28","nodeType":"YulLiteral","src":"1572:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1575:1:28","nodeType":"YulLiteral","src":"1575:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1565:6:28","nodeType":"YulIdentifier","src":"1565:6:28"},"nativeSrc":"1565:12:28","nodeType":"YulFunctionCall","src":"1565:12:28"},"nativeSrc":"1565:12:28","nodeType":"YulExpressionStatement","src":"1565:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"1549:8:28","nodeType":"YulIdentifier","src":"1549:8:28"},{"name":"_1","nativeSrc":"1559:2:28","nodeType":"YulIdentifier","src":"1559:2:28"}],"functionName":{"name":"gt","nativeSrc":"1546:2:28","nodeType":"YulIdentifier","src":"1546:2:28"},"nativeSrc":"1546:16:28","nodeType":"YulFunctionCall","src":"1546:16:28"},"nativeSrc":"1543:36:28","nodeType":"YulIf","src":"1543:36:28"},{"nativeSrc":"1588:73:28","nodeType":"YulAssignment","src":"1588:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1631:9:28","nodeType":"YulIdentifier","src":"1631:9:28"},{"name":"offset_1","nativeSrc":"1642:8:28","nodeType":"YulIdentifier","src":"1642:8:28"}],"functionName":{"name":"add","nativeSrc":"1627:3:28","nodeType":"YulIdentifier","src":"1627:3:28"},"nativeSrc":"1627:24:28","nodeType":"YulFunctionCall","src":"1627:24:28"},{"name":"dataEnd","nativeSrc":"1653:7:28","nodeType":"YulIdentifier","src":"1653:7:28"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1598:28:28","nodeType":"YulIdentifier","src":"1598:28:28"},"nativeSrc":"1598:63:28","nodeType":"YulFunctionCall","src":"1598:63:28"},"variableNames":[{"name":"value1","nativeSrc":"1588:6:28","nodeType":"YulIdentifier","src":"1588:6:28"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nativeSrc":"1105:562:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1181:9:28","nodeType":"YulTypedName","src":"1181:9:28","type":""},{"name":"dataEnd","nativeSrc":"1192:7:28","nodeType":"YulTypedName","src":"1192:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1204:6:28","nodeType":"YulTypedName","src":"1204:6:28","type":""},{"name":"value1","nativeSrc":"1212:6:28","nodeType":"YulTypedName","src":"1212:6:28","type":""}],"src":"1105:562:28"},{"body":{"nativeSrc":"1727:325:28","nodeType":"YulBlock","src":"1727:325:28","statements":[{"nativeSrc":"1737:22:28","nodeType":"YulAssignment","src":"1737:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"1751:1:28","nodeType":"YulLiteral","src":"1751:1:28","type":"","value":"1"},{"name":"data","nativeSrc":"1754:4:28","nodeType":"YulIdentifier","src":"1754:4:28"}],"functionName":{"name":"shr","nativeSrc":"1747:3:28","nodeType":"YulIdentifier","src":"1747:3:28"},"nativeSrc":"1747:12:28","nodeType":"YulFunctionCall","src":"1747:12:28"},"variableNames":[{"name":"length","nativeSrc":"1737:6:28","nodeType":"YulIdentifier","src":"1737:6:28"}]},{"nativeSrc":"1768:38:28","nodeType":"YulVariableDeclaration","src":"1768:38:28","value":{"arguments":[{"name":"data","nativeSrc":"1798:4:28","nodeType":"YulIdentifier","src":"1798:4:28"},{"kind":"number","nativeSrc":"1804:1:28","nodeType":"YulLiteral","src":"1804:1:28","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1794:3:28","nodeType":"YulIdentifier","src":"1794:3:28"},"nativeSrc":"1794:12:28","nodeType":"YulFunctionCall","src":"1794:12:28"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1772:18:28","nodeType":"YulTypedName","src":"1772:18:28","type":""}]},{"body":{"nativeSrc":"1845:31:28","nodeType":"YulBlock","src":"1845:31:28","statements":[{"nativeSrc":"1847:27:28","nodeType":"YulAssignment","src":"1847:27:28","value":{"arguments":[{"name":"length","nativeSrc":"1861:6:28","nodeType":"YulIdentifier","src":"1861:6:28"},{"kind":"number","nativeSrc":"1869:4:28","nodeType":"YulLiteral","src":"1869:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1857:3:28","nodeType":"YulIdentifier","src":"1857:3:28"},"nativeSrc":"1857:17:28","nodeType":"YulFunctionCall","src":"1857:17:28"},"variableNames":[{"name":"length","nativeSrc":"1847:6:28","nodeType":"YulIdentifier","src":"1847:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1825:18:28","nodeType":"YulIdentifier","src":"1825:18:28"}],"functionName":{"name":"iszero","nativeSrc":"1818:6:28","nodeType":"YulIdentifier","src":"1818:6:28"},"nativeSrc":"1818:26:28","nodeType":"YulFunctionCall","src":"1818:26:28"},"nativeSrc":"1815:61:28","nodeType":"YulIf","src":"1815:61:28"},{"body":{"nativeSrc":"1935:111:28","nodeType":"YulBlock","src":"1935:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1956:1:28","nodeType":"YulLiteral","src":"1956:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1963:3:28","nodeType":"YulLiteral","src":"1963:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"1968:10:28","nodeType":"YulLiteral","src":"1968:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1959:3:28","nodeType":"YulIdentifier","src":"1959:3:28"},"nativeSrc":"1959:20:28","nodeType":"YulFunctionCall","src":"1959:20:28"}],"functionName":{"name":"mstore","nativeSrc":"1949:6:28","nodeType":"YulIdentifier","src":"1949:6:28"},"nativeSrc":"1949:31:28","nodeType":"YulFunctionCall","src":"1949:31:28"},"nativeSrc":"1949:31:28","nodeType":"YulExpressionStatement","src":"1949:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2000:1:28","nodeType":"YulLiteral","src":"2000:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"2003:4:28","nodeType":"YulLiteral","src":"2003:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1993:6:28","nodeType":"YulIdentifier","src":"1993:6:28"},"nativeSrc":"1993:15:28","nodeType":"YulFunctionCall","src":"1993:15:28"},"nativeSrc":"1993:15:28","nodeType":"YulExpressionStatement","src":"1993:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2028:1:28","nodeType":"YulLiteral","src":"2028:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2031:4:28","nodeType":"YulLiteral","src":"2031:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2021:6:28","nodeType":"YulIdentifier","src":"2021:6:28"},"nativeSrc":"2021:15:28","nodeType":"YulFunctionCall","src":"2021:15:28"},"nativeSrc":"2021:15:28","nodeType":"YulExpressionStatement","src":"2021:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1891:18:28","nodeType":"YulIdentifier","src":"1891:18:28"},{"arguments":[{"name":"length","nativeSrc":"1914:6:28","nodeType":"YulIdentifier","src":"1914:6:28"},{"kind":"number","nativeSrc":"1922:2:28","nodeType":"YulLiteral","src":"1922:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1911:2:28","nodeType":"YulIdentifier","src":"1911:2:28"},"nativeSrc":"1911:14:28","nodeType":"YulFunctionCall","src":"1911:14:28"}],"functionName":{"name":"eq","nativeSrc":"1888:2:28","nodeType":"YulIdentifier","src":"1888:2:28"},"nativeSrc":"1888:38:28","nodeType":"YulFunctionCall","src":"1888:38:28"},"nativeSrc":"1885:161:28","nodeType":"YulIf","src":"1885:161:28"}]},"name":"extract_byte_array_length","nativeSrc":"1672:380:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1707:4:28","nodeType":"YulTypedName","src":"1707:4:28","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1716:6:28","nodeType":"YulTypedName","src":"1716:6:28","type":""}],"src":"1672:380:28"},{"body":{"nativeSrc":"2113:65:28","nodeType":"YulBlock","src":"2113:65:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2130:1:28","nodeType":"YulLiteral","src":"2130:1:28","type":"","value":"0"},{"name":"ptr","nativeSrc":"2133:3:28","nodeType":"YulIdentifier","src":"2133:3:28"}],"functionName":{"name":"mstore","nativeSrc":"2123:6:28","nodeType":"YulIdentifier","src":"2123:6:28"},"nativeSrc":"2123:14:28","nodeType":"YulFunctionCall","src":"2123:14:28"},"nativeSrc":"2123:14:28","nodeType":"YulExpressionStatement","src":"2123:14:28"},{"nativeSrc":"2146:26:28","nodeType":"YulAssignment","src":"2146:26:28","value":{"arguments":[{"kind":"number","nativeSrc":"2164:1:28","nodeType":"YulLiteral","src":"2164:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2167:4:28","nodeType":"YulLiteral","src":"2167:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2154:9:28","nodeType":"YulIdentifier","src":"2154:9:28"},"nativeSrc":"2154:18:28","nodeType":"YulFunctionCall","src":"2154:18:28"},"variableNames":[{"name":"data","nativeSrc":"2146:4:28","nodeType":"YulIdentifier","src":"2146:4:28"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"2057:121:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2096:3:28","nodeType":"YulTypedName","src":"2096:3:28","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2104:4:28","nodeType":"YulTypedName","src":"2104:4:28","type":""}],"src":"2057:121:28"},{"body":{"nativeSrc":"2264:462:28","nodeType":"YulBlock","src":"2264:462:28","statements":[{"body":{"nativeSrc":"2297:423:28","nodeType":"YulBlock","src":"2297:423:28","statements":[{"nativeSrc":"2311:11:28","nodeType":"YulVariableDeclaration","src":"2311:11:28","value":{"kind":"number","nativeSrc":"2321:1:28","nodeType":"YulLiteral","src":"2321:1:28","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"2315:2:28","nodeType":"YulTypedName","src":"2315:2:28","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2342:1:28","nodeType":"YulLiteral","src":"2342:1:28","type":"","value":"0"},{"name":"array","nativeSrc":"2345:5:28","nodeType":"YulIdentifier","src":"2345:5:28"}],"functionName":{"name":"mstore","nativeSrc":"2335:6:28","nodeType":"YulIdentifier","src":"2335:6:28"},"nativeSrc":"2335:16:28","nodeType":"YulFunctionCall","src":"2335:16:28"},"nativeSrc":"2335:16:28","nodeType":"YulExpressionStatement","src":"2335:16:28"},{"nativeSrc":"2364:30:28","nodeType":"YulVariableDeclaration","src":"2364:30:28","value":{"arguments":[{"kind":"number","nativeSrc":"2386:1:28","nodeType":"YulLiteral","src":"2386:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2389:4:28","nodeType":"YulLiteral","src":"2389:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2376:9:28","nodeType":"YulIdentifier","src":"2376:9:28"},"nativeSrc":"2376:18:28","nodeType":"YulFunctionCall","src":"2376:18:28"},"variables":[{"name":"data","nativeSrc":"2368:4:28","nodeType":"YulTypedName","src":"2368:4:28","type":""}]},{"nativeSrc":"2407:57:28","nodeType":"YulVariableDeclaration","src":"2407:57:28","value":{"arguments":[{"name":"data","nativeSrc":"2430:4:28","nodeType":"YulIdentifier","src":"2430:4:28"},{"arguments":[{"kind":"number","nativeSrc":"2440:1:28","nodeType":"YulLiteral","src":"2440:1:28","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"2447:10:28","nodeType":"YulIdentifier","src":"2447:10:28"},{"kind":"number","nativeSrc":"2459:2:28","nodeType":"YulLiteral","src":"2459:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2443:3:28","nodeType":"YulIdentifier","src":"2443:3:28"},"nativeSrc":"2443:19:28","nodeType":"YulFunctionCall","src":"2443:19:28"}],"functionName":{"name":"shr","nativeSrc":"2436:3:28","nodeType":"YulIdentifier","src":"2436:3:28"},"nativeSrc":"2436:27:28","nodeType":"YulFunctionCall","src":"2436:27:28"}],"functionName":{"name":"add","nativeSrc":"2426:3:28","nodeType":"YulIdentifier","src":"2426:3:28"},"nativeSrc":"2426:38:28","nodeType":"YulFunctionCall","src":"2426:38:28"},"variables":[{"name":"deleteStart","nativeSrc":"2411:11:28","nodeType":"YulTypedName","src":"2411:11:28","type":""}]},{"body":{"nativeSrc":"2501:23:28","nodeType":"YulBlock","src":"2501:23:28","statements":[{"nativeSrc":"2503:19:28","nodeType":"YulAssignment","src":"2503:19:28","value":{"name":"data","nativeSrc":"2518:4:28","nodeType":"YulIdentifier","src":"2518:4:28"},"variableNames":[{"name":"deleteStart","nativeSrc":"2503:11:28","nodeType":"YulIdentifier","src":"2503:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"2483:10:28","nodeType":"YulIdentifier","src":"2483:10:28"},{"kind":"number","nativeSrc":"2495:4:28","nodeType":"YulLiteral","src":"2495:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"2480:2:28","nodeType":"YulIdentifier","src":"2480:2:28"},"nativeSrc":"2480:20:28","nodeType":"YulFunctionCall","src":"2480:20:28"},"nativeSrc":"2477:47:28","nodeType":"YulIf","src":"2477:47:28"},{"nativeSrc":"2537:41:28","nodeType":"YulVariableDeclaration","src":"2537:41:28","value":{"arguments":[{"name":"data","nativeSrc":"2551:4:28","nodeType":"YulIdentifier","src":"2551:4:28"},{"arguments":[{"kind":"number","nativeSrc":"2561:1:28","nodeType":"YulLiteral","src":"2561:1:28","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"2568:3:28","nodeType":"YulIdentifier","src":"2568:3:28"},{"kind":"number","nativeSrc":"2573:2:28","nodeType":"YulLiteral","src":"2573:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2564:3:28","nodeType":"YulIdentifier","src":"2564:3:28"},"nativeSrc":"2564:12:28","nodeType":"YulFunctionCall","src":"2564:12:28"}],"functionName":{"name":"shr","nativeSrc":"2557:3:28","nodeType":"YulIdentifier","src":"2557:3:28"},"nativeSrc":"2557:20:28","nodeType":"YulFunctionCall","src":"2557:20:28"}],"functionName":{"name":"add","nativeSrc":"2547:3:28","nodeType":"YulIdentifier","src":"2547:3:28"},"nativeSrc":"2547:31:28","nodeType":"YulFunctionCall","src":"2547:31:28"},"variables":[{"name":"_2","nativeSrc":"2541:2:28","nodeType":"YulTypedName","src":"2541:2:28","type":""}]},{"nativeSrc":"2591:24:28","nodeType":"YulVariableDeclaration","src":"2591:24:28","value":{"name":"deleteStart","nativeSrc":"2604:11:28","nodeType":"YulIdentifier","src":"2604:11:28"},"variables":[{"name":"start","nativeSrc":"2595:5:28","nodeType":"YulTypedName","src":"2595:5:28","type":""}]},{"body":{"nativeSrc":"2689:21:28","nodeType":"YulBlock","src":"2689:21:28","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2698:5:28","nodeType":"YulIdentifier","src":"2698:5:28"},{"name":"_1","nativeSrc":"2705:2:28","nodeType":"YulIdentifier","src":"2705:2:28"}],"functionName":{"name":"sstore","nativeSrc":"2691:6:28","nodeType":"YulIdentifier","src":"2691:6:28"},"nativeSrc":"2691:17:28","nodeType":"YulFunctionCall","src":"2691:17:28"},"nativeSrc":"2691:17:28","nodeType":"YulExpressionStatement","src":"2691:17:28"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2639:5:28","nodeType":"YulIdentifier","src":"2639:5:28"},{"name":"_2","nativeSrc":"2646:2:28","nodeType":"YulIdentifier","src":"2646:2:28"}],"functionName":{"name":"lt","nativeSrc":"2636:2:28","nodeType":"YulIdentifier","src":"2636:2:28"},"nativeSrc":"2636:13:28","nodeType":"YulFunctionCall","src":"2636:13:28"},"nativeSrc":"2628:82:28","nodeType":"YulForLoop","post":{"nativeSrc":"2650:26:28","nodeType":"YulBlock","src":"2650:26:28","statements":[{"nativeSrc":"2652:22:28","nodeType":"YulAssignment","src":"2652:22:28","value":{"arguments":[{"name":"start","nativeSrc":"2665:5:28","nodeType":"YulIdentifier","src":"2665:5:28"},{"kind":"number","nativeSrc":"2672:1:28","nodeType":"YulLiteral","src":"2672:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2661:3:28","nodeType":"YulIdentifier","src":"2661:3:28"},"nativeSrc":"2661:13:28","nodeType":"YulFunctionCall","src":"2661:13:28"},"variableNames":[{"name":"start","nativeSrc":"2652:5:28","nodeType":"YulIdentifier","src":"2652:5:28"}]}]},"pre":{"nativeSrc":"2632:3:28","nodeType":"YulBlock","src":"2632:3:28","statements":[]},"src":"2628:82:28"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2280:3:28","nodeType":"YulIdentifier","src":"2280:3:28"},{"kind":"number","nativeSrc":"2285:2:28","nodeType":"YulLiteral","src":"2285:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2277:2:28","nodeType":"YulIdentifier","src":"2277:2:28"},"nativeSrc":"2277:11:28","nodeType":"YulFunctionCall","src":"2277:11:28"},"nativeSrc":"2274:446:28","nodeType":"YulIf","src":"2274:446:28"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2183:543:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2236:5:28","nodeType":"YulTypedName","src":"2236:5:28","type":""},{"name":"len","nativeSrc":"2243:3:28","nodeType":"YulTypedName","src":"2243:3:28","type":""},{"name":"startIndex","nativeSrc":"2248:10:28","nodeType":"YulTypedName","src":"2248:10:28","type":""}],"src":"2183:543:28"},{"body":{"nativeSrc":"2816:81:28","nodeType":"YulBlock","src":"2816:81:28","statements":[{"nativeSrc":"2826:65:28","nodeType":"YulAssignment","src":"2826:65:28","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"2841:4:28","nodeType":"YulIdentifier","src":"2841:4:28"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2859:1:28","nodeType":"YulLiteral","src":"2859:1:28","type":"","value":"3"},{"name":"len","nativeSrc":"2862:3:28","nodeType":"YulIdentifier","src":"2862:3:28"}],"functionName":{"name":"shl","nativeSrc":"2855:3:28","nodeType":"YulIdentifier","src":"2855:3:28"},"nativeSrc":"2855:11:28","nodeType":"YulFunctionCall","src":"2855:11:28"},{"arguments":[{"kind":"number","nativeSrc":"2872:1:28","nodeType":"YulLiteral","src":"2872:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2868:3:28","nodeType":"YulIdentifier","src":"2868:3:28"},"nativeSrc":"2868:6:28","nodeType":"YulFunctionCall","src":"2868:6:28"}],"functionName":{"name":"shr","nativeSrc":"2851:3:28","nodeType":"YulIdentifier","src":"2851:3:28"},"nativeSrc":"2851:24:28","nodeType":"YulFunctionCall","src":"2851:24:28"}],"functionName":{"name":"not","nativeSrc":"2847:3:28","nodeType":"YulIdentifier","src":"2847:3:28"},"nativeSrc":"2847:29:28","nodeType":"YulFunctionCall","src":"2847:29:28"}],"functionName":{"name":"and","nativeSrc":"2837:3:28","nodeType":"YulIdentifier","src":"2837:3:28"},"nativeSrc":"2837:40:28","nodeType":"YulFunctionCall","src":"2837:40:28"},{"arguments":[{"kind":"number","nativeSrc":"2883:1:28","nodeType":"YulLiteral","src":"2883:1:28","type":"","value":"1"},{"name":"len","nativeSrc":"2886:3:28","nodeType":"YulIdentifier","src":"2886:3:28"}],"functionName":{"name":"shl","nativeSrc":"2879:3:28","nodeType":"YulIdentifier","src":"2879:3:28"},"nativeSrc":"2879:11:28","nodeType":"YulFunctionCall","src":"2879:11:28"}],"functionName":{"name":"or","nativeSrc":"2834:2:28","nodeType":"YulIdentifier","src":"2834:2:28"},"nativeSrc":"2834:57:28","nodeType":"YulFunctionCall","src":"2834:57:28"},"variableNames":[{"name":"used","nativeSrc":"2826:4:28","nodeType":"YulIdentifier","src":"2826:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2731:166:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2793:4:28","nodeType":"YulTypedName","src":"2793:4:28","type":""},{"name":"len","nativeSrc":"2799:3:28","nodeType":"YulTypedName","src":"2799:3:28","type":""}],"returnVariables":[{"name":"used","nativeSrc":"2807:4:28","nodeType":"YulTypedName","src":"2807:4:28","type":""}],"src":"2731:166:28"},{"body":{"nativeSrc":"2998:1249:28","nodeType":"YulBlock","src":"2998:1249:28","statements":[{"nativeSrc":"3008:24:28","nodeType":"YulVariableDeclaration","src":"3008:24:28","value":{"arguments":[{"name":"src","nativeSrc":"3028:3:28","nodeType":"YulIdentifier","src":"3028:3:28"}],"functionName":{"name":"mload","nativeSrc":"3022:5:28","nodeType":"YulIdentifier","src":"3022:5:28"},"nativeSrc":"3022:10:28","nodeType":"YulFunctionCall","src":"3022:10:28"},"variables":[{"name":"newLen","nativeSrc":"3012:6:28","nodeType":"YulTypedName","src":"3012:6:28","type":""}]},{"body":{"nativeSrc":"3075:22:28","nodeType":"YulBlock","src":"3075:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3077:16:28","nodeType":"YulIdentifier","src":"3077:16:28"},"nativeSrc":"3077:18:28","nodeType":"YulFunctionCall","src":"3077:18:28"},"nativeSrc":"3077:18:28","nodeType":"YulExpressionStatement","src":"3077:18:28"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"3047:6:28","nodeType":"YulIdentifier","src":"3047:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3063:2:28","nodeType":"YulLiteral","src":"3063:2:28","type":"","value":"64"},{"kind":"number","nativeSrc":"3067:1:28","nodeType":"YulLiteral","src":"3067:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3059:3:28","nodeType":"YulIdentifier","src":"3059:3:28"},"nativeSrc":"3059:10:28","nodeType":"YulFunctionCall","src":"3059:10:28"},{"kind":"number","nativeSrc":"3071:1:28","nodeType":"YulLiteral","src":"3071:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3055:3:28","nodeType":"YulIdentifier","src":"3055:3:28"},"nativeSrc":"3055:18:28","nodeType":"YulFunctionCall","src":"3055:18:28"}],"functionName":{"name":"gt","nativeSrc":"3044:2:28","nodeType":"YulIdentifier","src":"3044:2:28"},"nativeSrc":"3044:30:28","nodeType":"YulFunctionCall","src":"3044:30:28"},"nativeSrc":"3041:56:28","nodeType":"YulIf","src":"3041:56:28"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3150:4:28","nodeType":"YulIdentifier","src":"3150:4:28"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3188:4:28","nodeType":"YulIdentifier","src":"3188:4:28"}],"functionName":{"name":"sload","nativeSrc":"3182:5:28","nodeType":"YulIdentifier","src":"3182:5:28"},"nativeSrc":"3182:11:28","nodeType":"YulFunctionCall","src":"3182:11:28"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"3156:25:28","nodeType":"YulIdentifier","src":"3156:25:28"},"nativeSrc":"3156:38:28","nodeType":"YulFunctionCall","src":"3156:38:28"},{"name":"newLen","nativeSrc":"3196:6:28","nodeType":"YulIdentifier","src":"3196:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"3106:43:28","nodeType":"YulIdentifier","src":"3106:43:28"},"nativeSrc":"3106:97:28","nodeType":"YulFunctionCall","src":"3106:97:28"},"nativeSrc":"3106:97:28","nodeType":"YulExpressionStatement","src":"3106:97:28"},{"nativeSrc":"3212:18:28","nodeType":"YulVariableDeclaration","src":"3212:18:28","value":{"kind":"number","nativeSrc":"3229:1:28","nodeType":"YulLiteral","src":"3229:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"3216:9:28","nodeType":"YulTypedName","src":"3216:9:28","type":""}]},{"nativeSrc":"3239:23:28","nodeType":"YulVariableDeclaration","src":"3239:23:28","value":{"kind":"number","nativeSrc":"3258:4:28","nodeType":"YulLiteral","src":"3258:4:28","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"3243:11:28","nodeType":"YulTypedName","src":"3243:11:28","type":""}]},{"nativeSrc":"3271:17:28","nodeType":"YulAssignment","src":"3271:17:28","value":{"kind":"number","nativeSrc":"3284:4:28","nodeType":"YulLiteral","src":"3284:4:28","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"3271:9:28","nodeType":"YulIdentifier","src":"3271:9:28"}]},{"cases":[{"body":{"nativeSrc":"3334:656:28","nodeType":"YulBlock","src":"3334:656:28","statements":[{"nativeSrc":"3348:35:28","nodeType":"YulVariableDeclaration","src":"3348:35:28","value":{"arguments":[{"name":"newLen","nativeSrc":"3367:6:28","nodeType":"YulIdentifier","src":"3367:6:28"},{"arguments":[{"kind":"number","nativeSrc":"3379:2:28","nodeType":"YulLiteral","src":"3379:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3375:3:28","nodeType":"YulIdentifier","src":"3375:3:28"},"nativeSrc":"3375:7:28","nodeType":"YulFunctionCall","src":"3375:7:28"}],"functionName":{"name":"and","nativeSrc":"3363:3:28","nodeType":"YulIdentifier","src":"3363:3:28"},"nativeSrc":"3363:20:28","nodeType":"YulFunctionCall","src":"3363:20:28"},"variables":[{"name":"loopEnd","nativeSrc":"3352:7:28","nodeType":"YulTypedName","src":"3352:7:28","type":""}]},{"nativeSrc":"3396:49:28","nodeType":"YulVariableDeclaration","src":"3396:49:28","value":{"arguments":[{"name":"slot","nativeSrc":"3440:4:28","nodeType":"YulIdentifier","src":"3440:4:28"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"3410:29:28","nodeType":"YulIdentifier","src":"3410:29:28"},"nativeSrc":"3410:35:28","nodeType":"YulFunctionCall","src":"3410:35:28"},"variables":[{"name":"dstPtr","nativeSrc":"3400:6:28","nodeType":"YulTypedName","src":"3400:6:28","type":""}]},{"nativeSrc":"3458:10:28","nodeType":"YulVariableDeclaration","src":"3458:10:28","value":{"kind":"number","nativeSrc":"3467:1:28","nodeType":"YulLiteral","src":"3467:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3462:1:28","nodeType":"YulTypedName","src":"3462:1:28","type":""}]},{"body":{"nativeSrc":"3545:172:28","nodeType":"YulBlock","src":"3545:172:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3570:6:28","nodeType":"YulIdentifier","src":"3570:6:28"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3588:3:28","nodeType":"YulIdentifier","src":"3588:3:28"},{"name":"srcOffset","nativeSrc":"3593:9:28","nodeType":"YulIdentifier","src":"3593:9:28"}],"functionName":{"name":"add","nativeSrc":"3584:3:28","nodeType":"YulIdentifier","src":"3584:3:28"},"nativeSrc":"3584:19:28","nodeType":"YulFunctionCall","src":"3584:19:28"}],"functionName":{"name":"mload","nativeSrc":"3578:5:28","nodeType":"YulIdentifier","src":"3578:5:28"},"nativeSrc":"3578:26:28","nodeType":"YulFunctionCall","src":"3578:26:28"}],"functionName":{"name":"sstore","nativeSrc":"3563:6:28","nodeType":"YulIdentifier","src":"3563:6:28"},"nativeSrc":"3563:42:28","nodeType":"YulFunctionCall","src":"3563:42:28"},"nativeSrc":"3563:42:28","nodeType":"YulExpressionStatement","src":"3563:42:28"},{"nativeSrc":"3622:24:28","nodeType":"YulAssignment","src":"3622:24:28","value":{"arguments":[{"name":"dstPtr","nativeSrc":"3636:6:28","nodeType":"YulIdentifier","src":"3636:6:28"},{"kind":"number","nativeSrc":"3644:1:28","nodeType":"YulLiteral","src":"3644:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3632:3:28","nodeType":"YulIdentifier","src":"3632:3:28"},"nativeSrc":"3632:14:28","nodeType":"YulFunctionCall","src":"3632:14:28"},"variableNames":[{"name":"dstPtr","nativeSrc":"3622:6:28","nodeType":"YulIdentifier","src":"3622:6:28"}]},{"nativeSrc":"3663:40:28","nodeType":"YulAssignment","src":"3663:40:28","value":{"arguments":[{"name":"srcOffset","nativeSrc":"3680:9:28","nodeType":"YulIdentifier","src":"3680:9:28"},{"name":"srcOffset_1","nativeSrc":"3691:11:28","nodeType":"YulIdentifier","src":"3691:11:28"}],"functionName":{"name":"add","nativeSrc":"3676:3:28","nodeType":"YulIdentifier","src":"3676:3:28"},"nativeSrc":"3676:27:28","nodeType":"YulFunctionCall","src":"3676:27:28"},"variableNames":[{"name":"srcOffset","nativeSrc":"3663:9:28","nodeType":"YulIdentifier","src":"3663:9:28"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3492:1:28","nodeType":"YulIdentifier","src":"3492:1:28"},{"name":"loopEnd","nativeSrc":"3495:7:28","nodeType":"YulIdentifier","src":"3495:7:28"}],"functionName":{"name":"lt","nativeSrc":"3489:2:28","nodeType":"YulIdentifier","src":"3489:2:28"},"nativeSrc":"3489:14:28","nodeType":"YulFunctionCall","src":"3489:14:28"},"nativeSrc":"3481:236:28","nodeType":"YulForLoop","post":{"nativeSrc":"3504:28:28","nodeType":"YulBlock","src":"3504:28:28","statements":[{"nativeSrc":"3506:24:28","nodeType":"YulAssignment","src":"3506:24:28","value":{"arguments":[{"name":"i","nativeSrc":"3515:1:28","nodeType":"YulIdentifier","src":"3515:1:28"},{"name":"srcOffset_1","nativeSrc":"3518:11:28","nodeType":"YulIdentifier","src":"3518:11:28"}],"functionName":{"name":"add","nativeSrc":"3511:3:28","nodeType":"YulIdentifier","src":"3511:3:28"},"nativeSrc":"3511:19:28","nodeType":"YulFunctionCall","src":"3511:19:28"},"variableNames":[{"name":"i","nativeSrc":"3506:1:28","nodeType":"YulIdentifier","src":"3506:1:28"}]}]},"pre":{"nativeSrc":"3485:3:28","nodeType":"YulBlock","src":"3485:3:28","statements":[]},"src":"3481:236:28"},{"body":{"nativeSrc":"3765:166:28","nodeType":"YulBlock","src":"3765:166:28","statements":[{"nativeSrc":"3783:43:28","nodeType":"YulVariableDeclaration","src":"3783:43:28","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3810:3:28","nodeType":"YulIdentifier","src":"3810:3:28"},{"name":"srcOffset","nativeSrc":"3815:9:28","nodeType":"YulIdentifier","src":"3815:9:28"}],"functionName":{"name":"add","nativeSrc":"3806:3:28","nodeType":"YulIdentifier","src":"3806:3:28"},"nativeSrc":"3806:19:28","nodeType":"YulFunctionCall","src":"3806:19:28"}],"functionName":{"name":"mload","nativeSrc":"3800:5:28","nodeType":"YulIdentifier","src":"3800:5:28"},"nativeSrc":"3800:26:28","nodeType":"YulFunctionCall","src":"3800:26:28"},"variables":[{"name":"lastValue","nativeSrc":"3787:9:28","nodeType":"YulTypedName","src":"3787:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3850:6:28","nodeType":"YulIdentifier","src":"3850:6:28"},{"arguments":[{"name":"lastValue","nativeSrc":"3862:9:28","nodeType":"YulIdentifier","src":"3862:9:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3889:1:28","nodeType":"YulLiteral","src":"3889:1:28","type":"","value":"3"},{"name":"newLen","nativeSrc":"3892:6:28","nodeType":"YulIdentifier","src":"3892:6:28"}],"functionName":{"name":"shl","nativeSrc":"3885:3:28","nodeType":"YulIdentifier","src":"3885:3:28"},"nativeSrc":"3885:14:28","nodeType":"YulFunctionCall","src":"3885:14:28"},{"kind":"number","nativeSrc":"3901:3:28","nodeType":"YulLiteral","src":"3901:3:28","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"3881:3:28","nodeType":"YulIdentifier","src":"3881:3:28"},"nativeSrc":"3881:24:28","nodeType":"YulFunctionCall","src":"3881:24:28"},{"arguments":[{"kind":"number","nativeSrc":"3911:1:28","nodeType":"YulLiteral","src":"3911:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3907:3:28","nodeType":"YulIdentifier","src":"3907:3:28"},"nativeSrc":"3907:6:28","nodeType":"YulFunctionCall","src":"3907:6:28"}],"functionName":{"name":"shr","nativeSrc":"3877:3:28","nodeType":"YulIdentifier","src":"3877:3:28"},"nativeSrc":"3877:37:28","nodeType":"YulFunctionCall","src":"3877:37:28"}],"functionName":{"name":"not","nativeSrc":"3873:3:28","nodeType":"YulIdentifier","src":"3873:3:28"},"nativeSrc":"3873:42:28","nodeType":"YulFunctionCall","src":"3873:42:28"}],"functionName":{"name":"and","nativeSrc":"3858:3:28","nodeType":"YulIdentifier","src":"3858:3:28"},"nativeSrc":"3858:58:28","nodeType":"YulFunctionCall","src":"3858:58:28"}],"functionName":{"name":"sstore","nativeSrc":"3843:6:28","nodeType":"YulIdentifier","src":"3843:6:28"},"nativeSrc":"3843:74:28","nodeType":"YulFunctionCall","src":"3843:74:28"},"nativeSrc":"3843:74:28","nodeType":"YulExpressionStatement","src":"3843:74:28"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"3736:7:28","nodeType":"YulIdentifier","src":"3736:7:28"},{"name":"newLen","nativeSrc":"3745:6:28","nodeType":"YulIdentifier","src":"3745:6:28"}],"functionName":{"name":"lt","nativeSrc":"3733:2:28","nodeType":"YulIdentifier","src":"3733:2:28"},"nativeSrc":"3733:19:28","nodeType":"YulFunctionCall","src":"3733:19:28"},"nativeSrc":"3730:201:28","nodeType":"YulIf","src":"3730:201:28"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3951:4:28","nodeType":"YulIdentifier","src":"3951:4:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3965:1:28","nodeType":"YulLiteral","src":"3965:1:28","type":"","value":"1"},{"name":"newLen","nativeSrc":"3968:6:28","nodeType":"YulIdentifier","src":"3968:6:28"}],"functionName":{"name":"shl","nativeSrc":"3961:3:28","nodeType":"YulIdentifier","src":"3961:3:28"},"nativeSrc":"3961:14:28","nodeType":"YulFunctionCall","src":"3961:14:28"},{"kind":"number","nativeSrc":"3977:1:28","nodeType":"YulLiteral","src":"3977:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3957:3:28","nodeType":"YulIdentifier","src":"3957:3:28"},"nativeSrc":"3957:22:28","nodeType":"YulFunctionCall","src":"3957:22:28"}],"functionName":{"name":"sstore","nativeSrc":"3944:6:28","nodeType":"YulIdentifier","src":"3944:6:28"},"nativeSrc":"3944:36:28","nodeType":"YulFunctionCall","src":"3944:36:28"},"nativeSrc":"3944:36:28","nodeType":"YulExpressionStatement","src":"3944:36:28"}]},"nativeSrc":"3327:663:28","nodeType":"YulCase","src":"3327:663:28","value":{"kind":"number","nativeSrc":"3332:1:28","nodeType":"YulLiteral","src":"3332:1:28","type":"","value":"1"}},{"body":{"nativeSrc":"4007:234:28","nodeType":"YulBlock","src":"4007:234:28","statements":[{"nativeSrc":"4021:14:28","nodeType":"YulVariableDeclaration","src":"4021:14:28","value":{"kind":"number","nativeSrc":"4034:1:28","nodeType":"YulLiteral","src":"4034:1:28","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"4025:5:28","nodeType":"YulTypedName","src":"4025:5:28","type":""}]},{"body":{"nativeSrc":"4070:67:28","nodeType":"YulBlock","src":"4070:67:28","statements":[{"nativeSrc":"4088:35:28","nodeType":"YulAssignment","src":"4088:35:28","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4107:3:28","nodeType":"YulIdentifier","src":"4107:3:28"},{"name":"srcOffset","nativeSrc":"4112:9:28","nodeType":"YulIdentifier","src":"4112:9:28"}],"functionName":{"name":"add","nativeSrc":"4103:3:28","nodeType":"YulIdentifier","src":"4103:3:28"},"nativeSrc":"4103:19:28","nodeType":"YulFunctionCall","src":"4103:19:28"}],"functionName":{"name":"mload","nativeSrc":"4097:5:28","nodeType":"YulIdentifier","src":"4097:5:28"},"nativeSrc":"4097:26:28","nodeType":"YulFunctionCall","src":"4097:26:28"},"variableNames":[{"name":"value","nativeSrc":"4088:5:28","nodeType":"YulIdentifier","src":"4088:5:28"}]}]},"condition":{"name":"newLen","nativeSrc":"4051:6:28","nodeType":"YulIdentifier","src":"4051:6:28"},"nativeSrc":"4048:89:28","nodeType":"YulIf","src":"4048:89:28"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4157:4:28","nodeType":"YulIdentifier","src":"4157:4:28"},{"arguments":[{"name":"value","nativeSrc":"4216:5:28","nodeType":"YulIdentifier","src":"4216:5:28"},{"name":"newLen","nativeSrc":"4223:6:28","nodeType":"YulIdentifier","src":"4223:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4163:52:28","nodeType":"YulIdentifier","src":"4163:52:28"},"nativeSrc":"4163:67:28","nodeType":"YulFunctionCall","src":"4163:67:28"}],"functionName":{"name":"sstore","nativeSrc":"4150:6:28","nodeType":"YulIdentifier","src":"4150:6:28"},"nativeSrc":"4150:81:28","nodeType":"YulFunctionCall","src":"4150:81:28"},"nativeSrc":"4150:81:28","nodeType":"YulExpressionStatement","src":"4150:81:28"}]},"nativeSrc":"3999:242:28","nodeType":"YulCase","src":"3999:242:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"3307:6:28","nodeType":"YulIdentifier","src":"3307:6:28"},{"kind":"number","nativeSrc":"3315:2:28","nodeType":"YulLiteral","src":"3315:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3304:2:28","nodeType":"YulIdentifier","src":"3304:2:28"},"nativeSrc":"3304:14:28","nodeType":"YulFunctionCall","src":"3304:14:28"},"nativeSrc":"3297:944:28","nodeType":"YulSwitch","src":"3297:944:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"2902:1345:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2983:4:28","nodeType":"YulTypedName","src":"2983:4:28","type":""},{"name":"src","nativeSrc":"2989:3:28","nodeType":"YulTypedName","src":"2989:3:28","type":""}],"src":"2902:1345:28"},{"body":{"nativeSrc":"4353:102:28","nodeType":"YulBlock","src":"4353:102:28","statements":[{"nativeSrc":"4363:26:28","nodeType":"YulAssignment","src":"4363:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4375:9:28","nodeType":"YulIdentifier","src":"4375:9:28"},{"kind":"number","nativeSrc":"4386:2:28","nodeType":"YulLiteral","src":"4386:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4371:3:28","nodeType":"YulIdentifier","src":"4371:3:28"},"nativeSrc":"4371:18:28","nodeType":"YulFunctionCall","src":"4371:18:28"},"variableNames":[{"name":"tail","nativeSrc":"4363:4:28","nodeType":"YulIdentifier","src":"4363:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4405:9:28","nodeType":"YulIdentifier","src":"4405:9:28"},{"arguments":[{"name":"value0","nativeSrc":"4420:6:28","nodeType":"YulIdentifier","src":"4420:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4436:3:28","nodeType":"YulLiteral","src":"4436:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"4441:1:28","nodeType":"YulLiteral","src":"4441:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4432:3:28","nodeType":"YulIdentifier","src":"4432:3:28"},"nativeSrc":"4432:11:28","nodeType":"YulFunctionCall","src":"4432:11:28"},{"kind":"number","nativeSrc":"4445:1:28","nodeType":"YulLiteral","src":"4445:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4428:3:28","nodeType":"YulIdentifier","src":"4428:3:28"},"nativeSrc":"4428:19:28","nodeType":"YulFunctionCall","src":"4428:19:28"}],"functionName":{"name":"and","nativeSrc":"4416:3:28","nodeType":"YulIdentifier","src":"4416:3:28"},"nativeSrc":"4416:32:28","nodeType":"YulFunctionCall","src":"4416:32:28"}],"functionName":{"name":"mstore","nativeSrc":"4398:6:28","nodeType":"YulIdentifier","src":"4398:6:28"},"nativeSrc":"4398:51:28","nodeType":"YulFunctionCall","src":"4398:51:28"},"nativeSrc":"4398:51:28","nodeType":"YulExpressionStatement","src":"4398:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4252:203:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4322:9:28","nodeType":"YulTypedName","src":"4322:9:28","type":""},{"name":"value0","nativeSrc":"4333:6:28","nodeType":"YulTypedName","src":"4333:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4344:4:28","nodeType":"YulTypedName","src":"4344:4:28","type":""}],"src":"4252:203:28"},{"body":{"nativeSrc":"4673:276:28","nodeType":"YulBlock","src":"4673:276:28","statements":[{"nativeSrc":"4683:27:28","nodeType":"YulAssignment","src":"4683:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4695:9:28","nodeType":"YulIdentifier","src":"4695:9:28"},{"kind":"number","nativeSrc":"4706:3:28","nodeType":"YulLiteral","src":"4706:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4691:3:28","nodeType":"YulIdentifier","src":"4691:3:28"},"nativeSrc":"4691:19:28","nodeType":"YulFunctionCall","src":"4691:19:28"},"variableNames":[{"name":"tail","nativeSrc":"4683:4:28","nodeType":"YulIdentifier","src":"4683:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4726:9:28","nodeType":"YulIdentifier","src":"4726:9:28"},{"name":"value0","nativeSrc":"4737:6:28","nodeType":"YulIdentifier","src":"4737:6:28"}],"functionName":{"name":"mstore","nativeSrc":"4719:6:28","nodeType":"YulIdentifier","src":"4719:6:28"},"nativeSrc":"4719:25:28","nodeType":"YulFunctionCall","src":"4719:25:28"},"nativeSrc":"4719:25:28","nodeType":"YulExpressionStatement","src":"4719:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4764:9:28","nodeType":"YulIdentifier","src":"4764:9:28"},{"kind":"number","nativeSrc":"4775:2:28","nodeType":"YulLiteral","src":"4775:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4760:3:28","nodeType":"YulIdentifier","src":"4760:3:28"},"nativeSrc":"4760:18:28","nodeType":"YulFunctionCall","src":"4760:18:28"},{"name":"value1","nativeSrc":"4780:6:28","nodeType":"YulIdentifier","src":"4780:6:28"}],"functionName":{"name":"mstore","nativeSrc":"4753:6:28","nodeType":"YulIdentifier","src":"4753:6:28"},"nativeSrc":"4753:34:28","nodeType":"YulFunctionCall","src":"4753:34:28"},"nativeSrc":"4753:34:28","nodeType":"YulExpressionStatement","src":"4753:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4807:9:28","nodeType":"YulIdentifier","src":"4807:9:28"},{"kind":"number","nativeSrc":"4818:2:28","nodeType":"YulLiteral","src":"4818:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4803:3:28","nodeType":"YulIdentifier","src":"4803:3:28"},"nativeSrc":"4803:18:28","nodeType":"YulFunctionCall","src":"4803:18:28"},{"name":"value2","nativeSrc":"4823:6:28","nodeType":"YulIdentifier","src":"4823:6:28"}],"functionName":{"name":"mstore","nativeSrc":"4796:6:28","nodeType":"YulIdentifier","src":"4796:6:28"},"nativeSrc":"4796:34:28","nodeType":"YulFunctionCall","src":"4796:34:28"},"nativeSrc":"4796:34:28","nodeType":"YulExpressionStatement","src":"4796:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4850:9:28","nodeType":"YulIdentifier","src":"4850:9:28"},{"kind":"number","nativeSrc":"4861:2:28","nodeType":"YulLiteral","src":"4861:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4846:3:28","nodeType":"YulIdentifier","src":"4846:3:28"},"nativeSrc":"4846:18:28","nodeType":"YulFunctionCall","src":"4846:18:28"},{"name":"value3","nativeSrc":"4866:6:28","nodeType":"YulIdentifier","src":"4866:6:28"}],"functionName":{"name":"mstore","nativeSrc":"4839:6:28","nodeType":"YulIdentifier","src":"4839:6:28"},"nativeSrc":"4839:34:28","nodeType":"YulFunctionCall","src":"4839:34:28"},"nativeSrc":"4839:34:28","nodeType":"YulExpressionStatement","src":"4839:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4893:9:28","nodeType":"YulIdentifier","src":"4893:9:28"},{"kind":"number","nativeSrc":"4904:3:28","nodeType":"YulLiteral","src":"4904:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4889:3:28","nodeType":"YulIdentifier","src":"4889:3:28"},"nativeSrc":"4889:19:28","nodeType":"YulFunctionCall","src":"4889:19:28"},{"arguments":[{"name":"value4","nativeSrc":"4914:6:28","nodeType":"YulIdentifier","src":"4914:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4930:3:28","nodeType":"YulLiteral","src":"4930:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"4935:1:28","nodeType":"YulLiteral","src":"4935:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4926:3:28","nodeType":"YulIdentifier","src":"4926:3:28"},"nativeSrc":"4926:11:28","nodeType":"YulFunctionCall","src":"4926:11:28"},{"kind":"number","nativeSrc":"4939:1:28","nodeType":"YulLiteral","src":"4939:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4922:3:28","nodeType":"YulIdentifier","src":"4922:3:28"},"nativeSrc":"4922:19:28","nodeType":"YulFunctionCall","src":"4922:19:28"}],"functionName":{"name":"and","nativeSrc":"4910:3:28","nodeType":"YulIdentifier","src":"4910:3:28"},"nativeSrc":"4910:32:28","nodeType":"YulFunctionCall","src":"4910:32:28"}],"functionName":{"name":"mstore","nativeSrc":"4882:6:28","nodeType":"YulIdentifier","src":"4882:6:28"},"nativeSrc":"4882:61:28","nodeType":"YulFunctionCall","src":"4882:61:28"},"nativeSrc":"4882:61:28","nodeType":"YulExpressionStatement","src":"4882:61:28"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"4460:489:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4610:9:28","nodeType":"YulTypedName","src":"4610:9:28","type":""},{"name":"value4","nativeSrc":"4621:6:28","nodeType":"YulTypedName","src":"4621:6:28","type":""},{"name":"value3","nativeSrc":"4629:6:28","nodeType":"YulTypedName","src":"4629:6:28","type":""},{"name":"value2","nativeSrc":"4637:6:28","nodeType":"YulTypedName","src":"4637:6:28","type":""},{"name":"value1","nativeSrc":"4645:6:28","nodeType":"YulTypedName","src":"4645:6:28","type":""},{"name":"value0","nativeSrc":"4653:6:28","nodeType":"YulTypedName","src":"4653:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4664:4:28","nodeType":"YulTypedName","src":"4664:4:28","type":""}],"src":"4460:489:28"},{"body":{"nativeSrc":"5075:275:28","nodeType":"YulBlock","src":"5075:275:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5092:9:28","nodeType":"YulIdentifier","src":"5092:9:28"},{"kind":"number","nativeSrc":"5103:2:28","nodeType":"YulLiteral","src":"5103:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5085:6:28","nodeType":"YulIdentifier","src":"5085:6:28"},"nativeSrc":"5085:21:28","nodeType":"YulFunctionCall","src":"5085:21:28"},"nativeSrc":"5085:21:28","nodeType":"YulExpressionStatement","src":"5085:21:28"},{"nativeSrc":"5115:27:28","nodeType":"YulVariableDeclaration","src":"5115:27:28","value":{"arguments":[{"name":"value0","nativeSrc":"5135:6:28","nodeType":"YulIdentifier","src":"5135:6:28"}],"functionName":{"name":"mload","nativeSrc":"5129:5:28","nodeType":"YulIdentifier","src":"5129:5:28"},"nativeSrc":"5129:13:28","nodeType":"YulFunctionCall","src":"5129:13:28"},"variables":[{"name":"length","nativeSrc":"5119:6:28","nodeType":"YulTypedName","src":"5119:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5162:9:28","nodeType":"YulIdentifier","src":"5162:9:28"},{"kind":"number","nativeSrc":"5173:2:28","nodeType":"YulLiteral","src":"5173:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5158:3:28","nodeType":"YulIdentifier","src":"5158:3:28"},"nativeSrc":"5158:18:28","nodeType":"YulFunctionCall","src":"5158:18:28"},{"name":"length","nativeSrc":"5178:6:28","nodeType":"YulIdentifier","src":"5178:6:28"}],"functionName":{"name":"mstore","nativeSrc":"5151:6:28","nodeType":"YulIdentifier","src":"5151:6:28"},"nativeSrc":"5151:34:28","nodeType":"YulFunctionCall","src":"5151:34:28"},"nativeSrc":"5151:34:28","nodeType":"YulExpressionStatement","src":"5151:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5233:6:28","nodeType":"YulIdentifier","src":"5233:6:28"},{"kind":"number","nativeSrc":"5241:2:28","nodeType":"YulLiteral","src":"5241:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5229:3:28","nodeType":"YulIdentifier","src":"5229:3:28"},"nativeSrc":"5229:15:28","nodeType":"YulFunctionCall","src":"5229:15:28"},{"arguments":[{"name":"headStart","nativeSrc":"5250:9:28","nodeType":"YulIdentifier","src":"5250:9:28"},{"kind":"number","nativeSrc":"5261:2:28","nodeType":"YulLiteral","src":"5261:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5246:3:28","nodeType":"YulIdentifier","src":"5246:3:28"},"nativeSrc":"5246:18:28","nodeType":"YulFunctionCall","src":"5246:18:28"},{"name":"length","nativeSrc":"5266:6:28","nodeType":"YulIdentifier","src":"5266:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"5194:34:28","nodeType":"YulIdentifier","src":"5194:34:28"},"nativeSrc":"5194:79:28","nodeType":"YulFunctionCall","src":"5194:79:28"},"nativeSrc":"5194:79:28","nodeType":"YulExpressionStatement","src":"5194:79:28"},{"nativeSrc":"5282:62:28","nodeType":"YulAssignment","src":"5282:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5298:9:28","nodeType":"YulIdentifier","src":"5298:9:28"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"5317:6:28","nodeType":"YulIdentifier","src":"5317:6:28"},{"kind":"number","nativeSrc":"5325:2:28","nodeType":"YulLiteral","src":"5325:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5313:3:28","nodeType":"YulIdentifier","src":"5313:3:28"},"nativeSrc":"5313:15:28","nodeType":"YulFunctionCall","src":"5313:15:28"},{"arguments":[{"kind":"number","nativeSrc":"5334:2:28","nodeType":"YulLiteral","src":"5334:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5330:3:28","nodeType":"YulIdentifier","src":"5330:3:28"},"nativeSrc":"5330:7:28","nodeType":"YulFunctionCall","src":"5330:7:28"}],"functionName":{"name":"and","nativeSrc":"5309:3:28","nodeType":"YulIdentifier","src":"5309:3:28"},"nativeSrc":"5309:29:28","nodeType":"YulFunctionCall","src":"5309:29:28"}],"functionName":{"name":"add","nativeSrc":"5294:3:28","nodeType":"YulIdentifier","src":"5294:3:28"},"nativeSrc":"5294:45:28","nodeType":"YulFunctionCall","src":"5294:45:28"},{"kind":"number","nativeSrc":"5341:2:28","nodeType":"YulLiteral","src":"5341:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5290:3:28","nodeType":"YulIdentifier","src":"5290:3:28"},"nativeSrc":"5290:54:28","nodeType":"YulFunctionCall","src":"5290:54:28"},"variableNames":[{"name":"tail","nativeSrc":"5282:4:28","nodeType":"YulIdentifier","src":"5282:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4954:396:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5044:9:28","nodeType":"YulTypedName","src":"5044:9:28","type":""},{"name":"value0","nativeSrc":"5055:6:28","nodeType":"YulTypedName","src":"5055:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5066:4:28","nodeType":"YulTypedName","src":"5066:4:28","type":""}],"src":"4954:396:28"},{"body":{"nativeSrc":"5449:203:28","nodeType":"YulBlock","src":"5449:203:28","statements":[{"nativeSrc":"5459:26:28","nodeType":"YulVariableDeclaration","src":"5459:26:28","value":{"arguments":[{"name":"array","nativeSrc":"5479:5:28","nodeType":"YulIdentifier","src":"5479:5:28"}],"functionName":{"name":"mload","nativeSrc":"5473:5:28","nodeType":"YulIdentifier","src":"5473:5:28"},"nativeSrc":"5473:12:28","nodeType":"YulFunctionCall","src":"5473:12:28"},"variables":[{"name":"length","nativeSrc":"5463:6:28","nodeType":"YulTypedName","src":"5463:6:28","type":""}]},{"nativeSrc":"5494:32:28","nodeType":"YulAssignment","src":"5494:32:28","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"5513:5:28","nodeType":"YulIdentifier","src":"5513:5:28"},{"kind":"number","nativeSrc":"5520:4:28","nodeType":"YulLiteral","src":"5520:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5509:3:28","nodeType":"YulIdentifier","src":"5509:3:28"},"nativeSrc":"5509:16:28","nodeType":"YulFunctionCall","src":"5509:16:28"}],"functionName":{"name":"mload","nativeSrc":"5503:5:28","nodeType":"YulIdentifier","src":"5503:5:28"},"nativeSrc":"5503:23:28","nodeType":"YulFunctionCall","src":"5503:23:28"},"variableNames":[{"name":"value","nativeSrc":"5494:5:28","nodeType":"YulIdentifier","src":"5494:5:28"}]},{"body":{"nativeSrc":"5563:83:28","nodeType":"YulBlock","src":"5563:83:28","statements":[{"nativeSrc":"5577:59:28","nodeType":"YulAssignment","src":"5577:59:28","value":{"arguments":[{"name":"value","nativeSrc":"5590:5:28","nodeType":"YulIdentifier","src":"5590:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5605:1:28","nodeType":"YulLiteral","src":"5605:1:28","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"5612:4:28","nodeType":"YulLiteral","src":"5612:4:28","type":"","value":"0x20"},{"name":"length","nativeSrc":"5618:6:28","nodeType":"YulIdentifier","src":"5618:6:28"}],"functionName":{"name":"sub","nativeSrc":"5608:3:28","nodeType":"YulIdentifier","src":"5608:3:28"},"nativeSrc":"5608:17:28","nodeType":"YulFunctionCall","src":"5608:17:28"}],"functionName":{"name":"shl","nativeSrc":"5601:3:28","nodeType":"YulIdentifier","src":"5601:3:28"},"nativeSrc":"5601:25:28","nodeType":"YulFunctionCall","src":"5601:25:28"},{"arguments":[{"kind":"number","nativeSrc":"5632:1:28","nodeType":"YulLiteral","src":"5632:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5628:3:28","nodeType":"YulIdentifier","src":"5628:3:28"},"nativeSrc":"5628:6:28","nodeType":"YulFunctionCall","src":"5628:6:28"}],"functionName":{"name":"shl","nativeSrc":"5597:3:28","nodeType":"YulIdentifier","src":"5597:3:28"},"nativeSrc":"5597:38:28","nodeType":"YulFunctionCall","src":"5597:38:28"}],"functionName":{"name":"and","nativeSrc":"5586:3:28","nodeType":"YulIdentifier","src":"5586:3:28"},"nativeSrc":"5586:50:28","nodeType":"YulFunctionCall","src":"5586:50:28"},"variableNames":[{"name":"value","nativeSrc":"5577:5:28","nodeType":"YulIdentifier","src":"5577:5:28"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5541:6:28","nodeType":"YulIdentifier","src":"5541:6:28"},{"kind":"number","nativeSrc":"5549:4:28","nodeType":"YulLiteral","src":"5549:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"5538:2:28","nodeType":"YulIdentifier","src":"5538:2:28"},"nativeSrc":"5538:16:28","nodeType":"YulFunctionCall","src":"5538:16:28"},"nativeSrc":"5535:111:28","nodeType":"YulIf","src":"5535:111:28"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"5355:297:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"5429:5:28","nodeType":"YulTypedName","src":"5429:5:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5439:5:28","nodeType":"YulTypedName","src":"5439:5:28","type":""}],"src":"5355:297:28"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b506040516200161c3803806200161c83398101604081905262000035916200030a565b6040805180820190915260018152603160f81b602082015282908190338285600362000062838262000405565b50600462000071828262000405565b5050506001600160a01b038116620000a457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000af816200016f565b50620000bd826006620001c1565b61012052620000ce816007620001c1565b61014052815160208084019190912060e052815190820120610100524660a0526200015c60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200052b915050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602083511015620001e157620001d983620001fa565b9050620001f4565b81620001ee848262000405565b5060ff90505b92915050565b600080829050601f8151111562000228578260405163305a27a960e01b81526004016200009b9190620004d1565b8051620002358262000506565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200027057818101518382015260200162000256565b50506000910152565b600082601f8301126200028b57600080fd5b81516001600160401b0380821115620002a857620002a86200023d565b604051601f8301601f19908116603f01168101908282118183101715620002d357620002d36200023d565b81604052838152866020858801011115620002ed57600080fd5b6200030084602083016020890162000253565b9695505050505050565b600080604083850312156200031e57600080fd5b82516001600160401b03808211156200033657600080fd5b620003448683870162000279565b935060208501519150808211156200035b57600080fd5b506200036a8582860162000279565b9150509250929050565b600181811c908216806200038957607f821691505b602082108103620003aa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000400576000816000526020600020601f850160051c81016020861015620003db5750805b601f850160051c820191505b81811015620003fc57828155600101620003e7565b5050505b505050565b81516001600160401b038111156200042157620004216200023d565b620004398162000432845462000374565b84620003b0565b602080601f831160018114620004715760008415620004585750858301515b600019600386901b1c1916600185901b178555620003fc565b600085815260208120601f198616915b82811015620004a25788860151825594840194600190910190840162000481565b5085821015620004c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620004f281604085016020870162000253565b601f01601f19169190910160400192915050565b80516020808301519190811015620003aa5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516110966200058660003960006108990152600061086c0152600061075f0152600061073701526000610692015260006106bc015260006106e601526110966000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a257806395d89b411161007157806395d89b411461021c578063a9059cbb14610224578063d505accf14610237578063dd62ed3e1461024a578063f2fde38b1461028357600080fd5b8063715018a6146101cb5780637ecebe00146101d357806384b0196e146101e65780638da5cb5b1461020157600080fd5b8063313ce567116100de578063313ce567146101765780633644e5151461018557806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610296565b6040516101259190610df9565b60405180910390f35b61014161013c366004610e2f565b610328565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610e59565b610342565b60405160128152602001610125565b610155610366565b6101a061019b366004610e2f565b610375565b005b6101556101b0366004610e95565b6001600160a01b031660009081526020819052604090205490565b6101a0610383565b6101556101e1366004610e95565b610397565b6101ee6103b5565b6040516101259796959493929190610eb0565b6005546040516001600160a01b039091168152602001610125565b6101186103fb565b610141610232366004610e2f565b61040a565b6101a0610245366004610f49565b610418565b610155610258366004610fbc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101a0610291366004610e95565b610557565b6060600380546102a590610fef565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190610fef565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050905090565b600033610336818585610595565b60019150505b92915050565b6000336103508582856105a7565b61035b858585610626565b506001949350505050565b6000610370610685565b905090565b61037f82826107b0565b5050565b61038b6107e6565b6103956000610813565b565b6001600160a01b03811660009081526008602052604081205461033c565b6000606080600080600060606103c9610865565b6103d1610892565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102a590610fef565b600033610336818585610626565b834211156104415760405163313c898160e11b8152600481018590526024015b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861048e8c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006104e9826108bf565b905060006104f9828787876108ec565b9050896001600160a01b0316816001600160a01b031614610540576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610438565b61054b8a8a8a610595565b50505050505050505050565b61055f6107e6565b6001600160a01b03811661058957604051631e4fbdf760e01b815260006004820152602401610438565b61059281610813565b50565b6105a2838383600161091a565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610620578181101561061157604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610438565b6106208484848403600061091a565b50505050565b6001600160a01b03831661065057604051634b637e8f60e11b815260006004820152602401610438565b6001600160a01b03821661067a5760405163ec442f0560e01b815260006004820152602401610438565b6105a28383836109ef565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156106de57507f000000000000000000000000000000000000000000000000000000000000000046145b1561070857507f000000000000000000000000000000000000000000000000000000000000000090565b610370604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b0382166107da5760405163ec442f0560e01b815260006004820152602401610438565b61037f600083836109ef565b6005546001600160a01b031633146103955760405163118cdaa760e01b8152336004820152602401610438565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606103707f00000000000000000000000000000000000000000000000000000000000000006006610b19565b60606103707f00000000000000000000000000000000000000000000000000000000000000006007610b19565b600061033c6108cc610685565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806108fe88888888610bc4565b92509250925061090e8282610c93565b50909695505050505050565b6001600160a01b0384166109445760405163e602df0560e01b815260006004820152602401610438565b6001600160a01b03831661096e57604051634a1406b160e11b815260006004820152602401610438565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561062057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109e191815260200190565b60405180910390a350505050565b6001600160a01b038316610a1a578060026000828254610a0f9190611029565b90915550610a8c9050565b6001600160a01b03831660009081526020819052604090205481811015610a6d5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610438565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610aa857600280548290039055610ac7565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b0c91815260200190565b60405180910390a3505050565b606060ff8314610b3357610b2c83610d4c565b905061033c565b818054610b3f90610fef565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6b90610fef565b8015610bb85780601f10610b8d57610100808354040283529160200191610bb8565b820191906000526020600020905b815481529060010190602001808311610b9b57829003601f168201915b5050505050905061033c565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610bff5750600091506003905082610c89565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610c53573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c7f57506000925060019150829050610c89565b9250600091508190505b9450945094915050565b6000826003811115610ca757610ca761104a565b03610cb0575050565b6001826003811115610cc457610cc461104a565b03610ce25760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610cf657610cf661104a565b03610d175760405163fce698f760e01b815260048101829052602401610438565b6003826003811115610d2b57610d2b61104a565b0361037f576040516335e2f38360e21b815260048101829052602401610438565b60606000610d5983610d8b565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561033c57604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015610dd957602081850181015186830182015201610dbd565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e0c6020830184610db3565b9392505050565b80356001600160a01b0381168114610e2a57600080fd5b919050565b60008060408385031215610e4257600080fd5b610e4b83610e13565b946020939093013593505050565b600080600060608486031215610e6e57600080fd5b610e7784610e13565b9250610e8560208501610e13565b9150604084013590509250925092565b600060208284031215610ea757600080fd5b610e0c82610e13565b60ff60f81b881681526000602060e06020840152610ed160e084018a610db3565b8381036040850152610ee3818a610db3565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015610f3757835183529284019291840191600101610f1b565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215610f6457600080fd5b610f6d88610e13565b9650610f7b60208901610e13565b95506040880135945060608801359350608088013560ff81168114610f9f57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610fcf57600080fd5b610fd883610e13565b9150610fe660208401610e13565b90509250929050565b600181811c9082168061100357607f821691505b60208210810361102357634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561033c57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea264697066735822122033ea9e89d0ae8df9635b6baab79e3254b82b4d16cbd8b59d1e16098d1a74559764736f6c63430008180033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x161C CODESIZE SUB DUP1 PUSH3 0x161C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x30A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP1 DUP2 SWAP1 CALLER DUP3 DUP6 PUSH1 0x3 PUSH3 0x62 DUP4 DUP3 PUSH3 0x405 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x71 DUP3 DUP3 PUSH3 0x405 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xAF DUP2 PUSH3 0x16F JUMP JUMPDEST POP PUSH3 0xBD DUP3 PUSH1 0x6 PUSH3 0x1C1 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0xCE DUP2 PUSH1 0x7 PUSH3 0x1C1 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x15C PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH3 0x52B SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x1E1 JUMPI PUSH3 0x1D9 DUP4 PUSH3 0x1FA JUMP JUMPDEST SWAP1 POP PUSH3 0x1F4 JUMP JUMPDEST DUP2 PUSH3 0x1EE DUP5 DUP3 PUSH3 0x405 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x228 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9B SWAP2 SWAP1 PUSH3 0x4D1 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x235 DUP3 PUSH3 0x506 JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x270 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x256 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2A8 JUMPI PUSH3 0x2A8 PUSH3 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2D3 JUMPI PUSH3 0x2D3 PUSH3 0x23D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x300 DUP5 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP10 ADD PUSH3 0x253 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x344 DUP7 DUP4 DUP8 ADD PUSH3 0x279 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x36A DUP6 DUP3 DUP7 ADD PUSH3 0x279 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x389 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x400 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3DB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3FC JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3E7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x421 JUMPI PUSH3 0x421 PUSH3 0x23D JUMP JUMPDEST PUSH3 0x439 DUP2 PUSH3 0x432 DUP5 SLOAD PUSH3 0x374 JUMP JUMPDEST DUP5 PUSH3 0x3B0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x471 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x458 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x3FC JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4A2 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x481 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4C1 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x4F2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x253 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x3AA JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1096 PUSH3 0x586 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x899 ADD MSTORE PUSH1 0x0 PUSH2 0x86C ADD MSTORE PUSH1 0x0 PUSH2 0x75F ADD MSTORE PUSH1 0x0 PUSH2 0x737 ADD MSTORE PUSH1 0x0 PUSH2 0x692 ADD MSTORE PUSH1 0x0 PUSH2 0x6BC ADD MSTORE PUSH1 0x0 PUSH2 0x6E6 ADD MSTORE PUSH2 0x1096 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x383 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x141 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A5 SWAP1 PUSH2 0xFEF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D1 SWAP1 PUSH2 0xFEF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x301 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x336 DUP2 DUP6 DUP6 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x350 DUP6 DUP3 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x35B DUP6 DUP6 DUP6 PUSH2 0x626 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x370 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x37F DUP3 DUP3 PUSH2 0x7B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x38B PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x395 PUSH1 0x0 PUSH2 0x813 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x3C9 PUSH2 0x865 JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A5 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x336 DUP2 DUP6 DUP6 PUSH2 0x626 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x48E DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x4E9 DUP3 PUSH2 0x8BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4F9 DUP3 DUP8 DUP8 DUP8 PUSH2 0x8EC JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x54B DUP11 DUP11 DUP11 PUSH2 0x595 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x55F PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x813 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5A2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x91A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x620 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x620 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x91A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x5A2 DUP4 DUP4 DUP4 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x6DE JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x708 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x370 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x37F PUSH1 0x0 DUP4 DUP4 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x370 PUSH32 0x0 PUSH1 0x6 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x370 PUSH32 0x0 PUSH1 0x7 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C PUSH2 0x8CC PUSH2 0x685 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x8FE DUP9 DUP9 DUP9 DUP9 PUSH2 0xBC4 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x90E DUP3 DUP3 PUSH2 0xC93 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x620 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9E1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA1A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA0F SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA8C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAA8 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB0C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xB33 JUMPI PUSH2 0xB2C DUP4 PUSH2 0xD4C JUMP JUMPDEST SWAP1 POP PUSH2 0x33C JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xB3F SWAP1 PUSH2 0xFEF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6B SWAP1 PUSH2 0xFEF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xBFF JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7F JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xC89 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA7 PUSH2 0x104A JUMP JUMPDEST SUB PUSH2 0xCB0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCC4 JUMPI PUSH2 0xCC4 PUSH2 0x104A JUMP JUMPDEST SUB PUSH2 0xCE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCF6 JUMPI PUSH2 0xCF6 PUSH2 0x104A JUMP JUMPDEST SUB PUSH2 0xD17 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD2B JUMPI PUSH2 0xD2B PUSH2 0x104A JUMP JUMPDEST SUB PUSH2 0x37F JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD59 DUP4 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xDBD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE0C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4B DUP4 PUSH2 0xE13 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE77 DUP5 PUSH2 0xE13 JUMP JUMPDEST SWAP3 POP PUSH2 0xE85 PUSH1 0x20 DUP6 ADD PUSH2 0xE13 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0C DUP3 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xED1 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xDB3 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xEE3 DUP2 DUP11 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF37 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF1B JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF6D DUP9 PUSH2 0xE13 JUMP JUMPDEST SWAP7 POP PUSH2 0xF7B PUSH1 0x20 DUP10 ADD PUSH2 0xE13 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xF9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD8 DUP4 PUSH2 0xE13 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE6 PUSH1 0x20 DUP5 ADD PUSH2 0xE13 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1003 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1023 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x33C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xEA SWAP15 DUP10 0xD0 0xAE DUP14 0xF9 PUSH4 0x5B6BAAB7 SWAP15 ORIGIN SLOAD 0xB8 0x2B 0x4D AND 0xCB 0xD8 0xB5 SWAP14 0x1E AND MULMOD DUP14 BYTE PUSH21 0x559764736F6C634300081800330000000000000000 ","sourceMap":"298:301:25:-:0;;;357:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:19;;;;;;;;;;;;-1:-1:-1;;;3328:431:19;;;;490:4:25;;;;457:10;490:4;432:6;1667:5:6;:13;490:4:25;1667:5:6;:13;:::i;:::-;-1:-1:-1;1690:7:6;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4398:51:28;4371:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3401:45:19;:4;3432:13;3401:30;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;4719:25:28;4760:18;;;4753:34;;;;4803:18;;;4796:34;4255:13:19;4846:18:28;;;4839:34;4278:4:19;4889:19:28;;;4882:61;4168:7:19;;4691:19:28;;4204:80:19;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:19;3725:27;;-1:-1:-1;298:301:25;;-1:-1:-1;;298:301:25;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2887:340:15:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:15;;-1:-1:-1;3006:215:15;2887:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:15;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:15:o;14:127:28:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:28;370:16;;363:27;146:250::o;401:699::-;455:5;508:3;501:4;493:6;489:17;485:27;475:55;;526:1;523;516:12;475:55;549:13;;-1:-1:-1;;;;;611:10:28;;;608:36;;;624:18;;:::i;:::-;699:2;693:9;667:2;753:13;;-1:-1:-1;;749:22:28;;;773:2;745:31;741:40;729:53;;;797:18;;;817:22;;;794:46;791:72;;;843:18;;:::i;:::-;883:10;879:2;872:22;918:2;910:6;903:18;964:3;957:4;952:2;944:6;940:15;936:26;933:35;930:55;;;981:1;978;971:12;930:55;994:76;1067:2;1060:4;1052:6;1048:17;1041:4;1033:6;1029:17;994:76;:::i;:::-;1088:6;401:699;-1:-1:-1;;;;;;401:699:28:o;1105:562::-;1204:6;1212;1265:2;1253:9;1244:7;1240:23;1236:32;1233:52;;;1281:1;1278;1271:12;1233:52;1308:16;;-1:-1:-1;;;;;1373:14:28;;;1370:34;;;1400:1;1397;1390:12;1370:34;1423:61;1476:7;1467:6;1456:9;1452:22;1423:61;:::i;:::-;1413:71;;1530:2;1519:9;1515:18;1509:25;1493:41;;1559:2;1549:8;1546:16;1543:36;;;1575:1;1572;1565:12;1543:36;;1598:63;1653:7;1642:8;1631:9;1627:24;1598:63;:::i;:::-;1588:73;;;1105:562;;;;;:::o;1672:380::-;1751:1;1747:12;;;;1794;;;1815:61;;1869:4;1861:6;1857:17;1847:27;;1815:61;1922:2;1914:6;1911:14;1891:18;1888:38;1885:161;;1968:10;1963:3;1959:20;1956:1;1949:31;2003:4;2000:1;1993:15;2031:4;2028:1;2021:15;1885:161;;1672:380;;;:::o;2183:543::-;2285:2;2280:3;2277:11;2274:446;;;2321:1;2345:5;2342:1;2335:16;2389:4;2386:1;2376:18;2459:2;2447:10;2443:19;2440:1;2436:27;2430:4;2426:38;2495:4;2483:10;2480:20;2477:47;;;-1:-1:-1;2518:4:28;2477:47;2573:2;2568:3;2564:12;2561:1;2557:20;2551:4;2547:31;2537:41;;2628:82;2646:2;2639:5;2636:13;2628:82;;;2691:17;;;2672:1;2661:13;2628:82;;;2632:3;;;2274:446;2183:543;;;:::o;2902:1345::-;3022:10;;-1:-1:-1;;;;;3044:30:28;;3041:56;;;3077:18;;:::i;:::-;3106:97;3196:6;3156:38;3188:4;3182:11;3156:38;:::i;:::-;3150:4;3106:97;:::i;:::-;3258:4;;3315:2;3304:14;;3332:1;3327:663;;;;4034:1;4051:6;4048:89;;;-1:-1:-1;4103:19:28;;;4097:26;4048:89;-1:-1:-1;;2859:1:28;2855:11;;;2851:24;2847:29;2837:40;2883:1;2879:11;;;2834:57;4150:81;;3297:944;;3327:663;2130:1;2123:14;;;2167:4;2154:18;;-1:-1:-1;;3363:20:28;;;3481:236;3495:7;3492:1;3489:14;3481:236;;;3584:19;;;3578:26;3563:42;;3676:27;;;;3644:1;3632:14;;;;3511:19;;3481:236;;;3485:3;3745:6;3736:7;3733:19;3730:201;;;3806:19;;;3800:26;-1:-1:-1;;3889:1:28;3885:14;;;3901:3;3881:24;3877:37;3873:42;3858:58;3843:74;;3730:201;-1:-1:-1;;;;;3977:1:28;3961:14;;;3957:22;3944:36;;-1:-1:-1;2902:1345:28:o;4954:396::-;5103:2;5092:9;5085:21;5066:4;5135:6;5129:13;5178:6;5173:2;5162:9;5158:18;5151:34;5194:79;5266:6;5261:2;5250:9;5246:18;5241:2;5233:6;5229:15;5194:79;:::i;:::-;5334:2;5313:15;-1:-1:-1;;5309:29:28;5294:45;;;;5341:2;5290:54;;4954:396;-1:-1:-1;;4954:396:28:o;5355:297::-;5473:12;;5520:4;5509:16;;;5503:23;;5473:12;5538:16;;5535:111;;;-1:-1:-1;;5612:4:28;5608:17;;;;5605:1;5601:25;5597:38;5586:50;;5355:297;-1:-1:-1;5355:297:28:o;:::-;298:301:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1145":{"entryPoint":870,"id":1145,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3870":{"entryPoint":2149,"id":3870,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3882":{"entryPoint":2194,"id":3882,"parameterSlots":0,"returnSlots":1},"@_approve_805":{"entryPoint":1429,"id":805,"parameterSlots":3,"returnSlots":0},"@_approve_865":{"entryPoint":2330,"id":865,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3800":{"entryPoint":null,"id":3800,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":2022,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3779":{"entryPoint":1669,"id":3779,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3816":{"entryPoint":2239,"id":3816,"parameterSlots":1,"returnSlots":1},"@_mint_754":{"entryPoint":1968,"id":754,"parameterSlots":2,"returnSlots":0},"@_msgSender_1629":{"entryPoint":null,"id":1629,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_913":{"entryPoint":1447,"id":913,"parameterSlots":3,"returnSlots":0},"@_throwError_3655":{"entryPoint":3219,"id":3655,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2067,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_644":{"entryPoint":1574,"id":644,"parameterSlots":3,"returnSlots":0},"@_update_721":{"entryPoint":2543,"id":721,"parameterSlots":3,"returnSlots":0},"@_useNonce_1689":{"entryPoint":null,"id":1689,"parameterSlots":1,"returnSlots":1},"@allowance_541":{"entryPoint":null,"id":541,"parameterSlots":2,"returnSlots":1},"@approve_565":{"entryPoint":808,"id":565,"parameterSlots":2,"returnSlots":1},"@balanceOf_500":{"entryPoint":null,"id":500,"parameterSlots":1,"returnSlots":1},"@byteLength_1885":{"entryPoint":3467,"id":1885,"parameterSlots":1,"returnSlots":1},"@decimals_478":{"entryPoint":null,"id":478,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3858":{"entryPoint":949,"id":3858,"parameterSlots":0,"returnSlots":7},"@mint_7527":{"entryPoint":885,"id":7527,"parameterSlots":2,"returnSlots":0},"@name_460":{"entryPoint":662,"id":460,"parameterSlots":0,"returnSlots":1},"@nonces_1135":{"entryPoint":919,"id":1135,"parameterSlots":1,"returnSlots":1},"@nonces_1674":{"entryPoint":null,"id":1674,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1118":{"entryPoint":1048,"id":1118,"parameterSlots":7,"returnSlots":0},"@recover_3606":{"entryPoint":2284,"id":3606,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":899,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_469":{"entryPoint":1019,"id":469,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1952":{"entryPoint":2841,"id":1952,"parameterSlots":2,"returnSlots":1},"@toString_1853":{"entryPoint":3404,"id":1853,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3956":{"entryPoint":null,"id":3956,"parameterSlots":2,"returnSlots":1},"@totalSupply_487":{"entryPoint":null,"id":487,"parameterSlots":0,"returnSlots":1},"@transferFrom_597":{"entryPoint":834,"id":597,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1367,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_524":{"entryPoint":1034,"id":524,"parameterSlots":2,"returnSlots":1},"@tryRecover_3570":{"entryPoint":3012,"id":3570,"parameterSlots":4,"returnSlots":3},"abi_decode_address":{"entryPoint":3603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4028,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3673,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":3913,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3631,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_string":{"entryPoint":3507,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3760,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3577,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4137,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4079,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":4170,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7833:28","nodeType":"YulBlock","src":"0:7833:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"64:373:28","nodeType":"YulBlock","src":"64:373:28","statements":[{"nativeSrc":"74:26:28","nodeType":"YulVariableDeclaration","src":"74:26:28","value":{"arguments":[{"name":"value","nativeSrc":"94:5:28","nodeType":"YulIdentifier","src":"94:5:28"}],"functionName":{"name":"mload","nativeSrc":"88:5:28","nodeType":"YulIdentifier","src":"88:5:28"},"nativeSrc":"88:12:28","nodeType":"YulFunctionCall","src":"88:12:28"},"variables":[{"name":"length","nativeSrc":"78:6:28","nodeType":"YulTypedName","src":"78:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"116:3:28","nodeType":"YulIdentifier","src":"116:3:28"},{"name":"length","nativeSrc":"121:6:28","nodeType":"YulIdentifier","src":"121:6:28"}],"functionName":{"name":"mstore","nativeSrc":"109:6:28","nodeType":"YulIdentifier","src":"109:6:28"},"nativeSrc":"109:19:28","nodeType":"YulFunctionCall","src":"109:19:28"},"nativeSrc":"109:19:28","nodeType":"YulExpressionStatement","src":"109:19:28"},{"nativeSrc":"137:10:28","nodeType":"YulVariableDeclaration","src":"137:10:28","value":{"kind":"number","nativeSrc":"146:1:28","nodeType":"YulLiteral","src":"146:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"141:1:28","nodeType":"YulTypedName","src":"141:1:28","type":""}]},{"body":{"nativeSrc":"208:110:28","nodeType":"YulBlock","src":"208:110:28","statements":[{"nativeSrc":"222:14:28","nodeType":"YulVariableDeclaration","src":"222:14:28","value":{"kind":"number","nativeSrc":"232:4:28","nodeType":"YulLiteral","src":"232:4:28","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"226:2:28","nodeType":"YulTypedName","src":"226:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"264:3:28","nodeType":"YulIdentifier","src":"264:3:28"},{"name":"i","nativeSrc":"269:1:28","nodeType":"YulIdentifier","src":"269:1:28"}],"functionName":{"name":"add","nativeSrc":"260:3:28","nodeType":"YulIdentifier","src":"260:3:28"},"nativeSrc":"260:11:28","nodeType":"YulFunctionCall","src":"260:11:28"},{"name":"_1","nativeSrc":"273:2:28","nodeType":"YulIdentifier","src":"273:2:28"}],"functionName":{"name":"add","nativeSrc":"256:3:28","nodeType":"YulIdentifier","src":"256:3:28"},"nativeSrc":"256:20:28","nodeType":"YulFunctionCall","src":"256:20:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"292:5:28","nodeType":"YulIdentifier","src":"292:5:28"},{"name":"i","nativeSrc":"299:1:28","nodeType":"YulIdentifier","src":"299:1:28"}],"functionName":{"name":"add","nativeSrc":"288:3:28","nodeType":"YulIdentifier","src":"288:3:28"},"nativeSrc":"288:13:28","nodeType":"YulFunctionCall","src":"288:13:28"},{"name":"_1","nativeSrc":"303:2:28","nodeType":"YulIdentifier","src":"303:2:28"}],"functionName":{"name":"add","nativeSrc":"284:3:28","nodeType":"YulIdentifier","src":"284:3:28"},"nativeSrc":"284:22:28","nodeType":"YulFunctionCall","src":"284:22:28"}],"functionName":{"name":"mload","nativeSrc":"278:5:28","nodeType":"YulIdentifier","src":"278:5:28"},"nativeSrc":"278:29:28","nodeType":"YulFunctionCall","src":"278:29:28"}],"functionName":{"name":"mstore","nativeSrc":"249:6:28","nodeType":"YulIdentifier","src":"249:6:28"},"nativeSrc":"249:59:28","nodeType":"YulFunctionCall","src":"249:59:28"},"nativeSrc":"249:59:28","nodeType":"YulExpressionStatement","src":"249:59:28"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"167:1:28","nodeType":"YulIdentifier","src":"167:1:28"},{"name":"length","nativeSrc":"170:6:28","nodeType":"YulIdentifier","src":"170:6:28"}],"functionName":{"name":"lt","nativeSrc":"164:2:28","nodeType":"YulIdentifier","src":"164:2:28"},"nativeSrc":"164:13:28","nodeType":"YulFunctionCall","src":"164:13:28"},"nativeSrc":"156:162:28","nodeType":"YulForLoop","post":{"nativeSrc":"178:21:28","nodeType":"YulBlock","src":"178:21:28","statements":[{"nativeSrc":"180:17:28","nodeType":"YulAssignment","src":"180:17:28","value":{"arguments":[{"name":"i","nativeSrc":"189:1:28","nodeType":"YulIdentifier","src":"189:1:28"},{"kind":"number","nativeSrc":"192:4:28","nodeType":"YulLiteral","src":"192:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"185:3:28","nodeType":"YulIdentifier","src":"185:3:28"},"nativeSrc":"185:12:28","nodeType":"YulFunctionCall","src":"185:12:28"},"variableNames":[{"name":"i","nativeSrc":"180:1:28","nodeType":"YulIdentifier","src":"180:1:28"}]}]},"pre":{"nativeSrc":"160:3:28","nodeType":"YulBlock","src":"160:3:28","statements":[]},"src":"156:162:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"342:3:28","nodeType":"YulIdentifier","src":"342:3:28"},{"name":"length","nativeSrc":"347:6:28","nodeType":"YulIdentifier","src":"347:6:28"}],"functionName":{"name":"add","nativeSrc":"338:3:28","nodeType":"YulIdentifier","src":"338:3:28"},"nativeSrc":"338:16:28","nodeType":"YulFunctionCall","src":"338:16:28"},{"kind":"number","nativeSrc":"356:4:28","nodeType":"YulLiteral","src":"356:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"334:3:28","nodeType":"YulIdentifier","src":"334:3:28"},"nativeSrc":"334:27:28","nodeType":"YulFunctionCall","src":"334:27:28"},{"kind":"number","nativeSrc":"363:1:28","nodeType":"YulLiteral","src":"363:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"327:6:28","nodeType":"YulIdentifier","src":"327:6:28"},"nativeSrc":"327:38:28","nodeType":"YulFunctionCall","src":"327:38:28"},"nativeSrc":"327:38:28","nodeType":"YulExpressionStatement","src":"327:38:28"},{"nativeSrc":"374:57:28","nodeType":"YulAssignment","src":"374:57:28","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"389:3:28","nodeType":"YulIdentifier","src":"389:3:28"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"402:6:28","nodeType":"YulIdentifier","src":"402:6:28"},{"kind":"number","nativeSrc":"410:2:28","nodeType":"YulLiteral","src":"410:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"398:3:28","nodeType":"YulIdentifier","src":"398:3:28"},"nativeSrc":"398:15:28","nodeType":"YulFunctionCall","src":"398:15:28"},{"arguments":[{"kind":"number","nativeSrc":"419:2:28","nodeType":"YulLiteral","src":"419:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"415:3:28","nodeType":"YulIdentifier","src":"415:3:28"},"nativeSrc":"415:7:28","nodeType":"YulFunctionCall","src":"415:7:28"}],"functionName":{"name":"and","nativeSrc":"394:3:28","nodeType":"YulIdentifier","src":"394:3:28"},"nativeSrc":"394:29:28","nodeType":"YulFunctionCall","src":"394:29:28"}],"functionName":{"name":"add","nativeSrc":"385:3:28","nodeType":"YulIdentifier","src":"385:3:28"},"nativeSrc":"385:39:28","nodeType":"YulFunctionCall","src":"385:39:28"},{"kind":"number","nativeSrc":"426:4:28","nodeType":"YulLiteral","src":"426:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"381:3:28","nodeType":"YulIdentifier","src":"381:3:28"},"nativeSrc":"381:50:28","nodeType":"YulFunctionCall","src":"381:50:28"},"variableNames":[{"name":"end","nativeSrc":"374:3:28","nodeType":"YulIdentifier","src":"374:3:28"}]}]},"name":"abi_encode_string","nativeSrc":"14:423:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"41:5:28","nodeType":"YulTypedName","src":"41:5:28","type":""},{"name":"pos","nativeSrc":"48:3:28","nodeType":"YulTypedName","src":"48:3:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"56:3:28","nodeType":"YulTypedName","src":"56:3:28","type":""}],"src":"14:423:28"},{"body":{"nativeSrc":"563:99:28","nodeType":"YulBlock","src":"563:99:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"580:9:28","nodeType":"YulIdentifier","src":"580:9:28"},{"kind":"number","nativeSrc":"591:2:28","nodeType":"YulLiteral","src":"591:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"573:6:28","nodeType":"YulIdentifier","src":"573:6:28"},"nativeSrc":"573:21:28","nodeType":"YulFunctionCall","src":"573:21:28"},"nativeSrc":"573:21:28","nodeType":"YulExpressionStatement","src":"573:21:28"},{"nativeSrc":"603:53:28","nodeType":"YulAssignment","src":"603:53:28","value":{"arguments":[{"name":"value0","nativeSrc":"629:6:28","nodeType":"YulIdentifier","src":"629:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"641:9:28","nodeType":"YulIdentifier","src":"641:9:28"},{"kind":"number","nativeSrc":"652:2:28","nodeType":"YulLiteral","src":"652:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"637:3:28","nodeType":"YulIdentifier","src":"637:3:28"},"nativeSrc":"637:18:28","nodeType":"YulFunctionCall","src":"637:18:28"}],"functionName":{"name":"abi_encode_string","nativeSrc":"611:17:28","nodeType":"YulIdentifier","src":"611:17:28"},"nativeSrc":"611:45:28","nodeType":"YulFunctionCall","src":"611:45:28"},"variableNames":[{"name":"tail","nativeSrc":"603:4:28","nodeType":"YulIdentifier","src":"603:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"442:220:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"532:9:28","nodeType":"YulTypedName","src":"532:9:28","type":""},{"name":"value0","nativeSrc":"543:6:28","nodeType":"YulTypedName","src":"543:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"554:4:28","nodeType":"YulTypedName","src":"554:4:28","type":""}],"src":"442:220:28"},{"body":{"nativeSrc":"716:124:28","nodeType":"YulBlock","src":"716:124:28","statements":[{"nativeSrc":"726:29:28","nodeType":"YulAssignment","src":"726:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"748:6:28","nodeType":"YulIdentifier","src":"748:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"735:12:28","nodeType":"YulIdentifier","src":"735:12:28"},"nativeSrc":"735:20:28","nodeType":"YulFunctionCall","src":"735:20:28"},"variableNames":[{"name":"value","nativeSrc":"726:5:28","nodeType":"YulIdentifier","src":"726:5:28"}]},{"body":{"nativeSrc":"818:16:28","nodeType":"YulBlock","src":"818:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"827:1:28","nodeType":"YulLiteral","src":"827:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"830:1:28","nodeType":"YulLiteral","src":"830:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"820:6:28","nodeType":"YulIdentifier","src":"820:6:28"},"nativeSrc":"820:12:28","nodeType":"YulFunctionCall","src":"820:12:28"},"nativeSrc":"820:12:28","nodeType":"YulExpressionStatement","src":"820:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"777:5:28","nodeType":"YulIdentifier","src":"777:5:28"},{"arguments":[{"name":"value","nativeSrc":"788:5:28","nodeType":"YulIdentifier","src":"788:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"803:3:28","nodeType":"YulLiteral","src":"803:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"808:1:28","nodeType":"YulLiteral","src":"808:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"799:3:28","nodeType":"YulIdentifier","src":"799:3:28"},"nativeSrc":"799:11:28","nodeType":"YulFunctionCall","src":"799:11:28"},{"kind":"number","nativeSrc":"812:1:28","nodeType":"YulLiteral","src":"812:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"795:3:28","nodeType":"YulIdentifier","src":"795:3:28"},"nativeSrc":"795:19:28","nodeType":"YulFunctionCall","src":"795:19:28"}],"functionName":{"name":"and","nativeSrc":"784:3:28","nodeType":"YulIdentifier","src":"784:3:28"},"nativeSrc":"784:31:28","nodeType":"YulFunctionCall","src":"784:31:28"}],"functionName":{"name":"eq","nativeSrc":"774:2:28","nodeType":"YulIdentifier","src":"774:2:28"},"nativeSrc":"774:42:28","nodeType":"YulFunctionCall","src":"774:42:28"}],"functionName":{"name":"iszero","nativeSrc":"767:6:28","nodeType":"YulIdentifier","src":"767:6:28"},"nativeSrc":"767:50:28","nodeType":"YulFunctionCall","src":"767:50:28"},"nativeSrc":"764:70:28","nodeType":"YulIf","src":"764:70:28"}]},"name":"abi_decode_address","nativeSrc":"667:173:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"695:6:28","nodeType":"YulTypedName","src":"695:6:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"706:5:28","nodeType":"YulTypedName","src":"706:5:28","type":""}],"src":"667:173:28"},{"body":{"nativeSrc":"932:167:28","nodeType":"YulBlock","src":"932:167:28","statements":[{"body":{"nativeSrc":"978:16:28","nodeType":"YulBlock","src":"978:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"987:1:28","nodeType":"YulLiteral","src":"987:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"990:1:28","nodeType":"YulLiteral","src":"990:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"980:6:28","nodeType":"YulIdentifier","src":"980:6:28"},"nativeSrc":"980:12:28","nodeType":"YulFunctionCall","src":"980:12:28"},"nativeSrc":"980:12:28","nodeType":"YulExpressionStatement","src":"980:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"953:7:28","nodeType":"YulIdentifier","src":"953:7:28"},{"name":"headStart","nativeSrc":"962:9:28","nodeType":"YulIdentifier","src":"962:9:28"}],"functionName":{"name":"sub","nativeSrc":"949:3:28","nodeType":"YulIdentifier","src":"949:3:28"},"nativeSrc":"949:23:28","nodeType":"YulFunctionCall","src":"949:23:28"},{"kind":"number","nativeSrc":"974:2:28","nodeType":"YulLiteral","src":"974:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"945:3:28","nodeType":"YulIdentifier","src":"945:3:28"},"nativeSrc":"945:32:28","nodeType":"YulFunctionCall","src":"945:32:28"},"nativeSrc":"942:52:28","nodeType":"YulIf","src":"942:52:28"},{"nativeSrc":"1003:39:28","nodeType":"YulAssignment","src":"1003:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1032:9:28","nodeType":"YulIdentifier","src":"1032:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1013:18:28","nodeType":"YulIdentifier","src":"1013:18:28"},"nativeSrc":"1013:29:28","nodeType":"YulFunctionCall","src":"1013:29:28"},"variableNames":[{"name":"value0","nativeSrc":"1003:6:28","nodeType":"YulIdentifier","src":"1003:6:28"}]},{"nativeSrc":"1051:42:28","nodeType":"YulAssignment","src":"1051:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1078:9:28","nodeType":"YulIdentifier","src":"1078:9:28"},{"kind":"number","nativeSrc":"1089:2:28","nodeType":"YulLiteral","src":"1089:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1074:3:28","nodeType":"YulIdentifier","src":"1074:3:28"},"nativeSrc":"1074:18:28","nodeType":"YulFunctionCall","src":"1074:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"1061:12:28","nodeType":"YulIdentifier","src":"1061:12:28"},"nativeSrc":"1061:32:28","nodeType":"YulFunctionCall","src":"1061:32:28"},"variableNames":[{"name":"value1","nativeSrc":"1051:6:28","nodeType":"YulIdentifier","src":"1051:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"845:254:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"890:9:28","nodeType":"YulTypedName","src":"890:9:28","type":""},{"name":"dataEnd","nativeSrc":"901:7:28","nodeType":"YulTypedName","src":"901:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"913:6:28","nodeType":"YulTypedName","src":"913:6:28","type":""},{"name":"value1","nativeSrc":"921:6:28","nodeType":"YulTypedName","src":"921:6:28","type":""}],"src":"845:254:28"},{"body":{"nativeSrc":"1199:92:28","nodeType":"YulBlock","src":"1199:92:28","statements":[{"nativeSrc":"1209:26:28","nodeType":"YulAssignment","src":"1209:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1221:9:28","nodeType":"YulIdentifier","src":"1221:9:28"},{"kind":"number","nativeSrc":"1232:2:28","nodeType":"YulLiteral","src":"1232:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1217:3:28","nodeType":"YulIdentifier","src":"1217:3:28"},"nativeSrc":"1217:18:28","nodeType":"YulFunctionCall","src":"1217:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1209:4:28","nodeType":"YulIdentifier","src":"1209:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1251:9:28","nodeType":"YulIdentifier","src":"1251:9:28"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1276:6:28","nodeType":"YulIdentifier","src":"1276:6:28"}],"functionName":{"name":"iszero","nativeSrc":"1269:6:28","nodeType":"YulIdentifier","src":"1269:6:28"},"nativeSrc":"1269:14:28","nodeType":"YulFunctionCall","src":"1269:14:28"}],"functionName":{"name":"iszero","nativeSrc":"1262:6:28","nodeType":"YulIdentifier","src":"1262:6:28"},"nativeSrc":"1262:22:28","nodeType":"YulFunctionCall","src":"1262:22:28"}],"functionName":{"name":"mstore","nativeSrc":"1244:6:28","nodeType":"YulIdentifier","src":"1244:6:28"},"nativeSrc":"1244:41:28","nodeType":"YulFunctionCall","src":"1244:41:28"},"nativeSrc":"1244:41:28","nodeType":"YulExpressionStatement","src":"1244:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1104:187:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1168:9:28","nodeType":"YulTypedName","src":"1168:9:28","type":""},{"name":"value0","nativeSrc":"1179:6:28","nodeType":"YulTypedName","src":"1179:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1190:4:28","nodeType":"YulTypedName","src":"1190:4:28","type":""}],"src":"1104:187:28"},{"body":{"nativeSrc":"1397:76:28","nodeType":"YulBlock","src":"1397:76:28","statements":[{"nativeSrc":"1407:26:28","nodeType":"YulAssignment","src":"1407:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1419:9:28","nodeType":"YulIdentifier","src":"1419:9:28"},{"kind":"number","nativeSrc":"1430:2:28","nodeType":"YulLiteral","src":"1430:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1415:3:28","nodeType":"YulIdentifier","src":"1415:3:28"},"nativeSrc":"1415:18:28","nodeType":"YulFunctionCall","src":"1415:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1407:4:28","nodeType":"YulIdentifier","src":"1407:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1449:9:28","nodeType":"YulIdentifier","src":"1449:9:28"},{"name":"value0","nativeSrc":"1460:6:28","nodeType":"YulIdentifier","src":"1460:6:28"}],"functionName":{"name":"mstore","nativeSrc":"1442:6:28","nodeType":"YulIdentifier","src":"1442:6:28"},"nativeSrc":"1442:25:28","nodeType":"YulFunctionCall","src":"1442:25:28"},"nativeSrc":"1442:25:28","nodeType":"YulExpressionStatement","src":"1442:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1296:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:28","nodeType":"YulTypedName","src":"1366:9:28","type":""},{"name":"value0","nativeSrc":"1377:6:28","nodeType":"YulTypedName","src":"1377:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1388:4:28","nodeType":"YulTypedName","src":"1388:4:28","type":""}],"src":"1296:177:28"},{"body":{"nativeSrc":"1582:224:28","nodeType":"YulBlock","src":"1582:224:28","statements":[{"body":{"nativeSrc":"1628:16:28","nodeType":"YulBlock","src":"1628:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1637:1:28","nodeType":"YulLiteral","src":"1637:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1640:1:28","nodeType":"YulLiteral","src":"1640:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1630:6:28","nodeType":"YulIdentifier","src":"1630:6:28"},"nativeSrc":"1630:12:28","nodeType":"YulFunctionCall","src":"1630:12:28"},"nativeSrc":"1630:12:28","nodeType":"YulExpressionStatement","src":"1630:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1603:7:28","nodeType":"YulIdentifier","src":"1603:7:28"},{"name":"headStart","nativeSrc":"1612:9:28","nodeType":"YulIdentifier","src":"1612:9:28"}],"functionName":{"name":"sub","nativeSrc":"1599:3:28","nodeType":"YulIdentifier","src":"1599:3:28"},"nativeSrc":"1599:23:28","nodeType":"YulFunctionCall","src":"1599:23:28"},{"kind":"number","nativeSrc":"1624:2:28","nodeType":"YulLiteral","src":"1624:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1595:3:28","nodeType":"YulIdentifier","src":"1595:3:28"},"nativeSrc":"1595:32:28","nodeType":"YulFunctionCall","src":"1595:32:28"},"nativeSrc":"1592:52:28","nodeType":"YulIf","src":"1592:52:28"},{"nativeSrc":"1653:39:28","nodeType":"YulAssignment","src":"1653:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1682:9:28","nodeType":"YulIdentifier","src":"1682:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1663:18:28","nodeType":"YulIdentifier","src":"1663:18:28"},"nativeSrc":"1663:29:28","nodeType":"YulFunctionCall","src":"1663:29:28"},"variableNames":[{"name":"value0","nativeSrc":"1653:6:28","nodeType":"YulIdentifier","src":"1653:6:28"}]},{"nativeSrc":"1701:48:28","nodeType":"YulAssignment","src":"1701:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1734:9:28","nodeType":"YulIdentifier","src":"1734:9:28"},{"kind":"number","nativeSrc":"1745:2:28","nodeType":"YulLiteral","src":"1745:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1730:3:28","nodeType":"YulIdentifier","src":"1730:3:28"},"nativeSrc":"1730:18:28","nodeType":"YulFunctionCall","src":"1730:18:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1711:18:28","nodeType":"YulIdentifier","src":"1711:18:28"},"nativeSrc":"1711:38:28","nodeType":"YulFunctionCall","src":"1711:38:28"},"variableNames":[{"name":"value1","nativeSrc":"1701:6:28","nodeType":"YulIdentifier","src":"1701:6:28"}]},{"nativeSrc":"1758:42:28","nodeType":"YulAssignment","src":"1758:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1785:9:28","nodeType":"YulIdentifier","src":"1785:9:28"},{"kind":"number","nativeSrc":"1796:2:28","nodeType":"YulLiteral","src":"1796:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1781:3:28","nodeType":"YulIdentifier","src":"1781:3:28"},"nativeSrc":"1781:18:28","nodeType":"YulFunctionCall","src":"1781:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"1768:12:28","nodeType":"YulIdentifier","src":"1768:12:28"},"nativeSrc":"1768:32:28","nodeType":"YulFunctionCall","src":"1768:32:28"},"variableNames":[{"name":"value2","nativeSrc":"1758:6:28","nodeType":"YulIdentifier","src":"1758:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1478:328:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1532:9:28","nodeType":"YulTypedName","src":"1532:9:28","type":""},{"name":"dataEnd","nativeSrc":"1543:7:28","nodeType":"YulTypedName","src":"1543:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1555:6:28","nodeType":"YulTypedName","src":"1555:6:28","type":""},{"name":"value1","nativeSrc":"1563:6:28","nodeType":"YulTypedName","src":"1563:6:28","type":""},{"name":"value2","nativeSrc":"1571:6:28","nodeType":"YulTypedName","src":"1571:6:28","type":""}],"src":"1478:328:28"},{"body":{"nativeSrc":"1908:87:28","nodeType":"YulBlock","src":"1908:87:28","statements":[{"nativeSrc":"1918:26:28","nodeType":"YulAssignment","src":"1918:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1930:9:28","nodeType":"YulIdentifier","src":"1930:9:28"},{"kind":"number","nativeSrc":"1941:2:28","nodeType":"YulLiteral","src":"1941:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1926:3:28","nodeType":"YulIdentifier","src":"1926:3:28"},"nativeSrc":"1926:18:28","nodeType":"YulFunctionCall","src":"1926:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1918:4:28","nodeType":"YulIdentifier","src":"1918:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1960:9:28","nodeType":"YulIdentifier","src":"1960:9:28"},{"arguments":[{"name":"value0","nativeSrc":"1975:6:28","nodeType":"YulIdentifier","src":"1975:6:28"},{"kind":"number","nativeSrc":"1983:4:28","nodeType":"YulLiteral","src":"1983:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1971:3:28","nodeType":"YulIdentifier","src":"1971:3:28"},"nativeSrc":"1971:17:28","nodeType":"YulFunctionCall","src":"1971:17:28"}],"functionName":{"name":"mstore","nativeSrc":"1953:6:28","nodeType":"YulIdentifier","src":"1953:6:28"},"nativeSrc":"1953:36:28","nodeType":"YulFunctionCall","src":"1953:36:28"},"nativeSrc":"1953:36:28","nodeType":"YulExpressionStatement","src":"1953:36:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1811:184:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1877:9:28","nodeType":"YulTypedName","src":"1877:9:28","type":""},{"name":"value0","nativeSrc":"1888:6:28","nodeType":"YulTypedName","src":"1888:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1899:4:28","nodeType":"YulTypedName","src":"1899:4:28","type":""}],"src":"1811:184:28"},{"body":{"nativeSrc":"2101:76:28","nodeType":"YulBlock","src":"2101:76:28","statements":[{"nativeSrc":"2111:26:28","nodeType":"YulAssignment","src":"2111:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2123:9:28","nodeType":"YulIdentifier","src":"2123:9:28"},{"kind":"number","nativeSrc":"2134:2:28","nodeType":"YulLiteral","src":"2134:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2119:3:28","nodeType":"YulIdentifier","src":"2119:3:28"},"nativeSrc":"2119:18:28","nodeType":"YulFunctionCall","src":"2119:18:28"},"variableNames":[{"name":"tail","nativeSrc":"2111:4:28","nodeType":"YulIdentifier","src":"2111:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2153:9:28","nodeType":"YulIdentifier","src":"2153:9:28"},{"name":"value0","nativeSrc":"2164:6:28","nodeType":"YulIdentifier","src":"2164:6:28"}],"functionName":{"name":"mstore","nativeSrc":"2146:6:28","nodeType":"YulIdentifier","src":"2146:6:28"},"nativeSrc":"2146:25:28","nodeType":"YulFunctionCall","src":"2146:25:28"},"nativeSrc":"2146:25:28","nodeType":"YulExpressionStatement","src":"2146:25:28"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2000:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2070:9:28","nodeType":"YulTypedName","src":"2070:9:28","type":""},{"name":"value0","nativeSrc":"2081:6:28","nodeType":"YulTypedName","src":"2081:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2092:4:28","nodeType":"YulTypedName","src":"2092:4:28","type":""}],"src":"2000:177:28"},{"body":{"nativeSrc":"2252:116:28","nodeType":"YulBlock","src":"2252:116:28","statements":[{"body":{"nativeSrc":"2298:16:28","nodeType":"YulBlock","src":"2298:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2307:1:28","nodeType":"YulLiteral","src":"2307:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2310:1:28","nodeType":"YulLiteral","src":"2310:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2300:6:28","nodeType":"YulIdentifier","src":"2300:6:28"},"nativeSrc":"2300:12:28","nodeType":"YulFunctionCall","src":"2300:12:28"},"nativeSrc":"2300:12:28","nodeType":"YulExpressionStatement","src":"2300:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2273:7:28","nodeType":"YulIdentifier","src":"2273:7:28"},{"name":"headStart","nativeSrc":"2282:9:28","nodeType":"YulIdentifier","src":"2282:9:28"}],"functionName":{"name":"sub","nativeSrc":"2269:3:28","nodeType":"YulIdentifier","src":"2269:3:28"},"nativeSrc":"2269:23:28","nodeType":"YulFunctionCall","src":"2269:23:28"},{"kind":"number","nativeSrc":"2294:2:28","nodeType":"YulLiteral","src":"2294:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2265:3:28","nodeType":"YulIdentifier","src":"2265:3:28"},"nativeSrc":"2265:32:28","nodeType":"YulFunctionCall","src":"2265:32:28"},"nativeSrc":"2262:52:28","nodeType":"YulIf","src":"2262:52:28"},{"nativeSrc":"2323:39:28","nodeType":"YulAssignment","src":"2323:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2352:9:28","nodeType":"YulIdentifier","src":"2352:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2333:18:28","nodeType":"YulIdentifier","src":"2333:18:28"},"nativeSrc":"2333:29:28","nodeType":"YulFunctionCall","src":"2333:29:28"},"variableNames":[{"name":"value0","nativeSrc":"2323:6:28","nodeType":"YulIdentifier","src":"2323:6:28"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2182:186:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2218:9:28","nodeType":"YulTypedName","src":"2218:9:28","type":""},{"name":"dataEnd","nativeSrc":"2229:7:28","nodeType":"YulTypedName","src":"2229:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2241:6:28","nodeType":"YulTypedName","src":"2241:6:28","type":""}],"src":"2182:186:28"},{"body":{"nativeSrc":"2730:902:28","nodeType":"YulBlock","src":"2730:902:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2747:9:28","nodeType":"YulIdentifier","src":"2747:9:28"},{"arguments":[{"name":"value0","nativeSrc":"2762:6:28","nodeType":"YulIdentifier","src":"2762:6:28"},{"arguments":[{"kind":"number","nativeSrc":"2774:3:28","nodeType":"YulLiteral","src":"2774:3:28","type":"","value":"248"},{"kind":"number","nativeSrc":"2779:3:28","nodeType":"YulLiteral","src":"2779:3:28","type":"","value":"255"}],"functionName":{"name":"shl","nativeSrc":"2770:3:28","nodeType":"YulIdentifier","src":"2770:3:28"},"nativeSrc":"2770:13:28","nodeType":"YulFunctionCall","src":"2770:13:28"}],"functionName":{"name":"and","nativeSrc":"2758:3:28","nodeType":"YulIdentifier","src":"2758:3:28"},"nativeSrc":"2758:26:28","nodeType":"YulFunctionCall","src":"2758:26:28"}],"functionName":{"name":"mstore","nativeSrc":"2740:6:28","nodeType":"YulIdentifier","src":"2740:6:28"},"nativeSrc":"2740:45:28","nodeType":"YulFunctionCall","src":"2740:45:28"},"nativeSrc":"2740:45:28","nodeType":"YulExpressionStatement","src":"2740:45:28"},{"nativeSrc":"2794:12:28","nodeType":"YulVariableDeclaration","src":"2794:12:28","value":{"kind":"number","nativeSrc":"2804:2:28","nodeType":"YulLiteral","src":"2804:2:28","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"2798:2:28","nodeType":"YulTypedName","src":"2798:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2826:9:28","nodeType":"YulIdentifier","src":"2826:9:28"},{"kind":"number","nativeSrc":"2837:2:28","nodeType":"YulLiteral","src":"2837:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2822:3:28","nodeType":"YulIdentifier","src":"2822:3:28"},"nativeSrc":"2822:18:28","nodeType":"YulFunctionCall","src":"2822:18:28"},{"kind":"number","nativeSrc":"2842:3:28","nodeType":"YulLiteral","src":"2842:3:28","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"2815:6:28","nodeType":"YulIdentifier","src":"2815:6:28"},"nativeSrc":"2815:31:28","nodeType":"YulFunctionCall","src":"2815:31:28"},"nativeSrc":"2815:31:28","nodeType":"YulExpressionStatement","src":"2815:31:28"},{"nativeSrc":"2855:60:28","nodeType":"YulVariableDeclaration","src":"2855:60:28","value":{"arguments":[{"name":"value1","nativeSrc":"2887:6:28","nodeType":"YulIdentifier","src":"2887:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"2899:9:28","nodeType":"YulIdentifier","src":"2899:9:28"},{"kind":"number","nativeSrc":"2910:3:28","nodeType":"YulLiteral","src":"2910:3:28","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"2895:3:28","nodeType":"YulIdentifier","src":"2895:3:28"},"nativeSrc":"2895:19:28","nodeType":"YulFunctionCall","src":"2895:19:28"}],"functionName":{"name":"abi_encode_string","nativeSrc":"2869:17:28","nodeType":"YulIdentifier","src":"2869:17:28"},"nativeSrc":"2869:46:28","nodeType":"YulFunctionCall","src":"2869:46:28"},"variables":[{"name":"tail_1","nativeSrc":"2859:6:28","nodeType":"YulTypedName","src":"2859:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2935:9:28","nodeType":"YulIdentifier","src":"2935:9:28"},{"kind":"number","nativeSrc":"2946:2:28","nodeType":"YulLiteral","src":"2946:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2931:3:28","nodeType":"YulIdentifier","src":"2931:3:28"},"nativeSrc":"2931:18:28","nodeType":"YulFunctionCall","src":"2931:18:28"},{"arguments":[{"name":"tail_1","nativeSrc":"2955:6:28","nodeType":"YulIdentifier","src":"2955:6:28"},{"name":"headStart","nativeSrc":"2963:9:28","nodeType":"YulIdentifier","src":"2963:9:28"}],"functionName":{"name":"sub","nativeSrc":"2951:3:28","nodeType":"YulIdentifier","src":"2951:3:28"},"nativeSrc":"2951:22:28","nodeType":"YulFunctionCall","src":"2951:22:28"}],"functionName":{"name":"mstore","nativeSrc":"2924:6:28","nodeType":"YulIdentifier","src":"2924:6:28"},"nativeSrc":"2924:50:28","nodeType":"YulFunctionCall","src":"2924:50:28"},"nativeSrc":"2924:50:28","nodeType":"YulExpressionStatement","src":"2924:50:28"},{"nativeSrc":"2983:47:28","nodeType":"YulVariableDeclaration","src":"2983:47:28","value":{"arguments":[{"name":"value2","nativeSrc":"3015:6:28","nodeType":"YulIdentifier","src":"3015:6:28"},{"name":"tail_1","nativeSrc":"3023:6:28","nodeType":"YulIdentifier","src":"3023:6:28"}],"functionName":{"name":"abi_encode_string","nativeSrc":"2997:17:28","nodeType":"YulIdentifier","src":"2997:17:28"},"nativeSrc":"2997:33:28","nodeType":"YulFunctionCall","src":"2997:33:28"},"variables":[{"name":"tail_2","nativeSrc":"2987:6:28","nodeType":"YulTypedName","src":"2987:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3050:9:28","nodeType":"YulIdentifier","src":"3050:9:28"},{"kind":"number","nativeSrc":"3061:2:28","nodeType":"YulLiteral","src":"3061:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3046:3:28","nodeType":"YulIdentifier","src":"3046:3:28"},"nativeSrc":"3046:18:28","nodeType":"YulFunctionCall","src":"3046:18:28"},{"name":"value3","nativeSrc":"3066:6:28","nodeType":"YulIdentifier","src":"3066:6:28"}],"functionName":{"name":"mstore","nativeSrc":"3039:6:28","nodeType":"YulIdentifier","src":"3039:6:28"},"nativeSrc":"3039:34:28","nodeType":"YulFunctionCall","src":"3039:34:28"},"nativeSrc":"3039:34:28","nodeType":"YulExpressionStatement","src":"3039:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3093:9:28","nodeType":"YulIdentifier","src":"3093:9:28"},{"kind":"number","nativeSrc":"3104:3:28","nodeType":"YulLiteral","src":"3104:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3089:3:28","nodeType":"YulIdentifier","src":"3089:3:28"},"nativeSrc":"3089:19:28","nodeType":"YulFunctionCall","src":"3089:19:28"},{"arguments":[{"name":"value4","nativeSrc":"3114:6:28","nodeType":"YulIdentifier","src":"3114:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3130:3:28","nodeType":"YulLiteral","src":"3130:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"3135:1:28","nodeType":"YulLiteral","src":"3135:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3126:3:28","nodeType":"YulIdentifier","src":"3126:3:28"},"nativeSrc":"3126:11:28","nodeType":"YulFunctionCall","src":"3126:11:28"},{"kind":"number","nativeSrc":"3139:1:28","nodeType":"YulLiteral","src":"3139:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3122:3:28","nodeType":"YulIdentifier","src":"3122:3:28"},"nativeSrc":"3122:19:28","nodeType":"YulFunctionCall","src":"3122:19:28"}],"functionName":{"name":"and","nativeSrc":"3110:3:28","nodeType":"YulIdentifier","src":"3110:3:28"},"nativeSrc":"3110:32:28","nodeType":"YulFunctionCall","src":"3110:32:28"}],"functionName":{"name":"mstore","nativeSrc":"3082:6:28","nodeType":"YulIdentifier","src":"3082:6:28"},"nativeSrc":"3082:61:28","nodeType":"YulFunctionCall","src":"3082:61:28"},"nativeSrc":"3082:61:28","nodeType":"YulExpressionStatement","src":"3082:61:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3163:9:28","nodeType":"YulIdentifier","src":"3163:9:28"},{"kind":"number","nativeSrc":"3174:3:28","nodeType":"YulLiteral","src":"3174:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"3159:3:28","nodeType":"YulIdentifier","src":"3159:3:28"},"nativeSrc":"3159:19:28","nodeType":"YulFunctionCall","src":"3159:19:28"},{"name":"value5","nativeSrc":"3180:6:28","nodeType":"YulIdentifier","src":"3180:6:28"}],"functionName":{"name":"mstore","nativeSrc":"3152:6:28","nodeType":"YulIdentifier","src":"3152:6:28"},"nativeSrc":"3152:35:28","nodeType":"YulFunctionCall","src":"3152:35:28"},"nativeSrc":"3152:35:28","nodeType":"YulExpressionStatement","src":"3152:35:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3207:9:28","nodeType":"YulIdentifier","src":"3207:9:28"},{"kind":"number","nativeSrc":"3218:3:28","nodeType":"YulLiteral","src":"3218:3:28","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"3203:3:28","nodeType":"YulIdentifier","src":"3203:3:28"},"nativeSrc":"3203:19:28","nodeType":"YulFunctionCall","src":"3203:19:28"},{"arguments":[{"name":"tail_2","nativeSrc":"3228:6:28","nodeType":"YulIdentifier","src":"3228:6:28"},{"name":"headStart","nativeSrc":"3236:9:28","nodeType":"YulIdentifier","src":"3236:9:28"}],"functionName":{"name":"sub","nativeSrc":"3224:3:28","nodeType":"YulIdentifier","src":"3224:3:28"},"nativeSrc":"3224:22:28","nodeType":"YulFunctionCall","src":"3224:22:28"}],"functionName":{"name":"mstore","nativeSrc":"3196:6:28","nodeType":"YulIdentifier","src":"3196:6:28"},"nativeSrc":"3196:51:28","nodeType":"YulFunctionCall","src":"3196:51:28"},"nativeSrc":"3196:51:28","nodeType":"YulExpressionStatement","src":"3196:51:28"},{"nativeSrc":"3256:17:28","nodeType":"YulVariableDeclaration","src":"3256:17:28","value":{"name":"tail_2","nativeSrc":"3267:6:28","nodeType":"YulIdentifier","src":"3267:6:28"},"variables":[{"name":"pos","nativeSrc":"3260:3:28","nodeType":"YulTypedName","src":"3260:3:28","type":""}]},{"nativeSrc":"3282:27:28","nodeType":"YulVariableDeclaration","src":"3282:27:28","value":{"arguments":[{"name":"value6","nativeSrc":"3302:6:28","nodeType":"YulIdentifier","src":"3302:6:28"}],"functionName":{"name":"mload","nativeSrc":"3296:5:28","nodeType":"YulIdentifier","src":"3296:5:28"},"nativeSrc":"3296:13:28","nodeType":"YulFunctionCall","src":"3296:13:28"},"variables":[{"name":"length","nativeSrc":"3286:6:28","nodeType":"YulTypedName","src":"3286:6:28","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"3325:6:28","nodeType":"YulIdentifier","src":"3325:6:28"},{"name":"length","nativeSrc":"3333:6:28","nodeType":"YulIdentifier","src":"3333:6:28"}],"functionName":{"name":"mstore","nativeSrc":"3318:6:28","nodeType":"YulIdentifier","src":"3318:6:28"},"nativeSrc":"3318:22:28","nodeType":"YulFunctionCall","src":"3318:22:28"},"nativeSrc":"3318:22:28","nodeType":"YulExpressionStatement","src":"3318:22:28"},{"nativeSrc":"3349:22:28","nodeType":"YulAssignment","src":"3349:22:28","value":{"arguments":[{"name":"tail_2","nativeSrc":"3360:6:28","nodeType":"YulIdentifier","src":"3360:6:28"},{"kind":"number","nativeSrc":"3368:2:28","nodeType":"YulLiteral","src":"3368:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3356:3:28","nodeType":"YulIdentifier","src":"3356:3:28"},"nativeSrc":"3356:15:28","nodeType":"YulFunctionCall","src":"3356:15:28"},"variableNames":[{"name":"pos","nativeSrc":"3349:3:28","nodeType":"YulIdentifier","src":"3349:3:28"}]},{"nativeSrc":"3380:29:28","nodeType":"YulVariableDeclaration","src":"3380:29:28","value":{"arguments":[{"name":"value6","nativeSrc":"3398:6:28","nodeType":"YulIdentifier","src":"3398:6:28"},{"kind":"number","nativeSrc":"3406:2:28","nodeType":"YulLiteral","src":"3406:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3394:3:28","nodeType":"YulIdentifier","src":"3394:3:28"},"nativeSrc":"3394:15:28","nodeType":"YulFunctionCall","src":"3394:15:28"},"variables":[{"name":"srcPtr","nativeSrc":"3384:6:28","nodeType":"YulTypedName","src":"3384:6:28","type":""}]},{"nativeSrc":"3418:10:28","nodeType":"YulVariableDeclaration","src":"3418:10:28","value":{"kind":"number","nativeSrc":"3427:1:28","nodeType":"YulLiteral","src":"3427:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3422:1:28","nodeType":"YulTypedName","src":"3422:1:28","type":""}]},{"body":{"nativeSrc":"3486:120:28","nodeType":"YulBlock","src":"3486:120:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3507:3:28","nodeType":"YulIdentifier","src":"3507:3:28"},{"arguments":[{"name":"srcPtr","nativeSrc":"3518:6:28","nodeType":"YulIdentifier","src":"3518:6:28"}],"functionName":{"name":"mload","nativeSrc":"3512:5:28","nodeType":"YulIdentifier","src":"3512:5:28"},"nativeSrc":"3512:13:28","nodeType":"YulFunctionCall","src":"3512:13:28"}],"functionName":{"name":"mstore","nativeSrc":"3500:6:28","nodeType":"YulIdentifier","src":"3500:6:28"},"nativeSrc":"3500:26:28","nodeType":"YulFunctionCall","src":"3500:26:28"},"nativeSrc":"3500:26:28","nodeType":"YulExpressionStatement","src":"3500:26:28"},{"nativeSrc":"3539:19:28","nodeType":"YulAssignment","src":"3539:19:28","value":{"arguments":[{"name":"pos","nativeSrc":"3550:3:28","nodeType":"YulIdentifier","src":"3550:3:28"},{"name":"_1","nativeSrc":"3555:2:28","nodeType":"YulIdentifier","src":"3555:2:28"}],"functionName":{"name":"add","nativeSrc":"3546:3:28","nodeType":"YulIdentifier","src":"3546:3:28"},"nativeSrc":"3546:12:28","nodeType":"YulFunctionCall","src":"3546:12:28"},"variableNames":[{"name":"pos","nativeSrc":"3539:3:28","nodeType":"YulIdentifier","src":"3539:3:28"}]},{"nativeSrc":"3571:25:28","nodeType":"YulAssignment","src":"3571:25:28","value":{"arguments":[{"name":"srcPtr","nativeSrc":"3585:6:28","nodeType":"YulIdentifier","src":"3585:6:28"},{"name":"_1","nativeSrc":"3593:2:28","nodeType":"YulIdentifier","src":"3593:2:28"}],"functionName":{"name":"add","nativeSrc":"3581:3:28","nodeType":"YulIdentifier","src":"3581:3:28"},"nativeSrc":"3581:15:28","nodeType":"YulFunctionCall","src":"3581:15:28"},"variableNames":[{"name":"srcPtr","nativeSrc":"3571:6:28","nodeType":"YulIdentifier","src":"3571:6:28"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3448:1:28","nodeType":"YulIdentifier","src":"3448:1:28"},{"name":"length","nativeSrc":"3451:6:28","nodeType":"YulIdentifier","src":"3451:6:28"}],"functionName":{"name":"lt","nativeSrc":"3445:2:28","nodeType":"YulIdentifier","src":"3445:2:28"},"nativeSrc":"3445:13:28","nodeType":"YulFunctionCall","src":"3445:13:28"},"nativeSrc":"3437:169:28","nodeType":"YulForLoop","post":{"nativeSrc":"3459:18:28","nodeType":"YulBlock","src":"3459:18:28","statements":[{"nativeSrc":"3461:14:28","nodeType":"YulAssignment","src":"3461:14:28","value":{"arguments":[{"name":"i","nativeSrc":"3470:1:28","nodeType":"YulIdentifier","src":"3470:1:28"},{"kind":"number","nativeSrc":"3473:1:28","nodeType":"YulLiteral","src":"3473:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3466:3:28","nodeType":"YulIdentifier","src":"3466:3:28"},"nativeSrc":"3466:9:28","nodeType":"YulFunctionCall","src":"3466:9:28"},"variableNames":[{"name":"i","nativeSrc":"3461:1:28","nodeType":"YulIdentifier","src":"3461:1:28"}]}]},"pre":{"nativeSrc":"3441:3:28","nodeType":"YulBlock","src":"3441:3:28","statements":[]},"src":"3437:169:28"},{"nativeSrc":"3615:11:28","nodeType":"YulAssignment","src":"3615:11:28","value":{"name":"pos","nativeSrc":"3623:3:28","nodeType":"YulIdentifier","src":"3623:3:28"},"variableNames":[{"name":"tail","nativeSrc":"3615:4:28","nodeType":"YulIdentifier","src":"3615:4:28"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"2373:1259:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2651:9:28","nodeType":"YulTypedName","src":"2651:9:28","type":""},{"name":"value6","nativeSrc":"2662:6:28","nodeType":"YulTypedName","src":"2662:6:28","type":""},{"name":"value5","nativeSrc":"2670:6:28","nodeType":"YulTypedName","src":"2670:6:28","type":""},{"name":"value4","nativeSrc":"2678:6:28","nodeType":"YulTypedName","src":"2678:6:28","type":""},{"name":"value3","nativeSrc":"2686:6:28","nodeType":"YulTypedName","src":"2686:6:28","type":""},{"name":"value2","nativeSrc":"2694:6:28","nodeType":"YulTypedName","src":"2694:6:28","type":""},{"name":"value1","nativeSrc":"2702:6:28","nodeType":"YulTypedName","src":"2702:6:28","type":""},{"name":"value0","nativeSrc":"2710:6:28","nodeType":"YulTypedName","src":"2710:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2721:4:28","nodeType":"YulTypedName","src":"2721:4:28","type":""}],"src":"2373:1259:28"},{"body":{"nativeSrc":"3738:102:28","nodeType":"YulBlock","src":"3738:102:28","statements":[{"nativeSrc":"3748:26:28","nodeType":"YulAssignment","src":"3748:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3760:9:28","nodeType":"YulIdentifier","src":"3760:9:28"},{"kind":"number","nativeSrc":"3771:2:28","nodeType":"YulLiteral","src":"3771:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3756:3:28","nodeType":"YulIdentifier","src":"3756:3:28"},"nativeSrc":"3756:18:28","nodeType":"YulFunctionCall","src":"3756:18:28"},"variableNames":[{"name":"tail","nativeSrc":"3748:4:28","nodeType":"YulIdentifier","src":"3748:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3790:9:28","nodeType":"YulIdentifier","src":"3790:9:28"},{"arguments":[{"name":"value0","nativeSrc":"3805:6:28","nodeType":"YulIdentifier","src":"3805:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3821:3:28","nodeType":"YulLiteral","src":"3821:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"3826:1:28","nodeType":"YulLiteral","src":"3826:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3817:3:28","nodeType":"YulIdentifier","src":"3817:3:28"},"nativeSrc":"3817:11:28","nodeType":"YulFunctionCall","src":"3817:11:28"},{"kind":"number","nativeSrc":"3830:1:28","nodeType":"YulLiteral","src":"3830:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3813:3:28","nodeType":"YulIdentifier","src":"3813:3:28"},"nativeSrc":"3813:19:28","nodeType":"YulFunctionCall","src":"3813:19:28"}],"functionName":{"name":"and","nativeSrc":"3801:3:28","nodeType":"YulIdentifier","src":"3801:3:28"},"nativeSrc":"3801:32:28","nodeType":"YulFunctionCall","src":"3801:32:28"}],"functionName":{"name":"mstore","nativeSrc":"3783:6:28","nodeType":"YulIdentifier","src":"3783:6:28"},"nativeSrc":"3783:51:28","nodeType":"YulFunctionCall","src":"3783:51:28"},"nativeSrc":"3783:51:28","nodeType":"YulExpressionStatement","src":"3783:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3637:203:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3707:9:28","nodeType":"YulTypedName","src":"3707:9:28","type":""},{"name":"value0","nativeSrc":"3718:6:28","nodeType":"YulTypedName","src":"3718:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3729:4:28","nodeType":"YulTypedName","src":"3729:4:28","type":""}],"src":"3637:203:28"},{"body":{"nativeSrc":"4015:523:28","nodeType":"YulBlock","src":"4015:523:28","statements":[{"body":{"nativeSrc":"4062:16:28","nodeType":"YulBlock","src":"4062:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4071:1:28","nodeType":"YulLiteral","src":"4071:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"4074:1:28","nodeType":"YulLiteral","src":"4074:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4064:6:28","nodeType":"YulIdentifier","src":"4064:6:28"},"nativeSrc":"4064:12:28","nodeType":"YulFunctionCall","src":"4064:12:28"},"nativeSrc":"4064:12:28","nodeType":"YulExpressionStatement","src":"4064:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4036:7:28","nodeType":"YulIdentifier","src":"4036:7:28"},{"name":"headStart","nativeSrc":"4045:9:28","nodeType":"YulIdentifier","src":"4045:9:28"}],"functionName":{"name":"sub","nativeSrc":"4032:3:28","nodeType":"YulIdentifier","src":"4032:3:28"},"nativeSrc":"4032:23:28","nodeType":"YulFunctionCall","src":"4032:23:28"},{"kind":"number","nativeSrc":"4057:3:28","nodeType":"YulLiteral","src":"4057:3:28","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"4028:3:28","nodeType":"YulIdentifier","src":"4028:3:28"},"nativeSrc":"4028:33:28","nodeType":"YulFunctionCall","src":"4028:33:28"},"nativeSrc":"4025:53:28","nodeType":"YulIf","src":"4025:53:28"},{"nativeSrc":"4087:39:28","nodeType":"YulAssignment","src":"4087:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4116:9:28","nodeType":"YulIdentifier","src":"4116:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4097:18:28","nodeType":"YulIdentifier","src":"4097:18:28"},"nativeSrc":"4097:29:28","nodeType":"YulFunctionCall","src":"4097:29:28"},"variableNames":[{"name":"value0","nativeSrc":"4087:6:28","nodeType":"YulIdentifier","src":"4087:6:28"}]},{"nativeSrc":"4135:48:28","nodeType":"YulAssignment","src":"4135:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4168:9:28","nodeType":"YulIdentifier","src":"4168:9:28"},{"kind":"number","nativeSrc":"4179:2:28","nodeType":"YulLiteral","src":"4179:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4164:3:28","nodeType":"YulIdentifier","src":"4164:3:28"},"nativeSrc":"4164:18:28","nodeType":"YulFunctionCall","src":"4164:18:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4145:18:28","nodeType":"YulIdentifier","src":"4145:18:28"},"nativeSrc":"4145:38:28","nodeType":"YulFunctionCall","src":"4145:38:28"},"variableNames":[{"name":"value1","nativeSrc":"4135:6:28","nodeType":"YulIdentifier","src":"4135:6:28"}]},{"nativeSrc":"4192:42:28","nodeType":"YulAssignment","src":"4192:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4219:9:28","nodeType":"YulIdentifier","src":"4219:9:28"},{"kind":"number","nativeSrc":"4230:2:28","nodeType":"YulLiteral","src":"4230:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4215:3:28","nodeType":"YulIdentifier","src":"4215:3:28"},"nativeSrc":"4215:18:28","nodeType":"YulFunctionCall","src":"4215:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"4202:12:28","nodeType":"YulIdentifier","src":"4202:12:28"},"nativeSrc":"4202:32:28","nodeType":"YulFunctionCall","src":"4202:32:28"},"variableNames":[{"name":"value2","nativeSrc":"4192:6:28","nodeType":"YulIdentifier","src":"4192:6:28"}]},{"nativeSrc":"4243:42:28","nodeType":"YulAssignment","src":"4243:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4270:9:28","nodeType":"YulIdentifier","src":"4270:9:28"},{"kind":"number","nativeSrc":"4281:2:28","nodeType":"YulLiteral","src":"4281:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4266:3:28","nodeType":"YulIdentifier","src":"4266:3:28"},"nativeSrc":"4266:18:28","nodeType":"YulFunctionCall","src":"4266:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"4253:12:28","nodeType":"YulIdentifier","src":"4253:12:28"},"nativeSrc":"4253:32:28","nodeType":"YulFunctionCall","src":"4253:32:28"},"variableNames":[{"name":"value3","nativeSrc":"4243:6:28","nodeType":"YulIdentifier","src":"4243:6:28"}]},{"nativeSrc":"4294:46:28","nodeType":"YulVariableDeclaration","src":"4294:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4324:9:28","nodeType":"YulIdentifier","src":"4324:9:28"},{"kind":"number","nativeSrc":"4335:3:28","nodeType":"YulLiteral","src":"4335:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4320:3:28","nodeType":"YulIdentifier","src":"4320:3:28"},"nativeSrc":"4320:19:28","nodeType":"YulFunctionCall","src":"4320:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"4307:12:28","nodeType":"YulIdentifier","src":"4307:12:28"},"nativeSrc":"4307:33:28","nodeType":"YulFunctionCall","src":"4307:33:28"},"variables":[{"name":"value","nativeSrc":"4298:5:28","nodeType":"YulTypedName","src":"4298:5:28","type":""}]},{"body":{"nativeSrc":"4388:16:28","nodeType":"YulBlock","src":"4388:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4397:1:28","nodeType":"YulLiteral","src":"4397:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"4400:1:28","nodeType":"YulLiteral","src":"4400:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4390:6:28","nodeType":"YulIdentifier","src":"4390:6:28"},"nativeSrc":"4390:12:28","nodeType":"YulFunctionCall","src":"4390:12:28"},"nativeSrc":"4390:12:28","nodeType":"YulExpressionStatement","src":"4390:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4362:5:28","nodeType":"YulIdentifier","src":"4362:5:28"},{"arguments":[{"name":"value","nativeSrc":"4373:5:28","nodeType":"YulIdentifier","src":"4373:5:28"},{"kind":"number","nativeSrc":"4380:4:28","nodeType":"YulLiteral","src":"4380:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4369:3:28","nodeType":"YulIdentifier","src":"4369:3:28"},"nativeSrc":"4369:16:28","nodeType":"YulFunctionCall","src":"4369:16:28"}],"functionName":{"name":"eq","nativeSrc":"4359:2:28","nodeType":"YulIdentifier","src":"4359:2:28"},"nativeSrc":"4359:27:28","nodeType":"YulFunctionCall","src":"4359:27:28"}],"functionName":{"name":"iszero","nativeSrc":"4352:6:28","nodeType":"YulIdentifier","src":"4352:6:28"},"nativeSrc":"4352:35:28","nodeType":"YulFunctionCall","src":"4352:35:28"},"nativeSrc":"4349:55:28","nodeType":"YulIf","src":"4349:55:28"},{"nativeSrc":"4413:15:28","nodeType":"YulAssignment","src":"4413:15:28","value":{"name":"value","nativeSrc":"4423:5:28","nodeType":"YulIdentifier","src":"4423:5:28"},"variableNames":[{"name":"value4","nativeSrc":"4413:6:28","nodeType":"YulIdentifier","src":"4413:6:28"}]},{"nativeSrc":"4437:43:28","nodeType":"YulAssignment","src":"4437:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4464:9:28","nodeType":"YulIdentifier","src":"4464:9:28"},{"kind":"number","nativeSrc":"4475:3:28","nodeType":"YulLiteral","src":"4475:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4460:3:28","nodeType":"YulIdentifier","src":"4460:3:28"},"nativeSrc":"4460:19:28","nodeType":"YulFunctionCall","src":"4460:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"4447:12:28","nodeType":"YulIdentifier","src":"4447:12:28"},"nativeSrc":"4447:33:28","nodeType":"YulFunctionCall","src":"4447:33:28"},"variableNames":[{"name":"value5","nativeSrc":"4437:6:28","nodeType":"YulIdentifier","src":"4437:6:28"}]},{"nativeSrc":"4489:43:28","nodeType":"YulAssignment","src":"4489:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4516:9:28","nodeType":"YulIdentifier","src":"4516:9:28"},{"kind":"number","nativeSrc":"4527:3:28","nodeType":"YulLiteral","src":"4527:3:28","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"4512:3:28","nodeType":"YulIdentifier","src":"4512:3:28"},"nativeSrc":"4512:19:28","nodeType":"YulFunctionCall","src":"4512:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"4499:12:28","nodeType":"YulIdentifier","src":"4499:12:28"},"nativeSrc":"4499:33:28","nodeType":"YulFunctionCall","src":"4499:33:28"},"variableNames":[{"name":"value6","nativeSrc":"4489:6:28","nodeType":"YulIdentifier","src":"4489:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"3845:693:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3933:9:28","nodeType":"YulTypedName","src":"3933:9:28","type":""},{"name":"dataEnd","nativeSrc":"3944:7:28","nodeType":"YulTypedName","src":"3944:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3956:6:28","nodeType":"YulTypedName","src":"3956:6:28","type":""},{"name":"value1","nativeSrc":"3964:6:28","nodeType":"YulTypedName","src":"3964:6:28","type":""},{"name":"value2","nativeSrc":"3972:6:28","nodeType":"YulTypedName","src":"3972:6:28","type":""},{"name":"value3","nativeSrc":"3980:6:28","nodeType":"YulTypedName","src":"3980:6:28","type":""},{"name":"value4","nativeSrc":"3988:6:28","nodeType":"YulTypedName","src":"3988:6:28","type":""},{"name":"value5","nativeSrc":"3996:6:28","nodeType":"YulTypedName","src":"3996:6:28","type":""},{"name":"value6","nativeSrc":"4004:6:28","nodeType":"YulTypedName","src":"4004:6:28","type":""}],"src":"3845:693:28"},{"body":{"nativeSrc":"4630:173:28","nodeType":"YulBlock","src":"4630:173:28","statements":[{"body":{"nativeSrc":"4676:16:28","nodeType":"YulBlock","src":"4676:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4685:1:28","nodeType":"YulLiteral","src":"4685:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"4688:1:28","nodeType":"YulLiteral","src":"4688:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4678:6:28","nodeType":"YulIdentifier","src":"4678:6:28"},"nativeSrc":"4678:12:28","nodeType":"YulFunctionCall","src":"4678:12:28"},"nativeSrc":"4678:12:28","nodeType":"YulExpressionStatement","src":"4678:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4651:7:28","nodeType":"YulIdentifier","src":"4651:7:28"},{"name":"headStart","nativeSrc":"4660:9:28","nodeType":"YulIdentifier","src":"4660:9:28"}],"functionName":{"name":"sub","nativeSrc":"4647:3:28","nodeType":"YulIdentifier","src":"4647:3:28"},"nativeSrc":"4647:23:28","nodeType":"YulFunctionCall","src":"4647:23:28"},{"kind":"number","nativeSrc":"4672:2:28","nodeType":"YulLiteral","src":"4672:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4643:3:28","nodeType":"YulIdentifier","src":"4643:3:28"},"nativeSrc":"4643:32:28","nodeType":"YulFunctionCall","src":"4643:32:28"},"nativeSrc":"4640:52:28","nodeType":"YulIf","src":"4640:52:28"},{"nativeSrc":"4701:39:28","nodeType":"YulAssignment","src":"4701:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4730:9:28","nodeType":"YulIdentifier","src":"4730:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4711:18:28","nodeType":"YulIdentifier","src":"4711:18:28"},"nativeSrc":"4711:29:28","nodeType":"YulFunctionCall","src":"4711:29:28"},"variableNames":[{"name":"value0","nativeSrc":"4701:6:28","nodeType":"YulIdentifier","src":"4701:6:28"}]},{"nativeSrc":"4749:48:28","nodeType":"YulAssignment","src":"4749:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4782:9:28","nodeType":"YulIdentifier","src":"4782:9:28"},{"kind":"number","nativeSrc":"4793:2:28","nodeType":"YulLiteral","src":"4793:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4778:3:28","nodeType":"YulIdentifier","src":"4778:3:28"},"nativeSrc":"4778:18:28","nodeType":"YulFunctionCall","src":"4778:18:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4759:18:28","nodeType":"YulIdentifier","src":"4759:18:28"},"nativeSrc":"4759:38:28","nodeType":"YulFunctionCall","src":"4759:38:28"},"variableNames":[{"name":"value1","nativeSrc":"4749:6:28","nodeType":"YulIdentifier","src":"4749:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"4543:260:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4588:9:28","nodeType":"YulTypedName","src":"4588:9:28","type":""},{"name":"dataEnd","nativeSrc":"4599:7:28","nodeType":"YulTypedName","src":"4599:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4611:6:28","nodeType":"YulTypedName","src":"4611:6:28","type":""},{"name":"value1","nativeSrc":"4619:6:28","nodeType":"YulTypedName","src":"4619:6:28","type":""}],"src":"4543:260:28"},{"body":{"nativeSrc":"4863:325:28","nodeType":"YulBlock","src":"4863:325:28","statements":[{"nativeSrc":"4873:22:28","nodeType":"YulAssignment","src":"4873:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"4887:1:28","nodeType":"YulLiteral","src":"4887:1:28","type":"","value":"1"},{"name":"data","nativeSrc":"4890:4:28","nodeType":"YulIdentifier","src":"4890:4:28"}],"functionName":{"name":"shr","nativeSrc":"4883:3:28","nodeType":"YulIdentifier","src":"4883:3:28"},"nativeSrc":"4883:12:28","nodeType":"YulFunctionCall","src":"4883:12:28"},"variableNames":[{"name":"length","nativeSrc":"4873:6:28","nodeType":"YulIdentifier","src":"4873:6:28"}]},{"nativeSrc":"4904:38:28","nodeType":"YulVariableDeclaration","src":"4904:38:28","value":{"arguments":[{"name":"data","nativeSrc":"4934:4:28","nodeType":"YulIdentifier","src":"4934:4:28"},{"kind":"number","nativeSrc":"4940:1:28","nodeType":"YulLiteral","src":"4940:1:28","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4930:3:28","nodeType":"YulIdentifier","src":"4930:3:28"},"nativeSrc":"4930:12:28","nodeType":"YulFunctionCall","src":"4930:12:28"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4908:18:28","nodeType":"YulTypedName","src":"4908:18:28","type":""}]},{"body":{"nativeSrc":"4981:31:28","nodeType":"YulBlock","src":"4981:31:28","statements":[{"nativeSrc":"4983:27:28","nodeType":"YulAssignment","src":"4983:27:28","value":{"arguments":[{"name":"length","nativeSrc":"4997:6:28","nodeType":"YulIdentifier","src":"4997:6:28"},{"kind":"number","nativeSrc":"5005:4:28","nodeType":"YulLiteral","src":"5005:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4993:3:28","nodeType":"YulIdentifier","src":"4993:3:28"},"nativeSrc":"4993:17:28","nodeType":"YulFunctionCall","src":"4993:17:28"},"variableNames":[{"name":"length","nativeSrc":"4983:6:28","nodeType":"YulIdentifier","src":"4983:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4961:18:28","nodeType":"YulIdentifier","src":"4961:18:28"}],"functionName":{"name":"iszero","nativeSrc":"4954:6:28","nodeType":"YulIdentifier","src":"4954:6:28"},"nativeSrc":"4954:26:28","nodeType":"YulFunctionCall","src":"4954:26:28"},"nativeSrc":"4951:61:28","nodeType":"YulIf","src":"4951:61:28"},{"body":{"nativeSrc":"5071:111:28","nodeType":"YulBlock","src":"5071:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5092:1:28","nodeType":"YulLiteral","src":"5092:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5099:3:28","nodeType":"YulLiteral","src":"5099:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"5104:10:28","nodeType":"YulLiteral","src":"5104:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5095:3:28","nodeType":"YulIdentifier","src":"5095:3:28"},"nativeSrc":"5095:20:28","nodeType":"YulFunctionCall","src":"5095:20:28"}],"functionName":{"name":"mstore","nativeSrc":"5085:6:28","nodeType":"YulIdentifier","src":"5085:6:28"},"nativeSrc":"5085:31:28","nodeType":"YulFunctionCall","src":"5085:31:28"},"nativeSrc":"5085:31:28","nodeType":"YulExpressionStatement","src":"5085:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5136:1:28","nodeType":"YulLiteral","src":"5136:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"5139:4:28","nodeType":"YulLiteral","src":"5139:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5129:6:28","nodeType":"YulIdentifier","src":"5129:6:28"},"nativeSrc":"5129:15:28","nodeType":"YulFunctionCall","src":"5129:15:28"},"nativeSrc":"5129:15:28","nodeType":"YulExpressionStatement","src":"5129:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5164:1:28","nodeType":"YulLiteral","src":"5164:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"5167:4:28","nodeType":"YulLiteral","src":"5167:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5157:6:28","nodeType":"YulIdentifier","src":"5157:6:28"},"nativeSrc":"5157:15:28","nodeType":"YulFunctionCall","src":"5157:15:28"},"nativeSrc":"5157:15:28","nodeType":"YulExpressionStatement","src":"5157:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5027:18:28","nodeType":"YulIdentifier","src":"5027:18:28"},{"arguments":[{"name":"length","nativeSrc":"5050:6:28","nodeType":"YulIdentifier","src":"5050:6:28"},{"kind":"number","nativeSrc":"5058:2:28","nodeType":"YulLiteral","src":"5058:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5047:2:28","nodeType":"YulIdentifier","src":"5047:2:28"},"nativeSrc":"5047:14:28","nodeType":"YulFunctionCall","src":"5047:14:28"}],"functionName":{"name":"eq","nativeSrc":"5024:2:28","nodeType":"YulIdentifier","src":"5024:2:28"},"nativeSrc":"5024:38:28","nodeType":"YulFunctionCall","src":"5024:38:28"},"nativeSrc":"5021:161:28","nodeType":"YulIf","src":"5021:161:28"}]},"name":"extract_byte_array_length","nativeSrc":"4808:380:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4843:4:28","nodeType":"YulTypedName","src":"4843:4:28","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4852:6:28","nodeType":"YulTypedName","src":"4852:6:28","type":""}],"src":"4808:380:28"},{"body":{"nativeSrc":"5225:95:28","nodeType":"YulBlock","src":"5225:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5242:1:28","nodeType":"YulLiteral","src":"5242:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5249:3:28","nodeType":"YulLiteral","src":"5249:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"5254:10:28","nodeType":"YulLiteral","src":"5254:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5245:3:28","nodeType":"YulIdentifier","src":"5245:3:28"},"nativeSrc":"5245:20:28","nodeType":"YulFunctionCall","src":"5245:20:28"}],"functionName":{"name":"mstore","nativeSrc":"5235:6:28","nodeType":"YulIdentifier","src":"5235:6:28"},"nativeSrc":"5235:31:28","nodeType":"YulFunctionCall","src":"5235:31:28"},"nativeSrc":"5235:31:28","nodeType":"YulExpressionStatement","src":"5235:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5282:1:28","nodeType":"YulLiteral","src":"5282:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"5285:4:28","nodeType":"YulLiteral","src":"5285:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5275:6:28","nodeType":"YulIdentifier","src":"5275:6:28"},"nativeSrc":"5275:15:28","nodeType":"YulFunctionCall","src":"5275:15:28"},"nativeSrc":"5275:15:28","nodeType":"YulExpressionStatement","src":"5275:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5306:1:28","nodeType":"YulLiteral","src":"5306:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"5309:4:28","nodeType":"YulLiteral","src":"5309:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5299:6:28","nodeType":"YulIdentifier","src":"5299:6:28"},"nativeSrc":"5299:15:28","nodeType":"YulFunctionCall","src":"5299:15:28"},"nativeSrc":"5299:15:28","nodeType":"YulExpressionStatement","src":"5299:15:28"}]},"name":"panic_error_0x41","nativeSrc":"5193:127:28","nodeType":"YulFunctionDefinition","src":"5193:127:28"},{"body":{"nativeSrc":"5566:350:28","nodeType":"YulBlock","src":"5566:350:28","statements":[{"nativeSrc":"5576:27:28","nodeType":"YulAssignment","src":"5576:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"5588:9:28","nodeType":"YulIdentifier","src":"5588:9:28"},{"kind":"number","nativeSrc":"5599:3:28","nodeType":"YulLiteral","src":"5599:3:28","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"5584:3:28","nodeType":"YulIdentifier","src":"5584:3:28"},"nativeSrc":"5584:19:28","nodeType":"YulFunctionCall","src":"5584:19:28"},"variableNames":[{"name":"tail","nativeSrc":"5576:4:28","nodeType":"YulIdentifier","src":"5576:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5619:9:28","nodeType":"YulIdentifier","src":"5619:9:28"},{"name":"value0","nativeSrc":"5630:6:28","nodeType":"YulIdentifier","src":"5630:6:28"}],"functionName":{"name":"mstore","nativeSrc":"5612:6:28","nodeType":"YulIdentifier","src":"5612:6:28"},"nativeSrc":"5612:25:28","nodeType":"YulFunctionCall","src":"5612:25:28"},"nativeSrc":"5612:25:28","nodeType":"YulExpressionStatement","src":"5612:25:28"},{"nativeSrc":"5646:29:28","nodeType":"YulVariableDeclaration","src":"5646:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5664:3:28","nodeType":"YulLiteral","src":"5664:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"5669:1:28","nodeType":"YulLiteral","src":"5669:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5660:3:28","nodeType":"YulIdentifier","src":"5660:3:28"},"nativeSrc":"5660:11:28","nodeType":"YulFunctionCall","src":"5660:11:28"},{"kind":"number","nativeSrc":"5673:1:28","nodeType":"YulLiteral","src":"5673:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5656:3:28","nodeType":"YulIdentifier","src":"5656:3:28"},"nativeSrc":"5656:19:28","nodeType":"YulFunctionCall","src":"5656:19:28"},"variables":[{"name":"_1","nativeSrc":"5650:2:28","nodeType":"YulTypedName","src":"5650:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5695:9:28","nodeType":"YulIdentifier","src":"5695:9:28"},{"kind":"number","nativeSrc":"5706:2:28","nodeType":"YulLiteral","src":"5706:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5691:3:28","nodeType":"YulIdentifier","src":"5691:3:28"},"nativeSrc":"5691:18:28","nodeType":"YulFunctionCall","src":"5691:18:28"},{"arguments":[{"name":"value1","nativeSrc":"5715:6:28","nodeType":"YulIdentifier","src":"5715:6:28"},{"name":"_1","nativeSrc":"5723:2:28","nodeType":"YulIdentifier","src":"5723:2:28"}],"functionName":{"name":"and","nativeSrc":"5711:3:28","nodeType":"YulIdentifier","src":"5711:3:28"},"nativeSrc":"5711:15:28","nodeType":"YulFunctionCall","src":"5711:15:28"}],"functionName":{"name":"mstore","nativeSrc":"5684:6:28","nodeType":"YulIdentifier","src":"5684:6:28"},"nativeSrc":"5684:43:28","nodeType":"YulFunctionCall","src":"5684:43:28"},"nativeSrc":"5684:43:28","nodeType":"YulExpressionStatement","src":"5684:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5747:9:28","nodeType":"YulIdentifier","src":"5747:9:28"},{"kind":"number","nativeSrc":"5758:2:28","nodeType":"YulLiteral","src":"5758:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5743:3:28","nodeType":"YulIdentifier","src":"5743:3:28"},"nativeSrc":"5743:18:28","nodeType":"YulFunctionCall","src":"5743:18:28"},{"arguments":[{"name":"value2","nativeSrc":"5767:6:28","nodeType":"YulIdentifier","src":"5767:6:28"},{"name":"_1","nativeSrc":"5775:2:28","nodeType":"YulIdentifier","src":"5775:2:28"}],"functionName":{"name":"and","nativeSrc":"5763:3:28","nodeType":"YulIdentifier","src":"5763:3:28"},"nativeSrc":"5763:15:28","nodeType":"YulFunctionCall","src":"5763:15:28"}],"functionName":{"name":"mstore","nativeSrc":"5736:6:28","nodeType":"YulIdentifier","src":"5736:6:28"},"nativeSrc":"5736:43:28","nodeType":"YulFunctionCall","src":"5736:43:28"},"nativeSrc":"5736:43:28","nodeType":"YulExpressionStatement","src":"5736:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5799:9:28","nodeType":"YulIdentifier","src":"5799:9:28"},{"kind":"number","nativeSrc":"5810:2:28","nodeType":"YulLiteral","src":"5810:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5795:3:28","nodeType":"YulIdentifier","src":"5795:3:28"},"nativeSrc":"5795:18:28","nodeType":"YulFunctionCall","src":"5795:18:28"},{"name":"value3","nativeSrc":"5815:6:28","nodeType":"YulIdentifier","src":"5815:6:28"}],"functionName":{"name":"mstore","nativeSrc":"5788:6:28","nodeType":"YulIdentifier","src":"5788:6:28"},"nativeSrc":"5788:34:28","nodeType":"YulFunctionCall","src":"5788:34:28"},"nativeSrc":"5788:34:28","nodeType":"YulExpressionStatement","src":"5788:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5842:9:28","nodeType":"YulIdentifier","src":"5842:9:28"},{"kind":"number","nativeSrc":"5853:3:28","nodeType":"YulLiteral","src":"5853:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5838:3:28","nodeType":"YulIdentifier","src":"5838:3:28"},"nativeSrc":"5838:19:28","nodeType":"YulFunctionCall","src":"5838:19:28"},{"name":"value4","nativeSrc":"5859:6:28","nodeType":"YulIdentifier","src":"5859:6:28"}],"functionName":{"name":"mstore","nativeSrc":"5831:6:28","nodeType":"YulIdentifier","src":"5831:6:28"},"nativeSrc":"5831:35:28","nodeType":"YulFunctionCall","src":"5831:35:28"},"nativeSrc":"5831:35:28","nodeType":"YulExpressionStatement","src":"5831:35:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5886:9:28","nodeType":"YulIdentifier","src":"5886:9:28"},{"kind":"number","nativeSrc":"5897:3:28","nodeType":"YulLiteral","src":"5897:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5882:3:28","nodeType":"YulIdentifier","src":"5882:3:28"},"nativeSrc":"5882:19:28","nodeType":"YulFunctionCall","src":"5882:19:28"},{"name":"value5","nativeSrc":"5903:6:28","nodeType":"YulIdentifier","src":"5903:6:28"}],"functionName":{"name":"mstore","nativeSrc":"5875:6:28","nodeType":"YulIdentifier","src":"5875:6:28"},"nativeSrc":"5875:35:28","nodeType":"YulFunctionCall","src":"5875:35:28"},"nativeSrc":"5875:35:28","nodeType":"YulExpressionStatement","src":"5875:35:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"5325:591:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5495:9:28","nodeType":"YulTypedName","src":"5495:9:28","type":""},{"name":"value5","nativeSrc":"5506:6:28","nodeType":"YulTypedName","src":"5506:6:28","type":""},{"name":"value4","nativeSrc":"5514:6:28","nodeType":"YulTypedName","src":"5514:6:28","type":""},{"name":"value3","nativeSrc":"5522:6:28","nodeType":"YulTypedName","src":"5522:6:28","type":""},{"name":"value2","nativeSrc":"5530:6:28","nodeType":"YulTypedName","src":"5530:6:28","type":""},{"name":"value1","nativeSrc":"5538:6:28","nodeType":"YulTypedName","src":"5538:6:28","type":""},{"name":"value0","nativeSrc":"5546:6:28","nodeType":"YulTypedName","src":"5546:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5557:4:28","nodeType":"YulTypedName","src":"5557:4:28","type":""}],"src":"5325:591:28"},{"body":{"nativeSrc":"6050:175:28","nodeType":"YulBlock","src":"6050:175:28","statements":[{"nativeSrc":"6060:26:28","nodeType":"YulAssignment","src":"6060:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6072:9:28","nodeType":"YulIdentifier","src":"6072:9:28"},{"kind":"number","nativeSrc":"6083:2:28","nodeType":"YulLiteral","src":"6083:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6068:3:28","nodeType":"YulIdentifier","src":"6068:3:28"},"nativeSrc":"6068:18:28","nodeType":"YulFunctionCall","src":"6068:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6060:4:28","nodeType":"YulIdentifier","src":"6060:4:28"}]},{"nativeSrc":"6095:29:28","nodeType":"YulVariableDeclaration","src":"6095:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6113:3:28","nodeType":"YulLiteral","src":"6113:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"6118:1:28","nodeType":"YulLiteral","src":"6118:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6109:3:28","nodeType":"YulIdentifier","src":"6109:3:28"},"nativeSrc":"6109:11:28","nodeType":"YulFunctionCall","src":"6109:11:28"},{"kind":"number","nativeSrc":"6122:1:28","nodeType":"YulLiteral","src":"6122:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6105:3:28","nodeType":"YulIdentifier","src":"6105:3:28"},"nativeSrc":"6105:19:28","nodeType":"YulFunctionCall","src":"6105:19:28"},"variables":[{"name":"_1","nativeSrc":"6099:2:28","nodeType":"YulTypedName","src":"6099:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6140:9:28","nodeType":"YulIdentifier","src":"6140:9:28"},{"arguments":[{"name":"value0","nativeSrc":"6155:6:28","nodeType":"YulIdentifier","src":"6155:6:28"},{"name":"_1","nativeSrc":"6163:2:28","nodeType":"YulIdentifier","src":"6163:2:28"}],"functionName":{"name":"and","nativeSrc":"6151:3:28","nodeType":"YulIdentifier","src":"6151:3:28"},"nativeSrc":"6151:15:28","nodeType":"YulFunctionCall","src":"6151:15:28"}],"functionName":{"name":"mstore","nativeSrc":"6133:6:28","nodeType":"YulIdentifier","src":"6133:6:28"},"nativeSrc":"6133:34:28","nodeType":"YulFunctionCall","src":"6133:34:28"},"nativeSrc":"6133:34:28","nodeType":"YulExpressionStatement","src":"6133:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6187:9:28","nodeType":"YulIdentifier","src":"6187:9:28"},{"kind":"number","nativeSrc":"6198:2:28","nodeType":"YulLiteral","src":"6198:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6183:3:28","nodeType":"YulIdentifier","src":"6183:3:28"},"nativeSrc":"6183:18:28","nodeType":"YulFunctionCall","src":"6183:18:28"},{"arguments":[{"name":"value1","nativeSrc":"6207:6:28","nodeType":"YulIdentifier","src":"6207:6:28"},{"name":"_1","nativeSrc":"6215:2:28","nodeType":"YulIdentifier","src":"6215:2:28"}],"functionName":{"name":"and","nativeSrc":"6203:3:28","nodeType":"YulIdentifier","src":"6203:3:28"},"nativeSrc":"6203:15:28","nodeType":"YulFunctionCall","src":"6203:15:28"}],"functionName":{"name":"mstore","nativeSrc":"6176:6:28","nodeType":"YulIdentifier","src":"6176:6:28"},"nativeSrc":"6176:43:28","nodeType":"YulFunctionCall","src":"6176:43:28"},"nativeSrc":"6176:43:28","nodeType":"YulExpressionStatement","src":"6176:43:28"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"5921:304:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6011:9:28","nodeType":"YulTypedName","src":"6011:9:28","type":""},{"name":"value1","nativeSrc":"6022:6:28","nodeType":"YulTypedName","src":"6022:6:28","type":""},{"name":"value0","nativeSrc":"6030:6:28","nodeType":"YulTypedName","src":"6030:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6041:4:28","nodeType":"YulTypedName","src":"6041:4:28","type":""}],"src":"5921:304:28"},{"body":{"nativeSrc":"6387:188:28","nodeType":"YulBlock","src":"6387:188:28","statements":[{"nativeSrc":"6397:26:28","nodeType":"YulAssignment","src":"6397:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6409:9:28","nodeType":"YulIdentifier","src":"6409:9:28"},{"kind":"number","nativeSrc":"6420:2:28","nodeType":"YulLiteral","src":"6420:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6405:3:28","nodeType":"YulIdentifier","src":"6405:3:28"},"nativeSrc":"6405:18:28","nodeType":"YulFunctionCall","src":"6405:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6397:4:28","nodeType":"YulIdentifier","src":"6397:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6439:9:28","nodeType":"YulIdentifier","src":"6439:9:28"},{"arguments":[{"name":"value0","nativeSrc":"6454:6:28","nodeType":"YulIdentifier","src":"6454:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6470:3:28","nodeType":"YulLiteral","src":"6470:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"6475:1:28","nodeType":"YulLiteral","src":"6475:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6466:3:28","nodeType":"YulIdentifier","src":"6466:3:28"},"nativeSrc":"6466:11:28","nodeType":"YulFunctionCall","src":"6466:11:28"},{"kind":"number","nativeSrc":"6479:1:28","nodeType":"YulLiteral","src":"6479:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6462:3:28","nodeType":"YulIdentifier","src":"6462:3:28"},"nativeSrc":"6462:19:28","nodeType":"YulFunctionCall","src":"6462:19:28"}],"functionName":{"name":"and","nativeSrc":"6450:3:28","nodeType":"YulIdentifier","src":"6450:3:28"},"nativeSrc":"6450:32:28","nodeType":"YulFunctionCall","src":"6450:32:28"}],"functionName":{"name":"mstore","nativeSrc":"6432:6:28","nodeType":"YulIdentifier","src":"6432:6:28"},"nativeSrc":"6432:51:28","nodeType":"YulFunctionCall","src":"6432:51:28"},"nativeSrc":"6432:51:28","nodeType":"YulExpressionStatement","src":"6432:51:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6503:9:28","nodeType":"YulIdentifier","src":"6503:9:28"},{"kind":"number","nativeSrc":"6514:2:28","nodeType":"YulLiteral","src":"6514:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6499:3:28","nodeType":"YulIdentifier","src":"6499:3:28"},"nativeSrc":"6499:18:28","nodeType":"YulFunctionCall","src":"6499:18:28"},{"name":"value1","nativeSrc":"6519:6:28","nodeType":"YulIdentifier","src":"6519:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6492:6:28","nodeType":"YulIdentifier","src":"6492:6:28"},"nativeSrc":"6492:34:28","nodeType":"YulFunctionCall","src":"6492:34:28"},"nativeSrc":"6492:34:28","nodeType":"YulExpressionStatement","src":"6492:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6546:9:28","nodeType":"YulIdentifier","src":"6546:9:28"},{"kind":"number","nativeSrc":"6557:2:28","nodeType":"YulLiteral","src":"6557:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6542:3:28","nodeType":"YulIdentifier","src":"6542:3:28"},"nativeSrc":"6542:18:28","nodeType":"YulFunctionCall","src":"6542:18:28"},{"name":"value2","nativeSrc":"6562:6:28","nodeType":"YulIdentifier","src":"6562:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6535:6:28","nodeType":"YulIdentifier","src":"6535:6:28"},"nativeSrc":"6535:34:28","nodeType":"YulFunctionCall","src":"6535:34:28"},"nativeSrc":"6535:34:28","nodeType":"YulExpressionStatement","src":"6535:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6230:345:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6340:9:28","nodeType":"YulTypedName","src":"6340:9:28","type":""},{"name":"value2","nativeSrc":"6351:6:28","nodeType":"YulTypedName","src":"6351:6:28","type":""},{"name":"value1","nativeSrc":"6359:6:28","nodeType":"YulTypedName","src":"6359:6:28","type":""},{"name":"value0","nativeSrc":"6367:6:28","nodeType":"YulTypedName","src":"6367:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6378:4:28","nodeType":"YulTypedName","src":"6378:4:28","type":""}],"src":"6230:345:28"},{"body":{"nativeSrc":"6628:174:28","nodeType":"YulBlock","src":"6628:174:28","statements":[{"nativeSrc":"6638:16:28","nodeType":"YulAssignment","src":"6638:16:28","value":{"arguments":[{"name":"x","nativeSrc":"6649:1:28","nodeType":"YulIdentifier","src":"6649:1:28"},{"name":"y","nativeSrc":"6652:1:28","nodeType":"YulIdentifier","src":"6652:1:28"}],"functionName":{"name":"add","nativeSrc":"6645:3:28","nodeType":"YulIdentifier","src":"6645:3:28"},"nativeSrc":"6645:9:28","nodeType":"YulFunctionCall","src":"6645:9:28"},"variableNames":[{"name":"sum","nativeSrc":"6638:3:28","nodeType":"YulIdentifier","src":"6638:3:28"}]},{"body":{"nativeSrc":"6685:111:28","nodeType":"YulBlock","src":"6685:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6706:1:28","nodeType":"YulLiteral","src":"6706:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6713:3:28","nodeType":"YulLiteral","src":"6713:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"6718:10:28","nodeType":"YulLiteral","src":"6718:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6709:3:28","nodeType":"YulIdentifier","src":"6709:3:28"},"nativeSrc":"6709:20:28","nodeType":"YulFunctionCall","src":"6709:20:28"}],"functionName":{"name":"mstore","nativeSrc":"6699:6:28","nodeType":"YulIdentifier","src":"6699:6:28"},"nativeSrc":"6699:31:28","nodeType":"YulFunctionCall","src":"6699:31:28"},"nativeSrc":"6699:31:28","nodeType":"YulExpressionStatement","src":"6699:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6750:1:28","nodeType":"YulLiteral","src":"6750:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"6753:4:28","nodeType":"YulLiteral","src":"6753:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6743:6:28","nodeType":"YulIdentifier","src":"6743:6:28"},"nativeSrc":"6743:15:28","nodeType":"YulFunctionCall","src":"6743:15:28"},"nativeSrc":"6743:15:28","nodeType":"YulExpressionStatement","src":"6743:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6778:1:28","nodeType":"YulLiteral","src":"6778:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"6781:4:28","nodeType":"YulLiteral","src":"6781:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6771:6:28","nodeType":"YulIdentifier","src":"6771:6:28"},"nativeSrc":"6771:15:28","nodeType":"YulFunctionCall","src":"6771:15:28"},"nativeSrc":"6771:15:28","nodeType":"YulExpressionStatement","src":"6771:15:28"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"6669:1:28","nodeType":"YulIdentifier","src":"6669:1:28"},{"name":"sum","nativeSrc":"6672:3:28","nodeType":"YulIdentifier","src":"6672:3:28"}],"functionName":{"name":"gt","nativeSrc":"6666:2:28","nodeType":"YulIdentifier","src":"6666:2:28"},"nativeSrc":"6666:10:28","nodeType":"YulFunctionCall","src":"6666:10:28"},"nativeSrc":"6663:133:28","nodeType":"YulIf","src":"6663:133:28"}]},"name":"checked_add_t_uint256","nativeSrc":"6580:222:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6611:1:28","nodeType":"YulTypedName","src":"6611:1:28","type":""},{"name":"y","nativeSrc":"6614:1:28","nodeType":"YulTypedName","src":"6614:1:28","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"6620:3:28","nodeType":"YulTypedName","src":"6620:3:28","type":""}],"src":"6580:222:28"},{"body":{"nativeSrc":"7020:276:28","nodeType":"YulBlock","src":"7020:276:28","statements":[{"nativeSrc":"7030:27:28","nodeType":"YulAssignment","src":"7030:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"7042:9:28","nodeType":"YulIdentifier","src":"7042:9:28"},{"kind":"number","nativeSrc":"7053:3:28","nodeType":"YulLiteral","src":"7053:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7038:3:28","nodeType":"YulIdentifier","src":"7038:3:28"},"nativeSrc":"7038:19:28","nodeType":"YulFunctionCall","src":"7038:19:28"},"variableNames":[{"name":"tail","nativeSrc":"7030:4:28","nodeType":"YulIdentifier","src":"7030:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7073:9:28","nodeType":"YulIdentifier","src":"7073:9:28"},{"name":"value0","nativeSrc":"7084:6:28","nodeType":"YulIdentifier","src":"7084:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7066:6:28","nodeType":"YulIdentifier","src":"7066:6:28"},"nativeSrc":"7066:25:28","nodeType":"YulFunctionCall","src":"7066:25:28"},"nativeSrc":"7066:25:28","nodeType":"YulExpressionStatement","src":"7066:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7111:9:28","nodeType":"YulIdentifier","src":"7111:9:28"},{"kind":"number","nativeSrc":"7122:2:28","nodeType":"YulLiteral","src":"7122:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7107:3:28","nodeType":"YulIdentifier","src":"7107:3:28"},"nativeSrc":"7107:18:28","nodeType":"YulFunctionCall","src":"7107:18:28"},{"name":"value1","nativeSrc":"7127:6:28","nodeType":"YulIdentifier","src":"7127:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7100:6:28","nodeType":"YulIdentifier","src":"7100:6:28"},"nativeSrc":"7100:34:28","nodeType":"YulFunctionCall","src":"7100:34:28"},"nativeSrc":"7100:34:28","nodeType":"YulExpressionStatement","src":"7100:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7154:9:28","nodeType":"YulIdentifier","src":"7154:9:28"},{"kind":"number","nativeSrc":"7165:2:28","nodeType":"YulLiteral","src":"7165:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7150:3:28","nodeType":"YulIdentifier","src":"7150:3:28"},"nativeSrc":"7150:18:28","nodeType":"YulFunctionCall","src":"7150:18:28"},{"name":"value2","nativeSrc":"7170:6:28","nodeType":"YulIdentifier","src":"7170:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7143:6:28","nodeType":"YulIdentifier","src":"7143:6:28"},"nativeSrc":"7143:34:28","nodeType":"YulFunctionCall","src":"7143:34:28"},"nativeSrc":"7143:34:28","nodeType":"YulExpressionStatement","src":"7143:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7197:9:28","nodeType":"YulIdentifier","src":"7197:9:28"},{"kind":"number","nativeSrc":"7208:2:28","nodeType":"YulLiteral","src":"7208:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7193:3:28","nodeType":"YulIdentifier","src":"7193:3:28"},"nativeSrc":"7193:18:28","nodeType":"YulFunctionCall","src":"7193:18:28"},{"name":"value3","nativeSrc":"7213:6:28","nodeType":"YulIdentifier","src":"7213:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7186:6:28","nodeType":"YulIdentifier","src":"7186:6:28"},"nativeSrc":"7186:34:28","nodeType":"YulFunctionCall","src":"7186:34:28"},"nativeSrc":"7186:34:28","nodeType":"YulExpressionStatement","src":"7186:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7240:9:28","nodeType":"YulIdentifier","src":"7240:9:28"},{"kind":"number","nativeSrc":"7251:3:28","nodeType":"YulLiteral","src":"7251:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7236:3:28","nodeType":"YulIdentifier","src":"7236:3:28"},"nativeSrc":"7236:19:28","nodeType":"YulFunctionCall","src":"7236:19:28"},{"arguments":[{"name":"value4","nativeSrc":"7261:6:28","nodeType":"YulIdentifier","src":"7261:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7277:3:28","nodeType":"YulLiteral","src":"7277:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"7282:1:28","nodeType":"YulLiteral","src":"7282:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7273:3:28","nodeType":"YulIdentifier","src":"7273:3:28"},"nativeSrc":"7273:11:28","nodeType":"YulFunctionCall","src":"7273:11:28"},{"kind":"number","nativeSrc":"7286:1:28","nodeType":"YulLiteral","src":"7286:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7269:3:28","nodeType":"YulIdentifier","src":"7269:3:28"},"nativeSrc":"7269:19:28","nodeType":"YulFunctionCall","src":"7269:19:28"}],"functionName":{"name":"and","nativeSrc":"7257:3:28","nodeType":"YulIdentifier","src":"7257:3:28"},"nativeSrc":"7257:32:28","nodeType":"YulFunctionCall","src":"7257:32:28"}],"functionName":{"name":"mstore","nativeSrc":"7229:6:28","nodeType":"YulIdentifier","src":"7229:6:28"},"nativeSrc":"7229:61:28","nodeType":"YulFunctionCall","src":"7229:61:28"},"nativeSrc":"7229:61:28","nodeType":"YulExpressionStatement","src":"7229:61:28"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"6807:489:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6957:9:28","nodeType":"YulTypedName","src":"6957:9:28","type":""},{"name":"value4","nativeSrc":"6968:6:28","nodeType":"YulTypedName","src":"6968:6:28","type":""},{"name":"value3","nativeSrc":"6976:6:28","nodeType":"YulTypedName","src":"6976:6:28","type":""},{"name":"value2","nativeSrc":"6984:6:28","nodeType":"YulTypedName","src":"6984:6:28","type":""},{"name":"value1","nativeSrc":"6992:6:28","nodeType":"YulTypedName","src":"6992:6:28","type":""},{"name":"value0","nativeSrc":"7000:6:28","nodeType":"YulTypedName","src":"7000:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7011:4:28","nodeType":"YulTypedName","src":"7011:4:28","type":""}],"src":"6807:489:28"},{"body":{"nativeSrc":"7482:217:28","nodeType":"YulBlock","src":"7482:217:28","statements":[{"nativeSrc":"7492:27:28","nodeType":"YulAssignment","src":"7492:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"7504:9:28","nodeType":"YulIdentifier","src":"7504:9:28"},{"kind":"number","nativeSrc":"7515:3:28","nodeType":"YulLiteral","src":"7515:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7500:3:28","nodeType":"YulIdentifier","src":"7500:3:28"},"nativeSrc":"7500:19:28","nodeType":"YulFunctionCall","src":"7500:19:28"},"variableNames":[{"name":"tail","nativeSrc":"7492:4:28","nodeType":"YulIdentifier","src":"7492:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7535:9:28","nodeType":"YulIdentifier","src":"7535:9:28"},{"name":"value0","nativeSrc":"7546:6:28","nodeType":"YulIdentifier","src":"7546:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7528:6:28","nodeType":"YulIdentifier","src":"7528:6:28"},"nativeSrc":"7528:25:28","nodeType":"YulFunctionCall","src":"7528:25:28"},"nativeSrc":"7528:25:28","nodeType":"YulExpressionStatement","src":"7528:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7573:9:28","nodeType":"YulIdentifier","src":"7573:9:28"},{"kind":"number","nativeSrc":"7584:2:28","nodeType":"YulLiteral","src":"7584:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7569:3:28","nodeType":"YulIdentifier","src":"7569:3:28"},"nativeSrc":"7569:18:28","nodeType":"YulFunctionCall","src":"7569:18:28"},{"arguments":[{"name":"value1","nativeSrc":"7593:6:28","nodeType":"YulIdentifier","src":"7593:6:28"},{"kind":"number","nativeSrc":"7601:4:28","nodeType":"YulLiteral","src":"7601:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7589:3:28","nodeType":"YulIdentifier","src":"7589:3:28"},"nativeSrc":"7589:17:28","nodeType":"YulFunctionCall","src":"7589:17:28"}],"functionName":{"name":"mstore","nativeSrc":"7562:6:28","nodeType":"YulIdentifier","src":"7562:6:28"},"nativeSrc":"7562:45:28","nodeType":"YulFunctionCall","src":"7562:45:28"},"nativeSrc":"7562:45:28","nodeType":"YulExpressionStatement","src":"7562:45:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7627:9:28","nodeType":"YulIdentifier","src":"7627:9:28"},{"kind":"number","nativeSrc":"7638:2:28","nodeType":"YulLiteral","src":"7638:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7623:3:28","nodeType":"YulIdentifier","src":"7623:3:28"},"nativeSrc":"7623:18:28","nodeType":"YulFunctionCall","src":"7623:18:28"},{"name":"value2","nativeSrc":"7643:6:28","nodeType":"YulIdentifier","src":"7643:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7616:6:28","nodeType":"YulIdentifier","src":"7616:6:28"},"nativeSrc":"7616:34:28","nodeType":"YulFunctionCall","src":"7616:34:28"},"nativeSrc":"7616:34:28","nodeType":"YulExpressionStatement","src":"7616:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7670:9:28","nodeType":"YulIdentifier","src":"7670:9:28"},{"kind":"number","nativeSrc":"7681:2:28","nodeType":"YulLiteral","src":"7681:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7666:3:28","nodeType":"YulIdentifier","src":"7666:3:28"},"nativeSrc":"7666:18:28","nodeType":"YulFunctionCall","src":"7666:18:28"},{"name":"value3","nativeSrc":"7686:6:28","nodeType":"YulIdentifier","src":"7686:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7659:6:28","nodeType":"YulIdentifier","src":"7659:6:28"},"nativeSrc":"7659:34:28","nodeType":"YulFunctionCall","src":"7659:34:28"},"nativeSrc":"7659:34:28","nodeType":"YulExpressionStatement","src":"7659:34:28"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"7301:398:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7427:9:28","nodeType":"YulTypedName","src":"7427:9:28","type":""},{"name":"value3","nativeSrc":"7438:6:28","nodeType":"YulTypedName","src":"7438:6:28","type":""},{"name":"value2","nativeSrc":"7446:6:28","nodeType":"YulTypedName","src":"7446:6:28","type":""},{"name":"value1","nativeSrc":"7454:6:28","nodeType":"YulTypedName","src":"7454:6:28","type":""},{"name":"value0","nativeSrc":"7462:6:28","nodeType":"YulTypedName","src":"7462:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7473:4:28","nodeType":"YulTypedName","src":"7473:4:28","type":""}],"src":"7301:398:28"},{"body":{"nativeSrc":"7736:95:28","nodeType":"YulBlock","src":"7736:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7753:1:28","nodeType":"YulLiteral","src":"7753:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"7760:3:28","nodeType":"YulLiteral","src":"7760:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"7765:10:28","nodeType":"YulLiteral","src":"7765:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"7756:3:28","nodeType":"YulIdentifier","src":"7756:3:28"},"nativeSrc":"7756:20:28","nodeType":"YulFunctionCall","src":"7756:20:28"}],"functionName":{"name":"mstore","nativeSrc":"7746:6:28","nodeType":"YulIdentifier","src":"7746:6:28"},"nativeSrc":"7746:31:28","nodeType":"YulFunctionCall","src":"7746:31:28"},"nativeSrc":"7746:31:28","nodeType":"YulExpressionStatement","src":"7746:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7793:1:28","nodeType":"YulLiteral","src":"7793:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"7796:4:28","nodeType":"YulLiteral","src":"7796:4:28","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"7786:6:28","nodeType":"YulIdentifier","src":"7786:6:28"},"nativeSrc":"7786:15:28","nodeType":"YulFunctionCall","src":"7786:15:28"},"nativeSrc":"7786:15:28","nodeType":"YulExpressionStatement","src":"7786:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7817:1:28","nodeType":"YulLiteral","src":"7817:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7820:4:28","nodeType":"YulLiteral","src":"7820:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7810:6:28","nodeType":"YulIdentifier","src":"7810:6:28"},"nativeSrc":"7810:15:28","nodeType":"YulFunctionCall","src":"7810:15:28"},"nativeSrc":"7810:15:28","nodeType":"YulExpressionStatement","src":"7810:15:28"}]},"name":"panic_error_0x21","nativeSrc":"7704:127:28","nodeType":"YulFunctionDefinition","src":"7704:127:28"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3677":[{"length":32,"start":1766}],"3679":[{"length":32,"start":1724}],"3681":[{"length":32,"start":1682}],"3683":[{"length":32,"start":1847}],"3685":[{"length":32,"start":1887}],"3688":[{"length":32,"start":2156}],"3691":[{"length":32,"start":2201}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a257806395d89b411161007157806395d89b411461021c578063a9059cbb14610224578063d505accf14610237578063dd62ed3e1461024a578063f2fde38b1461028357600080fd5b8063715018a6146101cb5780637ecebe00146101d357806384b0196e146101e65780638da5cb5b1461020157600080fd5b8063313ce567116100de578063313ce567146101765780633644e5151461018557806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610296565b6040516101259190610df9565b60405180910390f35b61014161013c366004610e2f565b610328565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610e59565b610342565b60405160128152602001610125565b610155610366565b6101a061019b366004610e2f565b610375565b005b6101556101b0366004610e95565b6001600160a01b031660009081526020819052604090205490565b6101a0610383565b6101556101e1366004610e95565b610397565b6101ee6103b5565b6040516101259796959493929190610eb0565b6005546040516001600160a01b039091168152602001610125565b6101186103fb565b610141610232366004610e2f565b61040a565b6101a0610245366004610f49565b610418565b610155610258366004610fbc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101a0610291366004610e95565b610557565b6060600380546102a590610fef565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190610fef565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050905090565b600033610336818585610595565b60019150505b92915050565b6000336103508582856105a7565b61035b858585610626565b506001949350505050565b6000610370610685565b905090565b61037f82826107b0565b5050565b61038b6107e6565b6103956000610813565b565b6001600160a01b03811660009081526008602052604081205461033c565b6000606080600080600060606103c9610865565b6103d1610892565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102a590610fef565b600033610336818585610626565b834211156104415760405163313c898160e11b8152600481018590526024015b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861048e8c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006104e9826108bf565b905060006104f9828787876108ec565b9050896001600160a01b0316816001600160a01b031614610540576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610438565b61054b8a8a8a610595565b50505050505050505050565b61055f6107e6565b6001600160a01b03811661058957604051631e4fbdf760e01b815260006004820152602401610438565b61059281610813565b50565b6105a2838383600161091a565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610620578181101561061157604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610438565b6106208484848403600061091a565b50505050565b6001600160a01b03831661065057604051634b637e8f60e11b815260006004820152602401610438565b6001600160a01b03821661067a5760405163ec442f0560e01b815260006004820152602401610438565b6105a28383836109ef565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156106de57507f000000000000000000000000000000000000000000000000000000000000000046145b1561070857507f000000000000000000000000000000000000000000000000000000000000000090565b610370604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b0382166107da5760405163ec442f0560e01b815260006004820152602401610438565b61037f600083836109ef565b6005546001600160a01b031633146103955760405163118cdaa760e01b8152336004820152602401610438565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606103707f00000000000000000000000000000000000000000000000000000000000000006006610b19565b60606103707f00000000000000000000000000000000000000000000000000000000000000006007610b19565b600061033c6108cc610685565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806108fe88888888610bc4565b92509250925061090e8282610c93565b50909695505050505050565b6001600160a01b0384166109445760405163e602df0560e01b815260006004820152602401610438565b6001600160a01b03831661096e57604051634a1406b160e11b815260006004820152602401610438565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561062057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109e191815260200190565b60405180910390a350505050565b6001600160a01b038316610a1a578060026000828254610a0f9190611029565b90915550610a8c9050565b6001600160a01b03831660009081526020819052604090205481811015610a6d5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610438565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610aa857600280548290039055610ac7565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b0c91815260200190565b60405180910390a3505050565b606060ff8314610b3357610b2c83610d4c565b905061033c565b818054610b3f90610fef565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6b90610fef565b8015610bb85780601f10610b8d57610100808354040283529160200191610bb8565b820191906000526020600020905b815481529060010190602001808311610b9b57829003601f168201915b5050505050905061033c565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610bff5750600091506003905082610c89565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610c53573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c7f57506000925060019150829050610c89565b9250600091508190505b9450945094915050565b6000826003811115610ca757610ca761104a565b03610cb0575050565b6001826003811115610cc457610cc461104a565b03610ce25760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610cf657610cf661104a565b03610d175760405163fce698f760e01b815260048101829052602401610438565b6003826003811115610d2b57610d2b61104a565b0361037f576040516335e2f38360e21b815260048101829052602401610438565b60606000610d5983610d8b565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561033c57604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015610dd957602081850181015186830182015201610dbd565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e0c6020830184610db3565b9392505050565b80356001600160a01b0381168114610e2a57600080fd5b919050565b60008060408385031215610e4257600080fd5b610e4b83610e13565b946020939093013593505050565b600080600060608486031215610e6e57600080fd5b610e7784610e13565b9250610e8560208501610e13565b9150604084013590509250925092565b600060208284031215610ea757600080fd5b610e0c82610e13565b60ff60f81b881681526000602060e06020840152610ed160e084018a610db3565b8381036040850152610ee3818a610db3565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015610f3757835183529284019291840191600101610f1b565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215610f6457600080fd5b610f6d88610e13565b9650610f7b60208901610e13565b95506040880135945060608801359350608088013560ff81168114610f9f57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610fcf57600080fd5b610fd883610e13565b9150610fe660208401610e13565b90509250929050565b600181811c9082168061100357607f821691505b60208210810361102357634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561033c57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea264697066735822122033ea9e89d0ae8df9635b6baab79e3254b82b4d16cbd8b59d1e16098d1a74559764736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x383 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x141 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A5 SWAP1 PUSH2 0xFEF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D1 SWAP1 PUSH2 0xFEF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x301 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x336 DUP2 DUP6 DUP6 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x350 DUP6 DUP3 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x35B DUP6 DUP6 DUP6 PUSH2 0x626 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x370 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x37F DUP3 DUP3 PUSH2 0x7B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x38B PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x395 PUSH1 0x0 PUSH2 0x813 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x3C9 PUSH2 0x865 JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A5 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x336 DUP2 DUP6 DUP6 PUSH2 0x626 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x48E DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x4E9 DUP3 PUSH2 0x8BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4F9 DUP3 DUP8 DUP8 DUP8 PUSH2 0x8EC JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x54B DUP11 DUP11 DUP11 PUSH2 0x595 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x55F PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x813 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5A2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x91A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x620 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x620 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x91A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x5A2 DUP4 DUP4 DUP4 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x6DE JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x708 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x370 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x37F PUSH1 0x0 DUP4 DUP4 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x370 PUSH32 0x0 PUSH1 0x6 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x370 PUSH32 0x0 PUSH1 0x7 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C PUSH2 0x8CC PUSH2 0x685 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x8FE DUP9 DUP9 DUP9 DUP9 PUSH2 0xBC4 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x90E DUP3 DUP3 PUSH2 0xC93 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x620 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9E1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA1A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA0F SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA8C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAA8 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB0C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xB33 JUMPI PUSH2 0xB2C DUP4 PUSH2 0xD4C JUMP JUMPDEST SWAP1 POP PUSH2 0x33C JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xB3F SWAP1 PUSH2 0xFEF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6B SWAP1 PUSH2 0xFEF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xBFF JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7F JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xC89 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA7 PUSH2 0x104A JUMP JUMPDEST SUB PUSH2 0xCB0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCC4 JUMPI PUSH2 0xCC4 PUSH2 0x104A JUMP JUMPDEST SUB PUSH2 0xCE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCF6 JUMPI PUSH2 0xCF6 PUSH2 0x104A JUMP JUMPDEST SUB PUSH2 0xD17 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD2B JUMPI PUSH2 0xD2B PUSH2 0x104A JUMP JUMPDEST SUB PUSH2 0x37F JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD59 DUP4 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xDBD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE0C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4B DUP4 PUSH2 0xE13 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE77 DUP5 PUSH2 0xE13 JUMP JUMPDEST SWAP3 POP PUSH2 0xE85 PUSH1 0x20 DUP6 ADD PUSH2 0xE13 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0C DUP3 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xED1 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xDB3 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xEE3 DUP2 DUP11 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF37 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF1B JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF6D DUP9 PUSH2 0xE13 JUMP JUMPDEST SWAP7 POP PUSH2 0xF7B PUSH1 0x20 DUP10 ADD PUSH2 0xE13 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xF9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD8 DUP4 PUSH2 0xE13 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE6 PUSH1 0x20 DUP5 ADD PUSH2 0xE13 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1003 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1023 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x33C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xEA SWAP15 DUP10 0xD0 0xAE DUP14 0xF9 PUSH4 0x5B6BAAB7 SWAP15 ORIGIN SLOAD 0xB8 0x2B 0x4D AND 0xCB 0xD8 0xB5 SWAP14 0x1E AND MULMOD DUP14 BYTE PUSH21 0x559764736F6C634300081800330000000000000000 ","sourceMap":"298:301:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:28;;1262:22;1244:41;;1232:2;1217:18;3998:186:6;1104:187:28;2849:97:6;2927:12;;2849:97;;;1442:25:28;;;1430:2;1415:18;2849:97:6;1296:177:28;4776:244:6;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;1953:36:28;;1941:2;1926:18;2707:82:6;1811:184:28;2659:112:8;;;:::i;511:85:25:-;;;;;;:::i;:::-;;:::i;:::-;;3004:116:6;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:6;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;:::i;2409:143:8:-;;;;;;:::i;:::-;;:::i;5144:557:19:-;;;:::i;:::-;;;;;;;;;;;;;:::i;1638:85:0:-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;3783:51:28;;3771:2;3756:18;1638:85:0;3637:203:28;1981:93:6;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;1683:672:8:-;;;;;;:::i;:::-;;:::i;3551:140:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:6;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;2543:215:0;;;;;;:::i;:::-;;:::i;1779:89:6:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:12;4125:31:6;735:10:12;4141:7:6;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:12;4919:37:6;4935:4;735:10:12;4950:5:6;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:6;;4776:244;-1:-1:-1;;;;4776:244:6:o;2659:112:8:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;511:85:25:-;571:17;577:2;581:6;571:5;:17::i;:::-;511:85;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2409:143:8:-;-1:-1:-1;;;;;624:14:13;;2500:7:8;624:14:13;;;:7;:14;;;;;;2526:19:8;538:107:13;5144:557:19;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:19;;;-1:-1:-1;5482:212:19;;-1:-1:-1;5590:13:19;;-1:-1:-1;5625:4:19;;-1:-1:-1;5652:1:19;-1:-1:-1;5668:16:19;-1:-1:-1;5482:212:19;-1:-1:-1;5144:557:19:o;1981:93:6:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:12;3438:27:6;735:10:12;3455:2:6;3459:5;3438:9;:27::i;1683:672:8:-;1904:8;1886:15;:26;1882:97;;;1935:33;;-1:-1:-1;;;1935:33:8;;;;;1442:25:28;;;1415:18;;1935:33:8;;;;;;;;1882:97;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;-1:-1:-1;;;;;1121:14:13;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2071:16:8;2020:78;;;;;;5612:25:28;;;;-1:-1:-1;;;;;5711:15:28;;;5691:18;;;5684:43;5763:15;;;;5743:18;;;5736:43;5795:18;;;5788:34;5838:19;;;5831:35;5882:19;;;5875:35;;;5584:19;;2020:78:8;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;-1:-1:-1;;;;;2223:15:8;:6;-1:-1:-1;;;;;2223:15:8;;2219:88;;2261:35;;-1:-1:-1;;;2261:35:8;;-1:-1:-1;;;;;6151:15:28;;;2261:35:8;;;6133:34:28;6203:15;;6183:18;;;6176:43;6068:18;;2261:35:8;5921:304:28;2219:88:8;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3783:51:28::0;3756:18;;2672:31:0::1;3637:203:28::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8726:128:6:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:6;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:6;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:6;;-1:-1:-1;;;;;6450:32:28;;10687:60:6;;;6432:51:28;6499:18;;;6492:34;;;6542:18;;;6535:34;;;6405:18;;10687:60:6;6230:345:28;10632:130:6;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:6;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:6;;5544:1;5517:30;;;3783:51:28;3756:18;;5517:30:6;3637:203:28;5472:86:6;-1:-1:-1;;;;;5571:16:6;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:6;;5639:1;5610:32;;;3783:51:28;3756:18;;5610:32:6;3637:203:28;5567:86:6;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;3845:262:19:-;3898:7;3929:4;-1:-1:-1;;;;;3938:11:19;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:19;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;7066:25:28;4226:11:19;7107:18:28;;;7100:34;;;;4239:14:19;7150:18:28;;;7143:34;4255:13:19;7193:18:28;;;7186:34;4278:4:19;7236:19:28;;;7229:61;4168:7:19;;7038:19:28;;4204:80:19;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;7458:208:6;-1:-1:-1;;;;;7528:21:6;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:6;;7601:1;7572:32;;;3783:51:28;3756:18;;7572:32:6;3637:203:28;7524:91:6;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:12;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:12;1901:40:0;;;3783:51:28;3756:18;;1901:40:0;3637:203:28;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;6021:126:19:-;6067:13;6099:41;:5;6126:13;6099:26;:41::i;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;4917:176::-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3501:4:20;3495:11;-1:-1:-1;;;3519:23:20;;3571:4;3562:14;;3555:39;;;;3623:4;3614:14;;3607:34;3679:4;3664:20;;;3326:374;6887:260:18;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:18;;6887:260;-1:-1:-1;;;;;;6887:260:18:o;9701:432:6:-;-1:-1:-1;;;;;9813:19:6;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:6;;9884:1;9855:32;;;3783:51:28;3756:18;;9855:32:6;3637:203:28;9809:89:6;-1:-1:-1;;;;;9911:21:6;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:6;;9983:1;9955:31;;;3783:51:28;3756:18;;9955:31:6;3637:203:28;9907:90:6;-1:-1:-1;;;;;10006:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:6;10094:5;-1:-1:-1;;;;;10085:31:6;;10110:5;10085:31;;;;1442:25:28;;1430:2;1415:18;;1296:177;10085:31:6;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:6;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:6;;-1:-1:-1;6093:540:6;;-1:-1:-1;;;;;6307:15:6;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:6;;-1:-1:-1;;;;;6450:32:28;;6386:50:6;;;6432:51:28;6499:18;;;6492:34;;;6542:18;;;6535:34;;;6405:18;;6386:50:6;6230:345:28;6336:115:6;-1:-1:-1;;;;;6571:15:6;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:6;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:6;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:6;7092:4;-1:-1:-1;;;;;7083:25:6;;7102:5;7083:25;;;;1442::28;;1430:2;1415:18;;1296:177;7083:25:6;;;;;;;;6008:1107;;;:::o;3358:267:15:-;3452:13;1390:66;3481:46;;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:18;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:18;;-1:-1:-1;6385:30:18;;-1:-1:-1;6417:1:18;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;7528:25:28;;;7601:4;7589:17;;7569:18;;;7562:45;;;;7623:18;;;7616:34;;;7666:18;;;7659:34;;;6541:24:18;;7500:19:28;;6541:24:18;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:18;;-1:-1:-1;;6541:24:18;;;-1:-1:-1;;;;;;;6579:20:18;;6575:113;;-1:-1:-1;6631:1:18;;-1:-1:-1;6635:29:18;;-1:-1:-1;6631:1:18;;-1:-1:-1;6615:62:18;;6575:113;6706:6;-1:-1:-1;6714:20:18;;-1:-1:-1;6714:20:18;;-1:-1:-1;5203:1551:18;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:18;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:18;;;;;1442:25:28;;;1415:18;;7634:46:18;1296:177:28;7563:243:18;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:18;;;;;1442:25:28;;;1415:18;;7763:32:18;1296:177:28;2078:378:15;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:15;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:15;;;-1:-1:-1;2408:4:15;2399:14;;2392:28;;;;-1:-1:-1;2363:16:15;2078:378::o;2528:245::-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:15;;;;;;;;;;;14:423:28;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:28:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:28;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:28:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2182:186::-;2241:6;2294:2;2282:9;2273:7;2269:23;2265:32;2262:52;;;2310:1;2307;2300:12;2262:52;2333:29;2352:9;2333:29;:::i;2373:1259::-;2779:3;2774;2770:13;2762:6;2758:26;2747:9;2740:45;2721:4;2804:2;2842:3;2837:2;2826:9;2822:18;2815:31;2869:46;2910:3;2899:9;2895:19;2887:6;2869:46;:::i;:::-;2963:9;2955:6;2951:22;2946:2;2935:9;2931:18;2924:50;2997:33;3023:6;3015;2997:33;:::i;:::-;3061:2;3046:18;;3039:34;;;-1:-1:-1;;;;;3110:32:28;;3104:3;3089:19;;3082:61;3130:3;3159:19;;3152:35;;;3224:22;;;3218:3;3203:19;;3196:51;3296:13;;3318:22;;;3368:2;3394:15;;;;-1:-1:-1;3356:15:28;;;;-1:-1:-1;3437:169:28;3451:6;3448:1;3445:13;3437:169;;;3512:13;;3500:26;;3581:15;;;;3546:12;;;;3473:1;3466:9;3437:169;;;-1:-1:-1;3623:3:28;;2373:1259;-1:-1:-1;;;;;;;;;;;;2373:1259:28:o;3845:693::-;3956:6;3964;3972;3980;3988;3996;4004;4057:3;4045:9;4036:7;4032:23;4028:33;4025:53;;;4074:1;4071;4064:12;4025:53;4097:29;4116:9;4097:29;:::i;:::-;4087:39;;4145:38;4179:2;4168:9;4164:18;4145:38;:::i;:::-;4135:48;;4230:2;4219:9;4215:18;4202:32;4192:42;;4281:2;4270:9;4266:18;4253:32;4243:42;;4335:3;4324:9;4320:19;4307:33;4380:4;4373:5;4369:16;4362:5;4359:27;4349:55;;4400:1;4397;4390:12;4349:55;3845:693;;;;-1:-1:-1;3845:693:28;;;;4423:5;4475:3;4460:19;;4447:33;;-1:-1:-1;4527:3:28;4512:19;;;4499:33;;3845:693;-1:-1:-1;;3845:693:28:o;4543:260::-;4611:6;4619;4672:2;4660:9;4651:7;4647:23;4643:32;4640:52;;;4688:1;4685;4678:12;4640:52;4711:29;4730:9;4711:29;:::i;:::-;4701:39;;4759:38;4793:2;4782:9;4778:18;4759:38;:::i;:::-;4749:48;;4543:260;;;;;:::o;4808:380::-;4887:1;4883:12;;;;4930;;;4951:61;;5005:4;4997:6;4993:17;4983:27;;4951:61;5058:2;5050:6;5047:14;5027:18;5024:38;5021:161;;5104:10;5099:3;5095:20;5092:1;5085:31;5139:4;5136:1;5129:15;5167:4;5164:1;5157:15;5021:161;;4808:380;;;:::o;6580:222::-;6645:9;;;6666:10;;;6663:133;;;6718:10;6713:3;6709:20;6706:1;6699:31;6753:4;6750:1;6743:15;6781:4;6778:1;6771:15;7704:127;7765:10;7760:3;7756:20;7753:1;7746:31;7796:4;7793:1;7786:15;7820:4;7817:1;7810:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardToken.sol\":\"RewardToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/RewardToken.sol\":{\"keccak256\":\"0x725fc48e3cdccb51c4108dfdeb5ef510f0301cebdccb3ad15801052819fa0330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8823e10da3a86a262d8a55b9a2ab6b645a4e3a4d9c2b208ca0fc26c8766b0bf\",\"dweb:/ipfs/QmWjHnKXEqJUTBpoQsaSYZMdCRVFkEn3gPGpuSDDsv7vTZ\"]}},\"version\":1}"}},"contracts/StakingDapp.sol":{"IRewardToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","mint(address,uint256)":"40c10f19","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingDapp.sol\":\"IRewardToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/StakingDapp.sol\":{\"keccak256\":\"0x15eda7303b65c3f638d99f6eff600dfcb0ab9374985dee1585ee235870a12a53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c06d4d96343e79a929afccfa71fa9e6befd69162968424d691d7d4420264efae\",\"dweb:/ipfs/QmVhyeD2U439xyaavQ1SZr4UDcHA8JFGFjBmkdPdH9nLrr\"]}},\"version\":1}"},"StakingDapp":{"abi":[{"inputs":[{"internalType":"address","name":"_stakingToken","type":"address"},{"internalType":"address","name":"_rewardToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Unstaked","type":"event"},{"inputs":[],"name":"REWARD_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REWARD_INTERVAL","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getRewardAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getStakedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewardBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardToken","outputs":[{"internalType":"contract IRewardToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakes","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"lastRewardTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7634":{"entryPoint":null,"id":7634,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":253,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":333,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":361,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:1051:28","nodeType":"YulBlock","src":"0:1051:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"74:117:28","nodeType":"YulBlock","src":"74:117:28","statements":[{"nativeSrc":"84:22:28","nodeType":"YulAssignment","src":"84:22:28","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:28","nodeType":"YulIdentifier","src":"99:6:28"}],"functionName":{"name":"mload","nativeSrc":"93:5:28","nodeType":"YulIdentifier","src":"93:5:28"},"nativeSrc":"93:13:28","nodeType":"YulFunctionCall","src":"93:13:28"},"variableNames":[{"name":"value","nativeSrc":"84:5:28","nodeType":"YulIdentifier","src":"84:5:28"}]},{"body":{"nativeSrc":"169:16:28","nodeType":"YulBlock","src":"169:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:28","nodeType":"YulLiteral","src":"178:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:28","nodeType":"YulLiteral","src":"181:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:28","nodeType":"YulIdentifier","src":"171:6:28"},"nativeSrc":"171:12:28","nodeType":"YulFunctionCall","src":"171:12:28"},"nativeSrc":"171:12:28","nodeType":"YulExpressionStatement","src":"171:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:28","nodeType":"YulIdentifier","src":"128:5:28"},{"arguments":[{"name":"value","nativeSrc":"139:5:28","nodeType":"YulIdentifier","src":"139:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:28","nodeType":"YulLiteral","src":"154:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:28","nodeType":"YulLiteral","src":"159:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:28","nodeType":"YulIdentifier","src":"150:3:28"},"nativeSrc":"150:11:28","nodeType":"YulFunctionCall","src":"150:11:28"},{"kind":"number","nativeSrc":"163:1:28","nodeType":"YulLiteral","src":"163:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:28","nodeType":"YulIdentifier","src":"146:3:28"},"nativeSrc":"146:19:28","nodeType":"YulFunctionCall","src":"146:19:28"}],"functionName":{"name":"and","nativeSrc":"135:3:28","nodeType":"YulIdentifier","src":"135:3:28"},"nativeSrc":"135:31:28","nodeType":"YulFunctionCall","src":"135:31:28"}],"functionName":{"name":"eq","nativeSrc":"125:2:28","nodeType":"YulIdentifier","src":"125:2:28"},"nativeSrc":"125:42:28","nodeType":"YulFunctionCall","src":"125:42:28"}],"functionName":{"name":"iszero","nativeSrc":"118:6:28","nodeType":"YulIdentifier","src":"118:6:28"},"nativeSrc":"118:50:28","nodeType":"YulFunctionCall","src":"118:50:28"},"nativeSrc":"115:70:28","nodeType":"YulIf","src":"115:70:28"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:28","nodeType":"YulTypedName","src":"53:6:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:28","nodeType":"YulTypedName","src":"64:5:28","type":""}],"src":"14:177:28"},{"body":{"nativeSrc":"294:195:28","nodeType":"YulBlock","src":"294:195:28","statements":[{"body":{"nativeSrc":"340:16:28","nodeType":"YulBlock","src":"340:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"349:1:28","nodeType":"YulLiteral","src":"349:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"352:1:28","nodeType":"YulLiteral","src":"352:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"342:6:28","nodeType":"YulIdentifier","src":"342:6:28"},"nativeSrc":"342:12:28","nodeType":"YulFunctionCall","src":"342:12:28"},"nativeSrc":"342:12:28","nodeType":"YulExpressionStatement","src":"342:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"315:7:28","nodeType":"YulIdentifier","src":"315:7:28"},{"name":"headStart","nativeSrc":"324:9:28","nodeType":"YulIdentifier","src":"324:9:28"}],"functionName":{"name":"sub","nativeSrc":"311:3:28","nodeType":"YulIdentifier","src":"311:3:28"},"nativeSrc":"311:23:28","nodeType":"YulFunctionCall","src":"311:23:28"},{"kind":"number","nativeSrc":"336:2:28","nodeType":"YulLiteral","src":"336:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"307:3:28","nodeType":"YulIdentifier","src":"307:3:28"},"nativeSrc":"307:32:28","nodeType":"YulFunctionCall","src":"307:32:28"},"nativeSrc":"304:52:28","nodeType":"YulIf","src":"304:52:28"},{"nativeSrc":"365:50:28","nodeType":"YulAssignment","src":"365:50:28","value":{"arguments":[{"name":"headStart","nativeSrc":"405:9:28","nodeType":"YulIdentifier","src":"405:9:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"375:29:28","nodeType":"YulIdentifier","src":"375:29:28"},"nativeSrc":"375:40:28","nodeType":"YulFunctionCall","src":"375:40:28"},"variableNames":[{"name":"value0","nativeSrc":"365:6:28","nodeType":"YulIdentifier","src":"365:6:28"}]},{"nativeSrc":"424:59:28","nodeType":"YulAssignment","src":"424:59:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"468:9:28","nodeType":"YulIdentifier","src":"468:9:28"},{"kind":"number","nativeSrc":"479:2:28","nodeType":"YulLiteral","src":"479:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"464:3:28","nodeType":"YulIdentifier","src":"464:3:28"},"nativeSrc":"464:18:28","nodeType":"YulFunctionCall","src":"464:18:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"434:29:28","nodeType":"YulIdentifier","src":"434:29:28"},"nativeSrc":"434:49:28","nodeType":"YulFunctionCall","src":"434:49:28"},"variableNames":[{"name":"value1","nativeSrc":"424:6:28","nodeType":"YulIdentifier","src":"424:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"196:293:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"252:9:28","nodeType":"YulTypedName","src":"252:9:28","type":""},{"name":"dataEnd","nativeSrc":"263:7:28","nodeType":"YulTypedName","src":"263:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"275:6:28","nodeType":"YulTypedName","src":"275:6:28","type":""},{"name":"value1","nativeSrc":"283:6:28","nodeType":"YulTypedName","src":"283:6:28","type":""}],"src":"196:293:28"},{"body":{"nativeSrc":"595:102:28","nodeType":"YulBlock","src":"595:102:28","statements":[{"nativeSrc":"605:26:28","nodeType":"YulAssignment","src":"605:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"617:9:28","nodeType":"YulIdentifier","src":"617:9:28"},{"kind":"number","nativeSrc":"628:2:28","nodeType":"YulLiteral","src":"628:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"613:3:28","nodeType":"YulIdentifier","src":"613:3:28"},"nativeSrc":"613:18:28","nodeType":"YulFunctionCall","src":"613:18:28"},"variableNames":[{"name":"tail","nativeSrc":"605:4:28","nodeType":"YulIdentifier","src":"605:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"647:9:28","nodeType":"YulIdentifier","src":"647:9:28"},{"arguments":[{"name":"value0","nativeSrc":"662:6:28","nodeType":"YulIdentifier","src":"662:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"678:3:28","nodeType":"YulLiteral","src":"678:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"683:1:28","nodeType":"YulLiteral","src":"683:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"674:3:28","nodeType":"YulIdentifier","src":"674:3:28"},"nativeSrc":"674:11:28","nodeType":"YulFunctionCall","src":"674:11:28"},{"kind":"number","nativeSrc":"687:1:28","nodeType":"YulLiteral","src":"687:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"670:3:28","nodeType":"YulIdentifier","src":"670:3:28"},"nativeSrc":"670:19:28","nodeType":"YulFunctionCall","src":"670:19:28"}],"functionName":{"name":"and","nativeSrc":"658:3:28","nodeType":"YulIdentifier","src":"658:3:28"},"nativeSrc":"658:32:28","nodeType":"YulFunctionCall","src":"658:32:28"}],"functionName":{"name":"mstore","nativeSrc":"640:6:28","nodeType":"YulIdentifier","src":"640:6:28"},"nativeSrc":"640:51:28","nodeType":"YulFunctionCall","src":"640:51:28"},"nativeSrc":"640:51:28","nodeType":"YulExpressionStatement","src":"640:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"494:203:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"564:9:28","nodeType":"YulTypedName","src":"564:9:28","type":""},{"name":"value0","nativeSrc":"575:6:28","nodeType":"YulTypedName","src":"575:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"586:4:28","nodeType":"YulTypedName","src":"586:4:28","type":""}],"src":"494:203:28"},{"body":{"nativeSrc":"876:173:28","nodeType":"YulBlock","src":"876:173:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"893:9:28","nodeType":"YulIdentifier","src":"893:9:28"},{"kind":"number","nativeSrc":"904:2:28","nodeType":"YulLiteral","src":"904:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"886:6:28","nodeType":"YulIdentifier","src":"886:6:28"},"nativeSrc":"886:21:28","nodeType":"YulFunctionCall","src":"886:21:28"},"nativeSrc":"886:21:28","nodeType":"YulExpressionStatement","src":"886:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"927:9:28","nodeType":"YulIdentifier","src":"927:9:28"},{"kind":"number","nativeSrc":"938:2:28","nodeType":"YulLiteral","src":"938:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"923:3:28","nodeType":"YulIdentifier","src":"923:3:28"},"nativeSrc":"923:18:28","nodeType":"YulFunctionCall","src":"923:18:28"},{"kind":"number","nativeSrc":"943:2:28","nodeType":"YulLiteral","src":"943:2:28","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"916:6:28","nodeType":"YulIdentifier","src":"916:6:28"},"nativeSrc":"916:30:28","nodeType":"YulFunctionCall","src":"916:30:28"},"nativeSrc":"916:30:28","nodeType":"YulExpressionStatement","src":"916:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"966:9:28","nodeType":"YulIdentifier","src":"966:9:28"},{"kind":"number","nativeSrc":"977:2:28","nodeType":"YulLiteral","src":"977:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"962:3:28","nodeType":"YulIdentifier","src":"962:3:28"},"nativeSrc":"962:18:28","nodeType":"YulFunctionCall","src":"962:18:28"},{"hexValue":"496e76616c696420746f6b656e20616464726573736573","kind":"string","nativeSrc":"982:25:28","nodeType":"YulLiteral","src":"982:25:28","type":"","value":"Invalid token addresses"}],"functionName":{"name":"mstore","nativeSrc":"955:6:28","nodeType":"YulIdentifier","src":"955:6:28"},"nativeSrc":"955:53:28","nodeType":"YulFunctionCall","src":"955:53:28"},"nativeSrc":"955:53:28","nodeType":"YulExpressionStatement","src":"955:53:28"},{"nativeSrc":"1017:26:28","nodeType":"YulAssignment","src":"1017:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1029:9:28","nodeType":"YulIdentifier","src":"1029:9:28"},{"kind":"number","nativeSrc":"1040:2:28","nodeType":"YulLiteral","src":"1040:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1025:3:28","nodeType":"YulIdentifier","src":"1025:3:28"},"nativeSrc":"1025:18:28","nodeType":"YulFunctionCall","src":"1025:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1017:4:28","nodeType":"YulIdentifier","src":"1017:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"702:347:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"853:9:28","nodeType":"YulTypedName","src":"853:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"867:4:28","nodeType":"YulTypedName","src":"867:4:28","type":""}],"src":"702:347:28"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid token addresses\")\n        tail := add(headStart, 96)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610acd380380610acd83398101604081905261002f91610169565b338061005657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61005f816100fd565b506001600160a01b0382161580159061008057506001600160a01b03811615155b6100cc5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420746f6b656e20616464726573736573000000000000000000604482015260640161004d565b600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905561019c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461016457600080fd5b919050565b6000806040838503121561017c57600080fd5b6101858361014d565b91506101936020840161014d565b90509250929050565b610922806101ab6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806372f702f31161008c578063b88a802f11610066578063b88a802f1461020e578063cf84944214610216578063f2fde38b1461021e578063f7c618c11461023157600080fd5b806372f702f3146101bf5780638da5cb5b146101ea578063a694fc3a146101fb57600080fd5b80634da6a556116100c85780634da6a556146101665780635dbdda691461018f57806367b40cf714610197578063715018a6146101b757600080fd5b806316934fc4146100ef5780632e17de781461013057806344a040f514610145575b600080fd5b6101166100fd36600461082f565b6003602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b61014361013e366004610858565b610244565b005b61015861015336600461082f565b61035d565b604051908152602001610127565b61015861017436600461082f565b6001600160a01b031660009081526003602052604090205490565b610158600a81565b6101586101a536600461082f565b60046020526000908152604090205481565b610143610370565b6001546101d2906001600160a01b031681565b6040516001600160a01b039091168152602001610127565b6000546001600160a01b03166101d2565b610143610209366004610858565b610384565b6101436104ae565b610158600581565b61014361022c36600461082f565b6105d4565b6002546101d2906001600160a01b031681565b3360009081526003602052604090205481111561029f5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b60006102aa33610612565b336000908152600460205260408120805492935083929091906102ce908490610887565b909155505033600090815260036020526040812080548492906102f29084906108a0565b90915550503360008181526003602052604090204260019182015554610324916001600160a01b03909116908461069e565b60405182815233907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f759060200160405180910390a25050565b60008061036983610612565b9392505050565b610378610702565b610382600061072f565b565b600081116103d45760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610296565b336000908152600360205260409020541561041f5760006103f433610612565b33600090815260046020526040812080549293508392909190610418908490610887565b9091555050505b600154610437906001600160a01b031633308461077f565b3360009081526003602052604081208054839290610456908490610887565b9091555050336000818152600360205260409081902042600190910155517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906104a39084815260200190565b60405180910390a250565b3360008181526004602052604081205490916104c990610612565b6104d39190610887565b90506000811161051b5760405162461bcd60e51b81526020600482015260136024820152724e6f2072657761726420617661696c61626c6560681b6044820152606401610296565b3360008181526004602081815260408084208490556003909152918290204260019091015560025491516340c10f1960e01b815290810192909252602482018390526001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561058a57600080fd5b505af115801561059e573d6000803e3d6000fd5b50506040518381523392507f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724191506020016104a3565b6105dc610702565b6001600160a01b03811661060657604051631e4fbdf760e01b815260006004820152602401610296565b61060f8161072f565b50565b6001600160a01b038116600090815260036020908152604080832081518083019092528054808352600190910154928201929092529082036106575750600092915050565b6020810151429060009061066b90836108a0565b9050600061067a600a836108b3565b845190915061068a6005836108d5565b61069491906108d5565b9695505050505050565b6040516001600160a01b038381166024830152604482018390526106fd91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506107be565b505050565b6000546001600160a01b031633146103825760405163118cdaa760e01b8152336004820152602401610296565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0384811660248301528381166044830152606482018390526107b89186918216906323b872dd906084016106cb565b50505050565b600080602060008451602086016000885af1806107e1576040513d6000823e3d81fd5b50506000513d915081156107f9578060011415610806565b6001600160a01b0384163b155b156107b857604051635274afe760e01b81526001600160a01b0385166004820152602401610296565b60006020828403121561084157600080fd5b81356001600160a01b038116811461036957600080fd5b60006020828403121561086a57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561089a5761089a610871565b92915050565b8181038181111561089a5761089a610871565b6000826108d057634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761089a5761089a61087156fea2646970667358221220b089ead6eee69745b08f8919869a8e4f9349b0ee25d49d1750b0f49a1952575c64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xACD CODESIZE SUB DUP1 PUSH2 0xACD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x169 JUMP JUMPDEST CALLER DUP1 PUSH2 0x56 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F DUP2 PUSH2 0xFD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x80 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST PUSH2 0xCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573736573000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x19C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x185 DUP4 PUSH2 0x14D JUMP JUMPDEST SWAP2 POP PUSH2 0x193 PUSH1 0x20 DUP5 ADD PUSH2 0x14D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x922 DUP1 PUSH2 0x1AB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xCF849442 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DA6A556 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x4DA6A556 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x5DBDDA69 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x67B40CF7 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x44A040F5 EQ PUSH2 0x145 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x158 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x158 PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1D2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x158 PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2AA CALLER PUSH2 0x612 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2CE SWAP1 DUP5 SWAP1 PUSH2 0x887 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2F2 SWAP1 DUP5 SWAP1 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP2 DUP3 ADD SSTORE SLOAD PUSH2 0x324 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x369 DUP4 PUSH2 0x612 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x378 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x382 PUSH1 0x0 PUSH2 0x72F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 PUSH2 0x3F4 CALLER PUSH2 0x612 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x418 SWAP1 DUP5 SWAP1 PUSH2 0x887 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x437 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x77F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x456 SWAP1 DUP5 SWAP1 PUSH2 0x887 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0x4A3 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4C9 SWAP1 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F2072657761726420617661696C61626C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP3 POP PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP2 POP PUSH1 0x20 ADD PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x606 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x296 JUMP JUMPDEST PUSH2 0x60F DUP2 PUSH2 0x72F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 SUB PUSH2 0x657 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD TIMESTAMP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x66B SWAP1 DUP4 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x67A PUSH1 0xA DUP4 PUSH2 0x8B3 JUMP JUMPDEST DUP5 MLOAD SWAP1 SWAP2 POP PUSH2 0x68A PUSH1 0x5 DUP4 PUSH2 0x8D5 JUMP JUMPDEST PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x8D5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x6FD SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x7BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x7B8 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x6CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7F9 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x806 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x89A JUMPI PUSH2 0x89A PUSH2 0x871 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x89A JUMPI PUSH2 0x89A PUSH2 0x871 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x89A JUMPI PUSH2 0x89A PUSH2 0x871 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 DUP10 0xEA 0xD6 0xEE 0xE6 SWAP8 GASLIMIT 0xB0 DUP16 DUP10 NOT DUP7 SWAP11 DUP15 0x4F SWAP4 BLOBHASH 0xB0 0xEE 0x25 0xD4 SWAP14 OR POP 0xB0 DELEGATECALL SWAP11 NOT MSTORE JUMPI TLOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"339:3653:26:-:0;;;1070:287;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1135:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:28;613:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1166:27:26;::::1;::::0;;::::1;::::0;:57:::1;;-1:-1:-1::0;;;;;;1197:26:26;::::1;::::0;::::1;1166:57;1158:93;;;::::0;-1:-1:-1;;;1158:93:26;;904:2:28;1158:93:26::1;::::0;::::1;886:21:28::0;943:2;923:18;;;916:30;982:25;962:18;;;955:53;1025:18;;1158:93:26::1;702:347:28::0;1158:93:26::1;1262:12;:36:::0;;-1:-1:-1;;;;;1262:36:26;;::::1;-1:-1:-1::0;;;;;;1262:36:26;;::::1;;::::0;;;1309:11:::1;:40:::0;;;;;::::1;::::0;::::1;;::::0;;339:3653;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:28:-;93:13;;-1:-1:-1;;;;;135:31:28;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;702:347::-;339:3653:26;;;;;;"},"deployedBytecode":{"functionDebugData":{"@REWARD_AMOUNT_7572":{"entryPoint":null,"id":7572,"parameterSlots":0,"returnSlots":0},"@REWARD_INTERVAL_7575":{"entryPoint":null,"id":7575,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_1575":{"entryPoint":1982,"id":1575,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":1794,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1629":{"entryPoint":null,"id":1629,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1839,"id":146,"parameterSlots":1,"returnSlots":0},"@calculateReward_7881":{"entryPoint":1554,"id":7881,"parameterSlots":1,"returnSlots":1},"@claimReward_7833":{"entryPoint":1198,"id":7833,"parameterSlots":0,"returnSlots":0},"@getRewardAmount_7897":{"entryPoint":861,"id":7897,"parameterSlots":1,"returnSlots":1},"@getStakedAmount_7647":{"entryPoint":null,"id":7647,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":880,"id":98,"parameterSlots":0,"returnSlots":0},"@rewardBalance_7569":{"entryPoint":null,"id":7569,"parameterSlots":0,"returnSlots":0},"@rewardToken_7555":{"entryPoint":null,"id":7555,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1280":{"entryPoint":1919,"id":1280,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1253":{"entryPoint":1694,"id":1253,"parameterSlots":3,"returnSlots":0},"@stake_7718":{"entryPoint":900,"id":7718,"parameterSlots":1,"returnSlots":0},"@stakes_7565":{"entryPoint":null,"id":7565,"parameterSlots":0,"returnSlots":0},"@stakingToken_7552":{"entryPoint":null,"id":7552,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1492,"id":126,"parameterSlots":1,"returnSlots":0},"@unstake_7780":{"entryPoint":580,"id":7780,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":2095,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$992__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IRewardToken_$7543__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2183,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2227,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2261,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2208,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2161,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4085:28","nodeType":"YulBlock","src":"0:4085:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"84:216:28","nodeType":"YulBlock","src":"84:216:28","statements":[{"body":{"nativeSrc":"130:16:28","nodeType":"YulBlock","src":"130:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"139:1:28","nodeType":"YulLiteral","src":"139:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"142:1:28","nodeType":"YulLiteral","src":"142:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"132:6:28","nodeType":"YulIdentifier","src":"132:6:28"},"nativeSrc":"132:12:28","nodeType":"YulFunctionCall","src":"132:12:28"},"nativeSrc":"132:12:28","nodeType":"YulExpressionStatement","src":"132:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"105:7:28","nodeType":"YulIdentifier","src":"105:7:28"},{"name":"headStart","nativeSrc":"114:9:28","nodeType":"YulIdentifier","src":"114:9:28"}],"functionName":{"name":"sub","nativeSrc":"101:3:28","nodeType":"YulIdentifier","src":"101:3:28"},"nativeSrc":"101:23:28","nodeType":"YulFunctionCall","src":"101:23:28"},{"kind":"number","nativeSrc":"126:2:28","nodeType":"YulLiteral","src":"126:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"97:3:28","nodeType":"YulIdentifier","src":"97:3:28"},"nativeSrc":"97:32:28","nodeType":"YulFunctionCall","src":"97:32:28"},"nativeSrc":"94:52:28","nodeType":"YulIf","src":"94:52:28"},{"nativeSrc":"155:36:28","nodeType":"YulVariableDeclaration","src":"155:36:28","value":{"arguments":[{"name":"headStart","nativeSrc":"181:9:28","nodeType":"YulIdentifier","src":"181:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"168:12:28","nodeType":"YulIdentifier","src":"168:12:28"},"nativeSrc":"168:23:28","nodeType":"YulFunctionCall","src":"168:23:28"},"variables":[{"name":"value","nativeSrc":"159:5:28","nodeType":"YulTypedName","src":"159:5:28","type":""}]},{"body":{"nativeSrc":"254:16:28","nodeType":"YulBlock","src":"254:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"263:1:28","nodeType":"YulLiteral","src":"263:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"266:1:28","nodeType":"YulLiteral","src":"266:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"256:6:28","nodeType":"YulIdentifier","src":"256:6:28"},"nativeSrc":"256:12:28","nodeType":"YulFunctionCall","src":"256:12:28"},"nativeSrc":"256:12:28","nodeType":"YulExpressionStatement","src":"256:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"213:5:28","nodeType":"YulIdentifier","src":"213:5:28"},{"arguments":[{"name":"value","nativeSrc":"224:5:28","nodeType":"YulIdentifier","src":"224:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"239:3:28","nodeType":"YulLiteral","src":"239:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"244:1:28","nodeType":"YulLiteral","src":"244:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"235:3:28","nodeType":"YulIdentifier","src":"235:3:28"},"nativeSrc":"235:11:28","nodeType":"YulFunctionCall","src":"235:11:28"},{"kind":"number","nativeSrc":"248:1:28","nodeType":"YulLiteral","src":"248:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"231:3:28","nodeType":"YulIdentifier","src":"231:3:28"},"nativeSrc":"231:19:28","nodeType":"YulFunctionCall","src":"231:19:28"}],"functionName":{"name":"and","nativeSrc":"220:3:28","nodeType":"YulIdentifier","src":"220:3:28"},"nativeSrc":"220:31:28","nodeType":"YulFunctionCall","src":"220:31:28"}],"functionName":{"name":"eq","nativeSrc":"210:2:28","nodeType":"YulIdentifier","src":"210:2:28"},"nativeSrc":"210:42:28","nodeType":"YulFunctionCall","src":"210:42:28"}],"functionName":{"name":"iszero","nativeSrc":"203:6:28","nodeType":"YulIdentifier","src":"203:6:28"},"nativeSrc":"203:50:28","nodeType":"YulFunctionCall","src":"203:50:28"},"nativeSrc":"200:70:28","nodeType":"YulIf","src":"200:70:28"},{"nativeSrc":"279:15:28","nodeType":"YulAssignment","src":"279:15:28","value":{"name":"value","nativeSrc":"289:5:28","nodeType":"YulIdentifier","src":"289:5:28"},"variableNames":[{"name":"value0","nativeSrc":"279:6:28","nodeType":"YulIdentifier","src":"279:6:28"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"14:286:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"50:9:28","nodeType":"YulTypedName","src":"50:9:28","type":""},{"name":"dataEnd","nativeSrc":"61:7:28","nodeType":"YulTypedName","src":"61:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"73:6:28","nodeType":"YulTypedName","src":"73:6:28","type":""}],"src":"14:286:28"},{"body":{"nativeSrc":"434:119:28","nodeType":"YulBlock","src":"434:119:28","statements":[{"nativeSrc":"444:26:28","nodeType":"YulAssignment","src":"444:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"456:9:28","nodeType":"YulIdentifier","src":"456:9:28"},{"kind":"number","nativeSrc":"467:2:28","nodeType":"YulLiteral","src":"467:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"452:3:28","nodeType":"YulIdentifier","src":"452:3:28"},"nativeSrc":"452:18:28","nodeType":"YulFunctionCall","src":"452:18:28"},"variableNames":[{"name":"tail","nativeSrc":"444:4:28","nodeType":"YulIdentifier","src":"444:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"486:9:28","nodeType":"YulIdentifier","src":"486:9:28"},{"name":"value0","nativeSrc":"497:6:28","nodeType":"YulIdentifier","src":"497:6:28"}],"functionName":{"name":"mstore","nativeSrc":"479:6:28","nodeType":"YulIdentifier","src":"479:6:28"},"nativeSrc":"479:25:28","nodeType":"YulFunctionCall","src":"479:25:28"},"nativeSrc":"479:25:28","nodeType":"YulExpressionStatement","src":"479:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"524:9:28","nodeType":"YulIdentifier","src":"524:9:28"},{"kind":"number","nativeSrc":"535:2:28","nodeType":"YulLiteral","src":"535:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"520:3:28","nodeType":"YulIdentifier","src":"520:3:28"},"nativeSrc":"520:18:28","nodeType":"YulFunctionCall","src":"520:18:28"},{"name":"value1","nativeSrc":"540:6:28","nodeType":"YulIdentifier","src":"540:6:28"}],"functionName":{"name":"mstore","nativeSrc":"513:6:28","nodeType":"YulIdentifier","src":"513:6:28"},"nativeSrc":"513:34:28","nodeType":"YulFunctionCall","src":"513:34:28"},"nativeSrc":"513:34:28","nodeType":"YulExpressionStatement","src":"513:34:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"305:248:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"395:9:28","nodeType":"YulTypedName","src":"395:9:28","type":""},{"name":"value1","nativeSrc":"406:6:28","nodeType":"YulTypedName","src":"406:6:28","type":""},{"name":"value0","nativeSrc":"414:6:28","nodeType":"YulTypedName","src":"414:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"425:4:28","nodeType":"YulTypedName","src":"425:4:28","type":""}],"src":"305:248:28"},{"body":{"nativeSrc":"628:110:28","nodeType":"YulBlock","src":"628:110:28","statements":[{"body":{"nativeSrc":"674:16:28","nodeType":"YulBlock","src":"674:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"683:1:28","nodeType":"YulLiteral","src":"683:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"686:1:28","nodeType":"YulLiteral","src":"686:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"676:6:28","nodeType":"YulIdentifier","src":"676:6:28"},"nativeSrc":"676:12:28","nodeType":"YulFunctionCall","src":"676:12:28"},"nativeSrc":"676:12:28","nodeType":"YulExpressionStatement","src":"676:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"649:7:28","nodeType":"YulIdentifier","src":"649:7:28"},{"name":"headStart","nativeSrc":"658:9:28","nodeType":"YulIdentifier","src":"658:9:28"}],"functionName":{"name":"sub","nativeSrc":"645:3:28","nodeType":"YulIdentifier","src":"645:3:28"},"nativeSrc":"645:23:28","nodeType":"YulFunctionCall","src":"645:23:28"},{"kind":"number","nativeSrc":"670:2:28","nodeType":"YulLiteral","src":"670:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"641:3:28","nodeType":"YulIdentifier","src":"641:3:28"},"nativeSrc":"641:32:28","nodeType":"YulFunctionCall","src":"641:32:28"},"nativeSrc":"638:52:28","nodeType":"YulIf","src":"638:52:28"},{"nativeSrc":"699:33:28","nodeType":"YulAssignment","src":"699:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"722:9:28","nodeType":"YulIdentifier","src":"722:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"709:12:28","nodeType":"YulIdentifier","src":"709:12:28"},"nativeSrc":"709:23:28","nodeType":"YulFunctionCall","src":"709:23:28"},"variableNames":[{"name":"value0","nativeSrc":"699:6:28","nodeType":"YulIdentifier","src":"699:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"558:180:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"594:9:28","nodeType":"YulTypedName","src":"594:9:28","type":""},{"name":"dataEnd","nativeSrc":"605:7:28","nodeType":"YulTypedName","src":"605:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"617:6:28","nodeType":"YulTypedName","src":"617:6:28","type":""}],"src":"558:180:28"},{"body":{"nativeSrc":"844:76:28","nodeType":"YulBlock","src":"844:76:28","statements":[{"nativeSrc":"854:26:28","nodeType":"YulAssignment","src":"854:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"866:9:28","nodeType":"YulIdentifier","src":"866:9:28"},{"kind":"number","nativeSrc":"877:2:28","nodeType":"YulLiteral","src":"877:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"862:3:28","nodeType":"YulIdentifier","src":"862:3:28"},"nativeSrc":"862:18:28","nodeType":"YulFunctionCall","src":"862:18:28"},"variableNames":[{"name":"tail","nativeSrc":"854:4:28","nodeType":"YulIdentifier","src":"854:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"896:9:28","nodeType":"YulIdentifier","src":"896:9:28"},{"name":"value0","nativeSrc":"907:6:28","nodeType":"YulIdentifier","src":"907:6:28"}],"functionName":{"name":"mstore","nativeSrc":"889:6:28","nodeType":"YulIdentifier","src":"889:6:28"},"nativeSrc":"889:25:28","nodeType":"YulFunctionCall","src":"889:25:28"},"nativeSrc":"889:25:28","nodeType":"YulExpressionStatement","src":"889:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"743:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"813:9:28","nodeType":"YulTypedName","src":"813:9:28","type":""},{"name":"value0","nativeSrc":"824:6:28","nodeType":"YulTypedName","src":"824:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"835:4:28","nodeType":"YulTypedName","src":"835:4:28","type":""}],"src":"743:177:28"},{"body":{"nativeSrc":"1040:102:28","nodeType":"YulBlock","src":"1040:102:28","statements":[{"nativeSrc":"1050:26:28","nodeType":"YulAssignment","src":"1050:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1062:9:28","nodeType":"YulIdentifier","src":"1062:9:28"},{"kind":"number","nativeSrc":"1073:2:28","nodeType":"YulLiteral","src":"1073:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1058:3:28","nodeType":"YulIdentifier","src":"1058:3:28"},"nativeSrc":"1058:18:28","nodeType":"YulFunctionCall","src":"1058:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1050:4:28","nodeType":"YulIdentifier","src":"1050:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1092:9:28","nodeType":"YulIdentifier","src":"1092:9:28"},{"arguments":[{"name":"value0","nativeSrc":"1107:6:28","nodeType":"YulIdentifier","src":"1107:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1123:3:28","nodeType":"YulLiteral","src":"1123:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"1128:1:28","nodeType":"YulLiteral","src":"1128:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1119:3:28","nodeType":"YulIdentifier","src":"1119:3:28"},"nativeSrc":"1119:11:28","nodeType":"YulFunctionCall","src":"1119:11:28"},{"kind":"number","nativeSrc":"1132:1:28","nodeType":"YulLiteral","src":"1132:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1115:3:28","nodeType":"YulIdentifier","src":"1115:3:28"},"nativeSrc":"1115:19:28","nodeType":"YulFunctionCall","src":"1115:19:28"}],"functionName":{"name":"and","nativeSrc":"1103:3:28","nodeType":"YulIdentifier","src":"1103:3:28"},"nativeSrc":"1103:32:28","nodeType":"YulFunctionCall","src":"1103:32:28"}],"functionName":{"name":"mstore","nativeSrc":"1085:6:28","nodeType":"YulIdentifier","src":"1085:6:28"},"nativeSrc":"1085:51:28","nodeType":"YulFunctionCall","src":"1085:51:28"},"nativeSrc":"1085:51:28","nodeType":"YulExpressionStatement","src":"1085:51:28"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$992__to_t_address__fromStack_reversed","nativeSrc":"925:217:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1009:9:28","nodeType":"YulTypedName","src":"1009:9:28","type":""},{"name":"value0","nativeSrc":"1020:6:28","nodeType":"YulTypedName","src":"1020:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1031:4:28","nodeType":"YulTypedName","src":"1031:4:28","type":""}],"src":"925:217:28"},{"body":{"nativeSrc":"1248:102:28","nodeType":"YulBlock","src":"1248:102:28","statements":[{"nativeSrc":"1258:26:28","nodeType":"YulAssignment","src":"1258:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1270:9:28","nodeType":"YulIdentifier","src":"1270:9:28"},{"kind":"number","nativeSrc":"1281:2:28","nodeType":"YulLiteral","src":"1281:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1266:3:28","nodeType":"YulIdentifier","src":"1266:3:28"},"nativeSrc":"1266:18:28","nodeType":"YulFunctionCall","src":"1266:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1258:4:28","nodeType":"YulIdentifier","src":"1258:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1300:9:28","nodeType":"YulIdentifier","src":"1300:9:28"},{"arguments":[{"name":"value0","nativeSrc":"1315:6:28","nodeType":"YulIdentifier","src":"1315:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1331:3:28","nodeType":"YulLiteral","src":"1331:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"1336:1:28","nodeType":"YulLiteral","src":"1336:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1327:3:28","nodeType":"YulIdentifier","src":"1327:3:28"},"nativeSrc":"1327:11:28","nodeType":"YulFunctionCall","src":"1327:11:28"},{"kind":"number","nativeSrc":"1340:1:28","nodeType":"YulLiteral","src":"1340:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1323:3:28","nodeType":"YulIdentifier","src":"1323:3:28"},"nativeSrc":"1323:19:28","nodeType":"YulFunctionCall","src":"1323:19:28"}],"functionName":{"name":"and","nativeSrc":"1311:3:28","nodeType":"YulIdentifier","src":"1311:3:28"},"nativeSrc":"1311:32:28","nodeType":"YulFunctionCall","src":"1311:32:28"}],"functionName":{"name":"mstore","nativeSrc":"1293:6:28","nodeType":"YulIdentifier","src":"1293:6:28"},"nativeSrc":"1293:51:28","nodeType":"YulFunctionCall","src":"1293:51:28"},"nativeSrc":"1293:51:28","nodeType":"YulExpressionStatement","src":"1293:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1147:203:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1217:9:28","nodeType":"YulTypedName","src":"1217:9:28","type":""},{"name":"value0","nativeSrc":"1228:6:28","nodeType":"YulTypedName","src":"1228:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1239:4:28","nodeType":"YulTypedName","src":"1239:4:28","type":""}],"src":"1147:203:28"},{"body":{"nativeSrc":"1477:102:28","nodeType":"YulBlock","src":"1477:102:28","statements":[{"nativeSrc":"1487:26:28","nodeType":"YulAssignment","src":"1487:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1499:9:28","nodeType":"YulIdentifier","src":"1499:9:28"},{"kind":"number","nativeSrc":"1510:2:28","nodeType":"YulLiteral","src":"1510:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1495:3:28","nodeType":"YulIdentifier","src":"1495:3:28"},"nativeSrc":"1495:18:28","nodeType":"YulFunctionCall","src":"1495:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1487:4:28","nodeType":"YulIdentifier","src":"1487:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1529:9:28","nodeType":"YulIdentifier","src":"1529:9:28"},{"arguments":[{"name":"value0","nativeSrc":"1544:6:28","nodeType":"YulIdentifier","src":"1544:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1560:3:28","nodeType":"YulLiteral","src":"1560:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"1565:1:28","nodeType":"YulLiteral","src":"1565:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1556:3:28","nodeType":"YulIdentifier","src":"1556:3:28"},"nativeSrc":"1556:11:28","nodeType":"YulFunctionCall","src":"1556:11:28"},{"kind":"number","nativeSrc":"1569:1:28","nodeType":"YulLiteral","src":"1569:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1552:3:28","nodeType":"YulIdentifier","src":"1552:3:28"},"nativeSrc":"1552:19:28","nodeType":"YulFunctionCall","src":"1552:19:28"}],"functionName":{"name":"and","nativeSrc":"1540:3:28","nodeType":"YulIdentifier","src":"1540:3:28"},"nativeSrc":"1540:32:28","nodeType":"YulFunctionCall","src":"1540:32:28"}],"functionName":{"name":"mstore","nativeSrc":"1522:6:28","nodeType":"YulIdentifier","src":"1522:6:28"},"nativeSrc":"1522:51:28","nodeType":"YulFunctionCall","src":"1522:51:28"},"nativeSrc":"1522:51:28","nodeType":"YulExpressionStatement","src":"1522:51:28"}]},"name":"abi_encode_tuple_t_contract$_IRewardToken_$7543__to_t_address__fromStack_reversed","nativeSrc":"1355:224:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1446:9:28","nodeType":"YulTypedName","src":"1446:9:28","type":""},{"name":"value0","nativeSrc":"1457:6:28","nodeType":"YulTypedName","src":"1457:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1468:4:28","nodeType":"YulTypedName","src":"1468:4:28","type":""}],"src":"1355:224:28"},{"body":{"nativeSrc":"1758:170:28","nodeType":"YulBlock","src":"1758:170:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1775:9:28","nodeType":"YulIdentifier","src":"1775:9:28"},{"kind":"number","nativeSrc":"1786:2:28","nodeType":"YulLiteral","src":"1786:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1768:6:28","nodeType":"YulIdentifier","src":"1768:6:28"},"nativeSrc":"1768:21:28","nodeType":"YulFunctionCall","src":"1768:21:28"},"nativeSrc":"1768:21:28","nodeType":"YulExpressionStatement","src":"1768:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1809:9:28","nodeType":"YulIdentifier","src":"1809:9:28"},{"kind":"number","nativeSrc":"1820:2:28","nodeType":"YulLiteral","src":"1820:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1805:3:28","nodeType":"YulIdentifier","src":"1805:3:28"},"nativeSrc":"1805:18:28","nodeType":"YulFunctionCall","src":"1805:18:28"},{"kind":"number","nativeSrc":"1825:2:28","nodeType":"YulLiteral","src":"1825:2:28","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"1798:6:28","nodeType":"YulIdentifier","src":"1798:6:28"},"nativeSrc":"1798:30:28","nodeType":"YulFunctionCall","src":"1798:30:28"},"nativeSrc":"1798:30:28","nodeType":"YulExpressionStatement","src":"1798:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1848:9:28","nodeType":"YulIdentifier","src":"1848:9:28"},{"kind":"number","nativeSrc":"1859:2:28","nodeType":"YulLiteral","src":"1859:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1844:3:28","nodeType":"YulIdentifier","src":"1844:3:28"},"nativeSrc":"1844:18:28","nodeType":"YulFunctionCall","src":"1844:18:28"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nativeSrc":"1864:22:28","nodeType":"YulLiteral","src":"1864:22:28","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nativeSrc":"1837:6:28","nodeType":"YulIdentifier","src":"1837:6:28"},"nativeSrc":"1837:50:28","nodeType":"YulFunctionCall","src":"1837:50:28"},"nativeSrc":"1837:50:28","nodeType":"YulExpressionStatement","src":"1837:50:28"},{"nativeSrc":"1896:26:28","nodeType":"YulAssignment","src":"1896:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1908:9:28","nodeType":"YulIdentifier","src":"1908:9:28"},{"kind":"number","nativeSrc":"1919:2:28","nodeType":"YulLiteral","src":"1919:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1904:3:28","nodeType":"YulIdentifier","src":"1904:3:28"},"nativeSrc":"1904:18:28","nodeType":"YulFunctionCall","src":"1904:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1896:4:28","nodeType":"YulIdentifier","src":"1896:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1584:344:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1735:9:28","nodeType":"YulTypedName","src":"1735:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1749:4:28","nodeType":"YulTypedName","src":"1749:4:28","type":""}],"src":"1584:344:28"},{"body":{"nativeSrc":"1965:95:28","nodeType":"YulBlock","src":"1965:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1982:1:28","nodeType":"YulLiteral","src":"1982:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1989:3:28","nodeType":"YulLiteral","src":"1989:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"1994:10:28","nodeType":"YulLiteral","src":"1994:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1985:3:28","nodeType":"YulIdentifier","src":"1985:3:28"},"nativeSrc":"1985:20:28","nodeType":"YulFunctionCall","src":"1985:20:28"}],"functionName":{"name":"mstore","nativeSrc":"1975:6:28","nodeType":"YulIdentifier","src":"1975:6:28"},"nativeSrc":"1975:31:28","nodeType":"YulFunctionCall","src":"1975:31:28"},"nativeSrc":"1975:31:28","nodeType":"YulExpressionStatement","src":"1975:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2022:1:28","nodeType":"YulLiteral","src":"2022:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"2025:4:28","nodeType":"YulLiteral","src":"2025:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"2015:6:28","nodeType":"YulIdentifier","src":"2015:6:28"},"nativeSrc":"2015:15:28","nodeType":"YulFunctionCall","src":"2015:15:28"},"nativeSrc":"2015:15:28","nodeType":"YulExpressionStatement","src":"2015:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2046:1:28","nodeType":"YulLiteral","src":"2046:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2049:4:28","nodeType":"YulLiteral","src":"2049:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2039:6:28","nodeType":"YulIdentifier","src":"2039:6:28"},"nativeSrc":"2039:15:28","nodeType":"YulFunctionCall","src":"2039:15:28"},"nativeSrc":"2039:15:28","nodeType":"YulExpressionStatement","src":"2039:15:28"}]},"name":"panic_error_0x11","nativeSrc":"1933:127:28","nodeType":"YulFunctionDefinition","src":"1933:127:28"},{"body":{"nativeSrc":"2113:77:28","nodeType":"YulBlock","src":"2113:77:28","statements":[{"nativeSrc":"2123:16:28","nodeType":"YulAssignment","src":"2123:16:28","value":{"arguments":[{"name":"x","nativeSrc":"2134:1:28","nodeType":"YulIdentifier","src":"2134:1:28"},{"name":"y","nativeSrc":"2137:1:28","nodeType":"YulIdentifier","src":"2137:1:28"}],"functionName":{"name":"add","nativeSrc":"2130:3:28","nodeType":"YulIdentifier","src":"2130:3:28"},"nativeSrc":"2130:9:28","nodeType":"YulFunctionCall","src":"2130:9:28"},"variableNames":[{"name":"sum","nativeSrc":"2123:3:28","nodeType":"YulIdentifier","src":"2123:3:28"}]},{"body":{"nativeSrc":"2162:22:28","nodeType":"YulBlock","src":"2162:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"2164:16:28","nodeType":"YulIdentifier","src":"2164:16:28"},"nativeSrc":"2164:18:28","nodeType":"YulFunctionCall","src":"2164:18:28"},"nativeSrc":"2164:18:28","nodeType":"YulExpressionStatement","src":"2164:18:28"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"2154:1:28","nodeType":"YulIdentifier","src":"2154:1:28"},{"name":"sum","nativeSrc":"2157:3:28","nodeType":"YulIdentifier","src":"2157:3:28"}],"functionName":{"name":"gt","nativeSrc":"2151:2:28","nodeType":"YulIdentifier","src":"2151:2:28"},"nativeSrc":"2151:10:28","nodeType":"YulFunctionCall","src":"2151:10:28"},"nativeSrc":"2148:36:28","nodeType":"YulIf","src":"2148:36:28"}]},"name":"checked_add_t_uint256","nativeSrc":"2065:125:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"2096:1:28","nodeType":"YulTypedName","src":"2096:1:28","type":""},{"name":"y","nativeSrc":"2099:1:28","nodeType":"YulTypedName","src":"2099:1:28","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"2105:3:28","nodeType":"YulTypedName","src":"2105:3:28","type":""}],"src":"2065:125:28"},{"body":{"nativeSrc":"2244:79:28","nodeType":"YulBlock","src":"2244:79:28","statements":[{"nativeSrc":"2254:17:28","nodeType":"YulAssignment","src":"2254:17:28","value":{"arguments":[{"name":"x","nativeSrc":"2266:1:28","nodeType":"YulIdentifier","src":"2266:1:28"},{"name":"y","nativeSrc":"2269:1:28","nodeType":"YulIdentifier","src":"2269:1:28"}],"functionName":{"name":"sub","nativeSrc":"2262:3:28","nodeType":"YulIdentifier","src":"2262:3:28"},"nativeSrc":"2262:9:28","nodeType":"YulFunctionCall","src":"2262:9:28"},"variableNames":[{"name":"diff","nativeSrc":"2254:4:28","nodeType":"YulIdentifier","src":"2254:4:28"}]},{"body":{"nativeSrc":"2295:22:28","nodeType":"YulBlock","src":"2295:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"2297:16:28","nodeType":"YulIdentifier","src":"2297:16:28"},"nativeSrc":"2297:18:28","nodeType":"YulFunctionCall","src":"2297:18:28"},"nativeSrc":"2297:18:28","nodeType":"YulExpressionStatement","src":"2297:18:28"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"2286:4:28","nodeType":"YulIdentifier","src":"2286:4:28"},{"name":"x","nativeSrc":"2292:1:28","nodeType":"YulIdentifier","src":"2292:1:28"}],"functionName":{"name":"gt","nativeSrc":"2283:2:28","nodeType":"YulIdentifier","src":"2283:2:28"},"nativeSrc":"2283:11:28","nodeType":"YulFunctionCall","src":"2283:11:28"},"nativeSrc":"2280:37:28","nodeType":"YulIf","src":"2280:37:28"}]},"name":"checked_sub_t_uint256","nativeSrc":"2195:128:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"2226:1:28","nodeType":"YulTypedName","src":"2226:1:28","type":""},{"name":"y","nativeSrc":"2229:1:28","nodeType":"YulTypedName","src":"2229:1:28","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"2235:4:28","nodeType":"YulTypedName","src":"2235:4:28","type":""}],"src":"2195:128:28"},{"body":{"nativeSrc":"2502:179:28","nodeType":"YulBlock","src":"2502:179:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2519:9:28","nodeType":"YulIdentifier","src":"2519:9:28"},{"kind":"number","nativeSrc":"2530:2:28","nodeType":"YulLiteral","src":"2530:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2512:6:28","nodeType":"YulIdentifier","src":"2512:6:28"},"nativeSrc":"2512:21:28","nodeType":"YulFunctionCall","src":"2512:21:28"},"nativeSrc":"2512:21:28","nodeType":"YulExpressionStatement","src":"2512:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2553:9:28","nodeType":"YulIdentifier","src":"2553:9:28"},{"kind":"number","nativeSrc":"2564:2:28","nodeType":"YulLiteral","src":"2564:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2549:3:28","nodeType":"YulIdentifier","src":"2549:3:28"},"nativeSrc":"2549:18:28","nodeType":"YulFunctionCall","src":"2549:18:28"},{"kind":"number","nativeSrc":"2569:2:28","nodeType":"YulLiteral","src":"2569:2:28","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"2542:6:28","nodeType":"YulIdentifier","src":"2542:6:28"},"nativeSrc":"2542:30:28","nodeType":"YulFunctionCall","src":"2542:30:28"},"nativeSrc":"2542:30:28","nodeType":"YulExpressionStatement","src":"2542:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2592:9:28","nodeType":"YulIdentifier","src":"2592:9:28"},{"kind":"number","nativeSrc":"2603:2:28","nodeType":"YulLiteral","src":"2603:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2588:3:28","nodeType":"YulIdentifier","src":"2588:3:28"},"nativeSrc":"2588:18:28","nodeType":"YulFunctionCall","src":"2588:18:28"},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","kind":"string","nativeSrc":"2608:31:28","nodeType":"YulLiteral","src":"2608:31:28","type":"","value":"Amount must be greater than 0"}],"functionName":{"name":"mstore","nativeSrc":"2581:6:28","nodeType":"YulIdentifier","src":"2581:6:28"},"nativeSrc":"2581:59:28","nodeType":"YulFunctionCall","src":"2581:59:28"},"nativeSrc":"2581:59:28","nodeType":"YulExpressionStatement","src":"2581:59:28"},{"nativeSrc":"2649:26:28","nodeType":"YulAssignment","src":"2649:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2661:9:28","nodeType":"YulIdentifier","src":"2661:9:28"},{"kind":"number","nativeSrc":"2672:2:28","nodeType":"YulLiteral","src":"2672:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2657:3:28","nodeType":"YulIdentifier","src":"2657:3:28"},"nativeSrc":"2657:18:28","nodeType":"YulFunctionCall","src":"2657:18:28"},"variableNames":[{"name":"tail","nativeSrc":"2649:4:28","nodeType":"YulIdentifier","src":"2649:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2328:353:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2479:9:28","nodeType":"YulTypedName","src":"2479:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2493:4:28","nodeType":"YulTypedName","src":"2493:4:28","type":""}],"src":"2328:353:28"},{"body":{"nativeSrc":"2860:169:28","nodeType":"YulBlock","src":"2860:169:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2877:9:28","nodeType":"YulIdentifier","src":"2877:9:28"},{"kind":"number","nativeSrc":"2888:2:28","nodeType":"YulLiteral","src":"2888:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2870:6:28","nodeType":"YulIdentifier","src":"2870:6:28"},"nativeSrc":"2870:21:28","nodeType":"YulFunctionCall","src":"2870:21:28"},"nativeSrc":"2870:21:28","nodeType":"YulExpressionStatement","src":"2870:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2911:9:28","nodeType":"YulIdentifier","src":"2911:9:28"},{"kind":"number","nativeSrc":"2922:2:28","nodeType":"YulLiteral","src":"2922:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2907:3:28","nodeType":"YulIdentifier","src":"2907:3:28"},"nativeSrc":"2907:18:28","nodeType":"YulFunctionCall","src":"2907:18:28"},{"kind":"number","nativeSrc":"2927:2:28","nodeType":"YulLiteral","src":"2927:2:28","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"2900:6:28","nodeType":"YulIdentifier","src":"2900:6:28"},"nativeSrc":"2900:30:28","nodeType":"YulFunctionCall","src":"2900:30:28"},"nativeSrc":"2900:30:28","nodeType":"YulExpressionStatement","src":"2900:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2950:9:28","nodeType":"YulIdentifier","src":"2950:9:28"},{"kind":"number","nativeSrc":"2961:2:28","nodeType":"YulLiteral","src":"2961:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2946:3:28","nodeType":"YulIdentifier","src":"2946:3:28"},"nativeSrc":"2946:18:28","nodeType":"YulFunctionCall","src":"2946:18:28"},{"hexValue":"4e6f2072657761726420617661696c61626c65","kind":"string","nativeSrc":"2966:21:28","nodeType":"YulLiteral","src":"2966:21:28","type":"","value":"No reward available"}],"functionName":{"name":"mstore","nativeSrc":"2939:6:28","nodeType":"YulIdentifier","src":"2939:6:28"},"nativeSrc":"2939:49:28","nodeType":"YulFunctionCall","src":"2939:49:28"},"nativeSrc":"2939:49:28","nodeType":"YulExpressionStatement","src":"2939:49:28"},{"nativeSrc":"2997:26:28","nodeType":"YulAssignment","src":"2997:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3009:9:28","nodeType":"YulIdentifier","src":"3009:9:28"},{"kind":"number","nativeSrc":"3020:2:28","nodeType":"YulLiteral","src":"3020:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3005:3:28","nodeType":"YulIdentifier","src":"3005:3:28"},"nativeSrc":"3005:18:28","nodeType":"YulFunctionCall","src":"3005:18:28"},"variableNames":[{"name":"tail","nativeSrc":"2997:4:28","nodeType":"YulIdentifier","src":"2997:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2686:343:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2837:9:28","nodeType":"YulTypedName","src":"2837:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2851:4:28","nodeType":"YulTypedName","src":"2851:4:28","type":""}],"src":"2686:343:28"},{"body":{"nativeSrc":"3163:145:28","nodeType":"YulBlock","src":"3163:145:28","statements":[{"nativeSrc":"3173:26:28","nodeType":"YulAssignment","src":"3173:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3185:9:28","nodeType":"YulIdentifier","src":"3185:9:28"},{"kind":"number","nativeSrc":"3196:2:28","nodeType":"YulLiteral","src":"3196:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3181:3:28","nodeType":"YulIdentifier","src":"3181:3:28"},"nativeSrc":"3181:18:28","nodeType":"YulFunctionCall","src":"3181:18:28"},"variableNames":[{"name":"tail","nativeSrc":"3173:4:28","nodeType":"YulIdentifier","src":"3173:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3215:9:28","nodeType":"YulIdentifier","src":"3215:9:28"},{"arguments":[{"name":"value0","nativeSrc":"3230:6:28","nodeType":"YulIdentifier","src":"3230:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3246:3:28","nodeType":"YulLiteral","src":"3246:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"3251:1:28","nodeType":"YulLiteral","src":"3251:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3242:3:28","nodeType":"YulIdentifier","src":"3242:3:28"},"nativeSrc":"3242:11:28","nodeType":"YulFunctionCall","src":"3242:11:28"},{"kind":"number","nativeSrc":"3255:1:28","nodeType":"YulLiteral","src":"3255:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3238:3:28","nodeType":"YulIdentifier","src":"3238:3:28"},"nativeSrc":"3238:19:28","nodeType":"YulFunctionCall","src":"3238:19:28"}],"functionName":{"name":"and","nativeSrc":"3226:3:28","nodeType":"YulIdentifier","src":"3226:3:28"},"nativeSrc":"3226:32:28","nodeType":"YulFunctionCall","src":"3226:32:28"}],"functionName":{"name":"mstore","nativeSrc":"3208:6:28","nodeType":"YulIdentifier","src":"3208:6:28"},"nativeSrc":"3208:51:28","nodeType":"YulFunctionCall","src":"3208:51:28"},"nativeSrc":"3208:51:28","nodeType":"YulExpressionStatement","src":"3208:51:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3279:9:28","nodeType":"YulIdentifier","src":"3279:9:28"},{"kind":"number","nativeSrc":"3290:2:28","nodeType":"YulLiteral","src":"3290:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3275:3:28","nodeType":"YulIdentifier","src":"3275:3:28"},"nativeSrc":"3275:18:28","nodeType":"YulFunctionCall","src":"3275:18:28"},{"name":"value1","nativeSrc":"3295:6:28","nodeType":"YulIdentifier","src":"3295:6:28"}],"functionName":{"name":"mstore","nativeSrc":"3268:6:28","nodeType":"YulIdentifier","src":"3268:6:28"},"nativeSrc":"3268:34:28","nodeType":"YulFunctionCall","src":"3268:34:28"},"nativeSrc":"3268:34:28","nodeType":"YulExpressionStatement","src":"3268:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"3034:274:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3124:9:28","nodeType":"YulTypedName","src":"3124:9:28","type":""},{"name":"value1","nativeSrc":"3135:6:28","nodeType":"YulTypedName","src":"3135:6:28","type":""},{"name":"value0","nativeSrc":"3143:6:28","nodeType":"YulTypedName","src":"3143:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3154:4:28","nodeType":"YulTypedName","src":"3154:4:28","type":""}],"src":"3034:274:28"},{"body":{"nativeSrc":"3359:171:28","nodeType":"YulBlock","src":"3359:171:28","statements":[{"body":{"nativeSrc":"3390:111:28","nodeType":"YulBlock","src":"3390:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3411:1:28","nodeType":"YulLiteral","src":"3411:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3418:3:28","nodeType":"YulLiteral","src":"3418:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"3423:10:28","nodeType":"YulLiteral","src":"3423:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3414:3:28","nodeType":"YulIdentifier","src":"3414:3:28"},"nativeSrc":"3414:20:28","nodeType":"YulFunctionCall","src":"3414:20:28"}],"functionName":{"name":"mstore","nativeSrc":"3404:6:28","nodeType":"YulIdentifier","src":"3404:6:28"},"nativeSrc":"3404:31:28","nodeType":"YulFunctionCall","src":"3404:31:28"},"nativeSrc":"3404:31:28","nodeType":"YulExpressionStatement","src":"3404:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3455:1:28","nodeType":"YulLiteral","src":"3455:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"3458:4:28","nodeType":"YulLiteral","src":"3458:4:28","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"3448:6:28","nodeType":"YulIdentifier","src":"3448:6:28"},"nativeSrc":"3448:15:28","nodeType":"YulFunctionCall","src":"3448:15:28"},"nativeSrc":"3448:15:28","nodeType":"YulExpressionStatement","src":"3448:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3483:1:28","nodeType":"YulLiteral","src":"3483:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"3486:4:28","nodeType":"YulLiteral","src":"3486:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3476:6:28","nodeType":"YulIdentifier","src":"3476:6:28"},"nativeSrc":"3476:15:28","nodeType":"YulFunctionCall","src":"3476:15:28"},"nativeSrc":"3476:15:28","nodeType":"YulExpressionStatement","src":"3476:15:28"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"3379:1:28","nodeType":"YulIdentifier","src":"3379:1:28"}],"functionName":{"name":"iszero","nativeSrc":"3372:6:28","nodeType":"YulIdentifier","src":"3372:6:28"},"nativeSrc":"3372:9:28","nodeType":"YulFunctionCall","src":"3372:9:28"},"nativeSrc":"3369:132:28","nodeType":"YulIf","src":"3369:132:28"},{"nativeSrc":"3510:14:28","nodeType":"YulAssignment","src":"3510:14:28","value":{"arguments":[{"name":"x","nativeSrc":"3519:1:28","nodeType":"YulIdentifier","src":"3519:1:28"},{"name":"y","nativeSrc":"3522:1:28","nodeType":"YulIdentifier","src":"3522:1:28"}],"functionName":{"name":"div","nativeSrc":"3515:3:28","nodeType":"YulIdentifier","src":"3515:3:28"},"nativeSrc":"3515:9:28","nodeType":"YulFunctionCall","src":"3515:9:28"},"variableNames":[{"name":"r","nativeSrc":"3510:1:28","nodeType":"YulIdentifier","src":"3510:1:28"}]}]},"name":"checked_div_t_uint256","nativeSrc":"3313:217:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3344:1:28","nodeType":"YulTypedName","src":"3344:1:28","type":""},{"name":"y","nativeSrc":"3347:1:28","nodeType":"YulTypedName","src":"3347:1:28","type":""}],"returnVariables":[{"name":"r","nativeSrc":"3353:1:28","nodeType":"YulTypedName","src":"3353:1:28","type":""}],"src":"3313:217:28"},{"body":{"nativeSrc":"3587:116:28","nodeType":"YulBlock","src":"3587:116:28","statements":[{"nativeSrc":"3597:20:28","nodeType":"YulAssignment","src":"3597:20:28","value":{"arguments":[{"name":"x","nativeSrc":"3612:1:28","nodeType":"YulIdentifier","src":"3612:1:28"},{"name":"y","nativeSrc":"3615:1:28","nodeType":"YulIdentifier","src":"3615:1:28"}],"functionName":{"name":"mul","nativeSrc":"3608:3:28","nodeType":"YulIdentifier","src":"3608:3:28"},"nativeSrc":"3608:9:28","nodeType":"YulFunctionCall","src":"3608:9:28"},"variableNames":[{"name":"product","nativeSrc":"3597:7:28","nodeType":"YulIdentifier","src":"3597:7:28"}]},{"body":{"nativeSrc":"3675:22:28","nodeType":"YulBlock","src":"3675:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3677:16:28","nodeType":"YulIdentifier","src":"3677:16:28"},"nativeSrc":"3677:18:28","nodeType":"YulFunctionCall","src":"3677:18:28"},"nativeSrc":"3677:18:28","nodeType":"YulExpressionStatement","src":"3677:18:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"3646:1:28","nodeType":"YulIdentifier","src":"3646:1:28"}],"functionName":{"name":"iszero","nativeSrc":"3639:6:28","nodeType":"YulIdentifier","src":"3639:6:28"},"nativeSrc":"3639:9:28","nodeType":"YulFunctionCall","src":"3639:9:28"},{"arguments":[{"name":"y","nativeSrc":"3653:1:28","nodeType":"YulIdentifier","src":"3653:1:28"},{"arguments":[{"name":"product","nativeSrc":"3660:7:28","nodeType":"YulIdentifier","src":"3660:7:28"},{"name":"x","nativeSrc":"3669:1:28","nodeType":"YulIdentifier","src":"3669:1:28"}],"functionName":{"name":"div","nativeSrc":"3656:3:28","nodeType":"YulIdentifier","src":"3656:3:28"},"nativeSrc":"3656:15:28","nodeType":"YulFunctionCall","src":"3656:15:28"}],"functionName":{"name":"eq","nativeSrc":"3650:2:28","nodeType":"YulIdentifier","src":"3650:2:28"},"nativeSrc":"3650:22:28","nodeType":"YulFunctionCall","src":"3650:22:28"}],"functionName":{"name":"or","nativeSrc":"3636:2:28","nodeType":"YulIdentifier","src":"3636:2:28"},"nativeSrc":"3636:37:28","nodeType":"YulFunctionCall","src":"3636:37:28"}],"functionName":{"name":"iszero","nativeSrc":"3629:6:28","nodeType":"YulIdentifier","src":"3629:6:28"},"nativeSrc":"3629:45:28","nodeType":"YulFunctionCall","src":"3629:45:28"},"nativeSrc":"3626:71:28","nodeType":"YulIf","src":"3626:71:28"}]},"name":"checked_mul_t_uint256","nativeSrc":"3535:168:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3566:1:28","nodeType":"YulTypedName","src":"3566:1:28","type":""},{"name":"y","nativeSrc":"3569:1:28","nodeType":"YulTypedName","src":"3569:1:28","type":""}],"returnVariables":[{"name":"product","nativeSrc":"3575:7:28","nodeType":"YulTypedName","src":"3575:7:28","type":""}],"src":"3535:168:28"},{"body":{"nativeSrc":"3865:218:28","nodeType":"YulBlock","src":"3865:218:28","statements":[{"nativeSrc":"3875:26:28","nodeType":"YulAssignment","src":"3875:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3887:9:28","nodeType":"YulIdentifier","src":"3887:9:28"},{"kind":"number","nativeSrc":"3898:2:28","nodeType":"YulLiteral","src":"3898:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3883:3:28","nodeType":"YulIdentifier","src":"3883:3:28"},"nativeSrc":"3883:18:28","nodeType":"YulFunctionCall","src":"3883:18:28"},"variableNames":[{"name":"tail","nativeSrc":"3875:4:28","nodeType":"YulIdentifier","src":"3875:4:28"}]},{"nativeSrc":"3910:29:28","nodeType":"YulVariableDeclaration","src":"3910:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3928:3:28","nodeType":"YulLiteral","src":"3928:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"3933:1:28","nodeType":"YulLiteral","src":"3933:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3924:3:28","nodeType":"YulIdentifier","src":"3924:3:28"},"nativeSrc":"3924:11:28","nodeType":"YulFunctionCall","src":"3924:11:28"},{"kind":"number","nativeSrc":"3937:1:28","nodeType":"YulLiteral","src":"3937:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3920:3:28","nodeType":"YulIdentifier","src":"3920:3:28"},"nativeSrc":"3920:19:28","nodeType":"YulFunctionCall","src":"3920:19:28"},"variables":[{"name":"_1","nativeSrc":"3914:2:28","nodeType":"YulTypedName","src":"3914:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3955:9:28","nodeType":"YulIdentifier","src":"3955:9:28"},{"arguments":[{"name":"value0","nativeSrc":"3970:6:28","nodeType":"YulIdentifier","src":"3970:6:28"},{"name":"_1","nativeSrc":"3978:2:28","nodeType":"YulIdentifier","src":"3978:2:28"}],"functionName":{"name":"and","nativeSrc":"3966:3:28","nodeType":"YulIdentifier","src":"3966:3:28"},"nativeSrc":"3966:15:28","nodeType":"YulFunctionCall","src":"3966:15:28"}],"functionName":{"name":"mstore","nativeSrc":"3948:6:28","nodeType":"YulIdentifier","src":"3948:6:28"},"nativeSrc":"3948:34:28","nodeType":"YulFunctionCall","src":"3948:34:28"},"nativeSrc":"3948:34:28","nodeType":"YulExpressionStatement","src":"3948:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4002:9:28","nodeType":"YulIdentifier","src":"4002:9:28"},{"kind":"number","nativeSrc":"4013:2:28","nodeType":"YulLiteral","src":"4013:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3998:3:28","nodeType":"YulIdentifier","src":"3998:3:28"},"nativeSrc":"3998:18:28","nodeType":"YulFunctionCall","src":"3998:18:28"},{"arguments":[{"name":"value1","nativeSrc":"4022:6:28","nodeType":"YulIdentifier","src":"4022:6:28"},{"name":"_1","nativeSrc":"4030:2:28","nodeType":"YulIdentifier","src":"4030:2:28"}],"functionName":{"name":"and","nativeSrc":"4018:3:28","nodeType":"YulIdentifier","src":"4018:3:28"},"nativeSrc":"4018:15:28","nodeType":"YulFunctionCall","src":"4018:15:28"}],"functionName":{"name":"mstore","nativeSrc":"3991:6:28","nodeType":"YulIdentifier","src":"3991:6:28"},"nativeSrc":"3991:43:28","nodeType":"YulFunctionCall","src":"3991:43:28"},"nativeSrc":"3991:43:28","nodeType":"YulExpressionStatement","src":"3991:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4054:9:28","nodeType":"YulIdentifier","src":"4054:9:28"},{"kind":"number","nativeSrc":"4065:2:28","nodeType":"YulLiteral","src":"4065:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4050:3:28","nodeType":"YulIdentifier","src":"4050:3:28"},"nativeSrc":"4050:18:28","nodeType":"YulFunctionCall","src":"4050:18:28"},{"name":"value2","nativeSrc":"4070:6:28","nodeType":"YulIdentifier","src":"4070:6:28"}],"functionName":{"name":"mstore","nativeSrc":"4043:6:28","nodeType":"YulIdentifier","src":"4043:6:28"},"nativeSrc":"4043:34:28","nodeType":"YulFunctionCall","src":"4043:34:28"},"nativeSrc":"4043:34:28","nodeType":"YulExpressionStatement","src":"4043:34:28"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"3708:375:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3818:9:28","nodeType":"YulTypedName","src":"3818:9:28","type":""},{"name":"value2","nativeSrc":"3829:6:28","nodeType":"YulTypedName","src":"3829:6:28","type":""},{"name":"value1","nativeSrc":"3837:6:28","nodeType":"YulTypedName","src":"3837:6:28","type":""},{"name":"value0","nativeSrc":"3845:6:28","nodeType":"YulTypedName","src":"3845:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3856:4:28","nodeType":"YulTypedName","src":"3856:4:28","type":""}],"src":"3708:375:28"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$992__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IRewardToken_$7543__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No reward available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c806372f702f31161008c578063b88a802f11610066578063b88a802f1461020e578063cf84944214610216578063f2fde38b1461021e578063f7c618c11461023157600080fd5b806372f702f3146101bf5780638da5cb5b146101ea578063a694fc3a146101fb57600080fd5b80634da6a556116100c85780634da6a556146101665780635dbdda691461018f57806367b40cf714610197578063715018a6146101b757600080fd5b806316934fc4146100ef5780632e17de781461013057806344a040f514610145575b600080fd5b6101166100fd36600461082f565b6003602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b61014361013e366004610858565b610244565b005b61015861015336600461082f565b61035d565b604051908152602001610127565b61015861017436600461082f565b6001600160a01b031660009081526003602052604090205490565b610158600a81565b6101586101a536600461082f565b60046020526000908152604090205481565b610143610370565b6001546101d2906001600160a01b031681565b6040516001600160a01b039091168152602001610127565b6000546001600160a01b03166101d2565b610143610209366004610858565b610384565b6101436104ae565b610158600581565b61014361022c36600461082f565b6105d4565b6002546101d2906001600160a01b031681565b3360009081526003602052604090205481111561029f5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b60006102aa33610612565b336000908152600460205260408120805492935083929091906102ce908490610887565b909155505033600090815260036020526040812080548492906102f29084906108a0565b90915550503360008181526003602052604090204260019182015554610324916001600160a01b03909116908461069e565b60405182815233907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f759060200160405180910390a25050565b60008061036983610612565b9392505050565b610378610702565b610382600061072f565b565b600081116103d45760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610296565b336000908152600360205260409020541561041f5760006103f433610612565b33600090815260046020526040812080549293508392909190610418908490610887565b9091555050505b600154610437906001600160a01b031633308461077f565b3360009081526003602052604081208054839290610456908490610887565b9091555050336000818152600360205260409081902042600190910155517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906104a39084815260200190565b60405180910390a250565b3360008181526004602052604081205490916104c990610612565b6104d39190610887565b90506000811161051b5760405162461bcd60e51b81526020600482015260136024820152724e6f2072657761726420617661696c61626c6560681b6044820152606401610296565b3360008181526004602081815260408084208490556003909152918290204260019091015560025491516340c10f1960e01b815290810192909252602482018390526001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561058a57600080fd5b505af115801561059e573d6000803e3d6000fd5b50506040518381523392507f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724191506020016104a3565b6105dc610702565b6001600160a01b03811661060657604051631e4fbdf760e01b815260006004820152602401610296565b61060f8161072f565b50565b6001600160a01b038116600090815260036020908152604080832081518083019092528054808352600190910154928201929092529082036106575750600092915050565b6020810151429060009061066b90836108a0565b9050600061067a600a836108b3565b845190915061068a6005836108d5565b61069491906108d5565b9695505050505050565b6040516001600160a01b038381166024830152604482018390526106fd91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506107be565b505050565b6000546001600160a01b031633146103825760405163118cdaa760e01b8152336004820152602401610296565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0384811660248301528381166044830152606482018390526107b89186918216906323b872dd906084016106cb565b50505050565b600080602060008451602086016000885af1806107e1576040513d6000823e3d81fd5b50506000513d915081156107f9578060011415610806565b6001600160a01b0384163b155b156107b857604051635274afe760e01b81526001600160a01b0385166004820152602401610296565b60006020828403121561084157600080fd5b81356001600160a01b038116811461036957600080fd5b60006020828403121561086a57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561089a5761089a610871565b92915050565b8181038181111561089a5761089a610871565b6000826108d057634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761089a5761089a61087156fea2646970667358221220b089ead6eee69745b08f8919869a8e4f9349b0ee25d49d1750b0f49a1952575c64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xCF849442 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DA6A556 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x4DA6A556 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x5DBDDA69 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x67B40CF7 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x44A040F5 EQ PUSH2 0x145 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x158 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x158 PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1D2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x158 PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2AA CALLER PUSH2 0x612 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2CE SWAP1 DUP5 SWAP1 PUSH2 0x887 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2F2 SWAP1 DUP5 SWAP1 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP2 DUP3 ADD SSTORE SLOAD PUSH2 0x324 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x369 DUP4 PUSH2 0x612 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x378 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x382 PUSH1 0x0 PUSH2 0x72F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 PUSH2 0x3F4 CALLER PUSH2 0x612 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x418 SWAP1 DUP5 SWAP1 PUSH2 0x887 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x437 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x77F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x456 SWAP1 DUP5 SWAP1 PUSH2 0x887 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0x4A3 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4C9 SWAP1 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F2072657761726420617661696C61626C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP3 POP PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP2 POP PUSH1 0x20 ADD PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x606 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x296 JUMP JUMPDEST PUSH2 0x60F DUP2 PUSH2 0x72F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 SUB PUSH2 0x657 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD TIMESTAMP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x66B SWAP1 DUP4 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x67A PUSH1 0xA DUP4 PUSH2 0x8B3 JUMP JUMPDEST DUP5 MLOAD SWAP1 SWAP2 POP PUSH2 0x68A PUSH1 0x5 DUP4 PUSH2 0x8D5 JUMP JUMPDEST PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x8D5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x6FD SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x7BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x7B8 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x6CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7F9 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x806 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x89A JUMPI PUSH2 0x89A PUSH2 0x871 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x89A JUMPI PUSH2 0x89A PUSH2 0x871 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x89A JUMPI PUSH2 0x89A PUSH2 0x871 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 DUP10 0xEA 0xD6 0xEE 0xE6 SWAP8 GASLIMIT 0xB0 DUP16 DUP10 NOT DUP7 SWAP11 DUP15 0x4F SWAP4 BLOBHASH 0xB0 0xEE 0x25 0xD4 SWAP14 OR POP 0xB0 DELEGATECALL SWAP11 NOT MSTORE JUMPI TLOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"339:3653:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;479:25:28;;;535:2;520:18;;513:34;;;;452:18;620:39:26;;;;;;;;2190:541;;;;;;:::i;:::-;;:::i;:::-;;3835:152;;;;;;:::i;:::-;;:::i;:::-;;;889:25:28;;;877:2;862:18;3835:152:26;743:177:28;1365:116:26;;;;;;:::i;:::-;-1:-1:-1;;;;;1454:12:26;1427:7;1454:12;;;:6;:12;;;;;:19;;1365:116;801:44;;843:2;801:44;;666:48;;;;;;:::i;:::-;;;;;;;;;;;;;;2293:101:0;;;:::i;413:26:26:-;;;;;-1:-1:-1;;;;;413:26:26;;;;;;-1:-1:-1;;;;;1103:32:28;;;1085:51;;1073:2;1058:18;413:26:26;925:217:28;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;1491:691:26;;;;;;:::i;:::-;;:::i;2739:457::-;;;:::i;723:41::-;;763:1;723:41;;2543:215:0;;;;;;:::i;:::-;;:::i;446:31:26:-;;;;;-1:-1:-1;;;;;446:31:26;;;2190:541;2258:10;2251:18;;;;:6;:18;;;;;:25;:35;-1:-1:-1;2251:35:26;2243:68;;;;-1:-1:-1;;;2243:68:26;;1786:2:28;2243:68:26;;;1768:21:28;1825:2;1805:18;;;1798:30;-1:-1:-1;;;1844:18:28;;;1837:50;1904:18;;2243:68:26;;;;;;;;;2332:21;2356:27;2372:10;2356:15;:27::i;:::-;2408:10;2394:25;;;;:13;:25;;;;;:42;;2332:51;;-1:-1:-1;2332:51:26;;2394:25;;;:42;;2332:51;;2394:42;:::i;:::-;;;;-1:-1:-1;;2513:10:26;2506:18;;;;:6;:18;;;;;:35;;2535:6;;2506:18;:35;;2535:6;;2506:35;:::i;:::-;;;;-1:-1:-1;;2559:10:26;2552:18;;;;:6;:18;;;;;2588:15;2552:33;;;;:51;2624:12;:45;;-1:-1:-1;;;;;2624:12:26;;;;2662:6;2624:25;:45::i;:::-;2695:28;;889:25:28;;;2704:10:26;;2695:28;;877:2:28;862:18;2695:28:26;;;;;;;2232:499;2190:541;:::o;3835:152::-;3897:7;3917:14;3934:21;3950:4;3934:15;:21::i;:::-;3917:38;3835:152;-1:-1:-1;;;3835:152:26:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1491:691:26:-;1559:1;1550:6;:10;1542:52;;;;-1:-1:-1;;;1542:52:26;;2530:2:28;1542:52:26;;;2512:21:28;2569:2;2549:18;;;2542:30;2608:31;2588:18;;;2581:59;2657:18;;1542:52:26;2328:353:28;1542:52:26;1626:10;1647:1;1619:18;;;:6;:18;;;;;:25;:29;1615:248;;1743:21;1767:27;1783:10;1767:15;:27::i;:::-;1823:10;1809:25;;;;:13;:25;;;;;:42;;1743:51;;-1:-1:-1;1743:51:26;;1809:25;;;:42;;1743:51;;1809:42;:::i;:::-;;;;-1:-1:-1;;;1615:248:26;1883:12;;:64;;-1:-1:-1;;;;;1883:12:26;1913:10;1933:4;1940:6;1883:29;:64::i;:::-;2032:10;2025:18;;;;:6;:18;;;;;:35;;2054:6;;2025:18;:35;;2054:6;;2025:35;:::i;:::-;;;;-1:-1:-1;;2078:10:26;2071:18;;;;:6;:18;;;;;;;2107:15;2071:33;;;;:51;2148:26;;;;;2167:6;889:25:28;;877:2;862:18;;743:177;2148:26:26;;;;;;;;1491:691;:::o;2739:457::-;2843:10;2782:14;2829:25;;;:13;:25;;;;;;2782:14;;2799:27;;:15;:27::i;:::-;:55;;;;:::i;:::-;2782:72;;2882:1;2873:6;:10;2865:42;;;;-1:-1:-1;;;2865:42:26;;2888:2:28;2865:42:26;;;2870:21:28;2927:2;2907:18;;;2900:30;-1:-1:-1;;;2946:18:28;;;2939:49;3005:18;;2865:42:26;2686:343:28;2865:42:26;2964:10;2978:1;2950:25;;;:13;:25;;;;;;;;:29;;;2990:6;:18;;;;;;;3026:15;2990:33;;;;:51;3093:11;;:36;;-1:-1:-1;;;3093:36:26;;;;;3208:51:28;;;;3275:18;;;3268:34;;;-1:-1:-1;;;;;3093:11:26;;:16;;3181:18:28;;3093:36:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3155:33:26;;889:25:28;;;3169:10:26;;-1:-1:-1;3155:33:26;;-1:-1:-1;877:2:28;862:18;3155:33:26;743:177:28;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1085:51:28::0;1058:18;;2672:31:0::1;925:217:28::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3204:625:26:-;-1:-1:-1;;;;;3311:12:26;;3266:7;3311:12;;;:6;:12;;;;;;;;3286:37;;;;;;;;;;;;;;;;;;;;;;;;;;3338:21;;3334:62;;-1:-1:-1;3383:1:26;;3204:625;-1:-1:-1;;3204:625:26:o;3334:62::-;3500:24;;;;3430:15;;3408:19;;3486:38;;3430:15;3486:38;:::i;:::-;3456:68;-1:-1:-1;3535:23:26;3561:37;843:2;3456:68;3561:37;:::i;:::-;3723:16;;3535:63;;-1:-1:-1;3689:31:26;763:1;3535:63;3689:31;:::i;:::-;:50;;;;:::i;:::-;3682:57;3204:625;-1:-1:-1;;;;;;3204:625:26:o;1219:160:11:-;1328:43;;-1:-1:-1;;;;;3226:32:28;;;1328:43:11;;;3208:51:28;3275:18;;;3268:34;;;1301:71:11;;1321:5;;1343:14;;;;;3181:18:28;;1328:43:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1328:43:11;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:12;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:12;1901:40:0;;;1085:51:28;1058:18;;1901:40:0;925:217:28;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1618:188:11:-;1745:53;;-1:-1:-1;;;;;3966:15:28;;;1745:53:11;;;3948:34:28;4018:15;;;3998:18;;;3991:43;4050:18;;;4043:34;;;1718:81:11;;1738:5;;1760:18;;;;;3883::28;;1745:53:11;3708:375:28;1718:81:11;1618:188;;;;:::o;7686:720::-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;-1:-1:-1;;8232:1:11;8226:8;8182:16;;-1:-1:-1;8258:15:11;;:68;;8310:11;8325:1;8310:16;;8258:68;;;-1:-1:-1;;;;;8276:26:11;;;:31;8258:68;8254:146;;;8349:40;;-1:-1:-1;;;8349:40:11;;-1:-1:-1;;;;;1103:32:28;;8349:40:11;;;1085:51:28;1058:18;;8349:40:11;925:217:28;14:286;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:28;;210:42;;200:70;;266:1;263;256:12;558:180;617:6;670:2;658:9;649:7;645:23;641:32;638:52;;;686:1;683;676:12;638:52;-1:-1:-1;709:23:28;;558:180;-1:-1:-1;558:180:28:o;1933:127::-;1994:10;1989:3;1985:20;1982:1;1975:31;2025:4;2022:1;2015:15;2049:4;2046:1;2039:15;2065:125;2130:9;;;2151:10;;;2148:36;;;2164:18;;:::i;:::-;2065:125;;;;:::o;2195:128::-;2262:9;;;2283:11;;;2280:37;;;2297:18;;:::i;3313:217::-;3353:1;3379;3369:132;;3423:10;3418:3;3414:20;3411:1;3404:31;3458:4;3455:1;3448:15;3486:4;3483:1;3476:15;3369:132;-1:-1:-1;3515:9:28;;3313:217::o;3535:168::-;3608:9;;;3639;;3656:15;;;3650:22;;3636:37;3626:71;;3677:18;;:::i"},"methodIdentifiers":{"REWARD_AMOUNT()":"cf849442","REWARD_INTERVAL()":"5dbdda69","claimReward()":"b88a802f","getRewardAmount(address)":"44a040f5","getStakedAmount(address)":"4da6a556","owner()":"8da5cb5b","renounceOwnership()":"715018a6","rewardBalance(address)":"67b40cf7","rewardToken()":"f7c618c1","stake(uint256)":"a694fc3a","stakes(address)":"16934fc4","stakingToken()":"72f702f3","transferOwnership(address)":"f2fde38b","unstake(uint256)":"2e17de78"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REWARD_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IRewardToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingDapp.sol\":\"StakingDapp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/StakingDapp.sol\":{\"keccak256\":\"0x15eda7303b65c3f638d99f6eff600dfcb0ab9374985dee1585ee235870a12a53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c06d4d96343e79a929afccfa71fa9e6befd69162968424d691d7d4420264efae\",\"dweb:/ipfs/QmVhyeD2U439xyaavQ1SZr4UDcHA8JFGFjBmkdPdH9nLrr\"]}},\"version\":1}"}},"contracts/StakingToken.sol":{"StakingToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1041":{"entryPoint":null,"id":1041,"parameterSlots":1,"returnSlots":0},"@_3753":{"entryPoint":null,"id":3753,"parameterSlots":2,"returnSlots":0},"@_451":{"entryPoint":null,"id":451,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7928":{"entryPoint":null,"id":7928,"parameterSlots":2,"returnSlots":0},"@_buildDomainSeparator_3800":{"entryPoint":null,"id":3800,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":367,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_2085":{"entryPoint":null,"id":2085,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1925":{"entryPoint":449,"id":1925,"parameterSlots":2,"returnSlots":1},"@toShortString_1827":{"entryPoint":506,"id":1827,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":778,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1233,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":944,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1286,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1029,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":595,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":884,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":573,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5654:28","nodeType":"YulBlock","src":"0:5654:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"46:95:28","nodeType":"YulBlock","src":"46:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:28","nodeType":"YulLiteral","src":"63:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:28","nodeType":"YulLiteral","src":"70:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:28","nodeType":"YulLiteral","src":"75:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:28","nodeType":"YulIdentifier","src":"66:3:28"},"nativeSrc":"66:20:28","nodeType":"YulFunctionCall","src":"66:20:28"}],"functionName":{"name":"mstore","nativeSrc":"56:6:28","nodeType":"YulIdentifier","src":"56:6:28"},"nativeSrc":"56:31:28","nodeType":"YulFunctionCall","src":"56:31:28"},"nativeSrc":"56:31:28","nodeType":"YulExpressionStatement","src":"56:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:28","nodeType":"YulLiteral","src":"103:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:28","nodeType":"YulLiteral","src":"106:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:28","nodeType":"YulIdentifier","src":"96:6:28"},"nativeSrc":"96:15:28","nodeType":"YulFunctionCall","src":"96:15:28"},"nativeSrc":"96:15:28","nodeType":"YulExpressionStatement","src":"96:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:28","nodeType":"YulLiteral","src":"127:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:28","nodeType":"YulLiteral","src":"130:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:28","nodeType":"YulIdentifier","src":"120:6:28"},"nativeSrc":"120:15:28","nodeType":"YulFunctionCall","src":"120:15:28"},"nativeSrc":"120:15:28","nodeType":"YulExpressionStatement","src":"120:15:28"}]},"name":"panic_error_0x41","nativeSrc":"14:127:28","nodeType":"YulFunctionDefinition","src":"14:127:28"},{"body":{"nativeSrc":"212:184:28","nodeType":"YulBlock","src":"212:184:28","statements":[{"nativeSrc":"222:10:28","nodeType":"YulVariableDeclaration","src":"222:10:28","value":{"kind":"number","nativeSrc":"231:1:28","nodeType":"YulLiteral","src":"231:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"226:1:28","nodeType":"YulTypedName","src":"226:1:28","type":""}]},{"body":{"nativeSrc":"291:63:28","nodeType":"YulBlock","src":"291:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"316:3:28","nodeType":"YulIdentifier","src":"316:3:28"},{"name":"i","nativeSrc":"321:1:28","nodeType":"YulIdentifier","src":"321:1:28"}],"functionName":{"name":"add","nativeSrc":"312:3:28","nodeType":"YulIdentifier","src":"312:3:28"},"nativeSrc":"312:11:28","nodeType":"YulFunctionCall","src":"312:11:28"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"335:3:28","nodeType":"YulIdentifier","src":"335:3:28"},{"name":"i","nativeSrc":"340:1:28","nodeType":"YulIdentifier","src":"340:1:28"}],"functionName":{"name":"add","nativeSrc":"331:3:28","nodeType":"YulIdentifier","src":"331:3:28"},"nativeSrc":"331:11:28","nodeType":"YulFunctionCall","src":"331:11:28"}],"functionName":{"name":"mload","nativeSrc":"325:5:28","nodeType":"YulIdentifier","src":"325:5:28"},"nativeSrc":"325:18:28","nodeType":"YulFunctionCall","src":"325:18:28"}],"functionName":{"name":"mstore","nativeSrc":"305:6:28","nodeType":"YulIdentifier","src":"305:6:28"},"nativeSrc":"305:39:28","nodeType":"YulFunctionCall","src":"305:39:28"},"nativeSrc":"305:39:28","nodeType":"YulExpressionStatement","src":"305:39:28"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"252:1:28","nodeType":"YulIdentifier","src":"252:1:28"},{"name":"length","nativeSrc":"255:6:28","nodeType":"YulIdentifier","src":"255:6:28"}],"functionName":{"name":"lt","nativeSrc":"249:2:28","nodeType":"YulIdentifier","src":"249:2:28"},"nativeSrc":"249:13:28","nodeType":"YulFunctionCall","src":"249:13:28"},"nativeSrc":"241:113:28","nodeType":"YulForLoop","post":{"nativeSrc":"263:19:28","nodeType":"YulBlock","src":"263:19:28","statements":[{"nativeSrc":"265:15:28","nodeType":"YulAssignment","src":"265:15:28","value":{"arguments":[{"name":"i","nativeSrc":"274:1:28","nodeType":"YulIdentifier","src":"274:1:28"},{"kind":"number","nativeSrc":"277:2:28","nodeType":"YulLiteral","src":"277:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"270:3:28","nodeType":"YulIdentifier","src":"270:3:28"},"nativeSrc":"270:10:28","nodeType":"YulFunctionCall","src":"270:10:28"},"variableNames":[{"name":"i","nativeSrc":"265:1:28","nodeType":"YulIdentifier","src":"265:1:28"}]}]},"pre":{"nativeSrc":"245:3:28","nodeType":"YulBlock","src":"245:3:28","statements":[]},"src":"241:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"374:3:28","nodeType":"YulIdentifier","src":"374:3:28"},{"name":"length","nativeSrc":"379:6:28","nodeType":"YulIdentifier","src":"379:6:28"}],"functionName":{"name":"add","nativeSrc":"370:3:28","nodeType":"YulIdentifier","src":"370:3:28"},"nativeSrc":"370:16:28","nodeType":"YulFunctionCall","src":"370:16:28"},{"kind":"number","nativeSrc":"388:1:28","nodeType":"YulLiteral","src":"388:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"363:6:28","nodeType":"YulIdentifier","src":"363:6:28"},"nativeSrc":"363:27:28","nodeType":"YulFunctionCall","src":"363:27:28"},"nativeSrc":"363:27:28","nodeType":"YulExpressionStatement","src":"363:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"146:250:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"190:3:28","nodeType":"YulTypedName","src":"190:3:28","type":""},{"name":"dst","nativeSrc":"195:3:28","nodeType":"YulTypedName","src":"195:3:28","type":""},{"name":"length","nativeSrc":"200:6:28","nodeType":"YulTypedName","src":"200:6:28","type":""}],"src":"146:250:28"},{"body":{"nativeSrc":"465:635:28","nodeType":"YulBlock","src":"465:635:28","statements":[{"body":{"nativeSrc":"514:16:28","nodeType":"YulBlock","src":"514:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"523:1:28","nodeType":"YulLiteral","src":"523:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"526:1:28","nodeType":"YulLiteral","src":"526:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"516:6:28","nodeType":"YulIdentifier","src":"516:6:28"},"nativeSrc":"516:12:28","nodeType":"YulFunctionCall","src":"516:12:28"},"nativeSrc":"516:12:28","nodeType":"YulExpressionStatement","src":"516:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"493:6:28","nodeType":"YulIdentifier","src":"493:6:28"},{"kind":"number","nativeSrc":"501:4:28","nodeType":"YulLiteral","src":"501:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"489:3:28","nodeType":"YulIdentifier","src":"489:3:28"},"nativeSrc":"489:17:28","nodeType":"YulFunctionCall","src":"489:17:28"},{"name":"end","nativeSrc":"508:3:28","nodeType":"YulIdentifier","src":"508:3:28"}],"functionName":{"name":"slt","nativeSrc":"485:3:28","nodeType":"YulIdentifier","src":"485:3:28"},"nativeSrc":"485:27:28","nodeType":"YulFunctionCall","src":"485:27:28"}],"functionName":{"name":"iszero","nativeSrc":"478:6:28","nodeType":"YulIdentifier","src":"478:6:28"},"nativeSrc":"478:35:28","nodeType":"YulFunctionCall","src":"478:35:28"},"nativeSrc":"475:55:28","nodeType":"YulIf","src":"475:55:28"},{"nativeSrc":"539:23:28","nodeType":"YulVariableDeclaration","src":"539:23:28","value":{"arguments":[{"name":"offset","nativeSrc":"555:6:28","nodeType":"YulIdentifier","src":"555:6:28"}],"functionName":{"name":"mload","nativeSrc":"549:5:28","nodeType":"YulIdentifier","src":"549:5:28"},"nativeSrc":"549:13:28","nodeType":"YulFunctionCall","src":"549:13:28"},"variables":[{"name":"_1","nativeSrc":"543:2:28","nodeType":"YulTypedName","src":"543:2:28","type":""}]},{"nativeSrc":"571:28:28","nodeType":"YulVariableDeclaration","src":"571:28:28","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"589:2:28","nodeType":"YulLiteral","src":"589:2:28","type":"","value":"64"},{"kind":"number","nativeSrc":"593:1:28","nodeType":"YulLiteral","src":"593:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"585:3:28","nodeType":"YulIdentifier","src":"585:3:28"},"nativeSrc":"585:10:28","nodeType":"YulFunctionCall","src":"585:10:28"},{"kind":"number","nativeSrc":"597:1:28","nodeType":"YulLiteral","src":"597:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"581:3:28","nodeType":"YulIdentifier","src":"581:3:28"},"nativeSrc":"581:18:28","nodeType":"YulFunctionCall","src":"581:18:28"},"variables":[{"name":"_2","nativeSrc":"575:2:28","nodeType":"YulTypedName","src":"575:2:28","type":""}]},{"body":{"nativeSrc":"622:22:28","nodeType":"YulBlock","src":"622:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"624:16:28","nodeType":"YulIdentifier","src":"624:16:28"},"nativeSrc":"624:18:28","nodeType":"YulFunctionCall","src":"624:18:28"},"nativeSrc":"624:18:28","nodeType":"YulExpressionStatement","src":"624:18:28"}]},"condition":{"arguments":[{"name":"_1","nativeSrc":"614:2:28","nodeType":"YulIdentifier","src":"614:2:28"},{"name":"_2","nativeSrc":"618:2:28","nodeType":"YulIdentifier","src":"618:2:28"}],"functionName":{"name":"gt","nativeSrc":"611:2:28","nodeType":"YulIdentifier","src":"611:2:28"},"nativeSrc":"611:10:28","nodeType":"YulFunctionCall","src":"611:10:28"},"nativeSrc":"608:36:28","nodeType":"YulIf","src":"608:36:28"},{"nativeSrc":"653:17:28","nodeType":"YulVariableDeclaration","src":"653:17:28","value":{"arguments":[{"kind":"number","nativeSrc":"667:2:28","nodeType":"YulLiteral","src":"667:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"663:3:28","nodeType":"YulIdentifier","src":"663:3:28"},"nativeSrc":"663:7:28","nodeType":"YulFunctionCall","src":"663:7:28"},"variables":[{"name":"_3","nativeSrc":"657:2:28","nodeType":"YulTypedName","src":"657:2:28","type":""}]},{"nativeSrc":"679:23:28","nodeType":"YulVariableDeclaration","src":"679:23:28","value":{"arguments":[{"kind":"number","nativeSrc":"699:2:28","nodeType":"YulLiteral","src":"699:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"693:5:28","nodeType":"YulIdentifier","src":"693:5:28"},"nativeSrc":"693:9:28","nodeType":"YulFunctionCall","src":"693:9:28"},"variables":[{"name":"memPtr","nativeSrc":"683:6:28","nodeType":"YulTypedName","src":"683:6:28","type":""}]},{"nativeSrc":"711:71:28","nodeType":"YulVariableDeclaration","src":"711:71:28","value":{"arguments":[{"name":"memPtr","nativeSrc":"733:6:28","nodeType":"YulIdentifier","src":"733:6:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"757:2:28","nodeType":"YulIdentifier","src":"757:2:28"},{"kind":"number","nativeSrc":"761:4:28","nodeType":"YulLiteral","src":"761:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"753:3:28","nodeType":"YulIdentifier","src":"753:3:28"},"nativeSrc":"753:13:28","nodeType":"YulFunctionCall","src":"753:13:28"},{"name":"_3","nativeSrc":"768:2:28","nodeType":"YulIdentifier","src":"768:2:28"}],"functionName":{"name":"and","nativeSrc":"749:3:28","nodeType":"YulIdentifier","src":"749:3:28"},"nativeSrc":"749:22:28","nodeType":"YulFunctionCall","src":"749:22:28"},{"kind":"number","nativeSrc":"773:2:28","nodeType":"YulLiteral","src":"773:2:28","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"745:3:28","nodeType":"YulIdentifier","src":"745:3:28"},"nativeSrc":"745:31:28","nodeType":"YulFunctionCall","src":"745:31:28"},{"name":"_3","nativeSrc":"778:2:28","nodeType":"YulIdentifier","src":"778:2:28"}],"functionName":{"name":"and","nativeSrc":"741:3:28","nodeType":"YulIdentifier","src":"741:3:28"},"nativeSrc":"741:40:28","nodeType":"YulFunctionCall","src":"741:40:28"}],"functionName":{"name":"add","nativeSrc":"729:3:28","nodeType":"YulIdentifier","src":"729:3:28"},"nativeSrc":"729:53:28","nodeType":"YulFunctionCall","src":"729:53:28"},"variables":[{"name":"newFreePtr","nativeSrc":"715:10:28","nodeType":"YulTypedName","src":"715:10:28","type":""}]},{"body":{"nativeSrc":"841:22:28","nodeType":"YulBlock","src":"841:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"843:16:28","nodeType":"YulIdentifier","src":"843:16:28"},"nativeSrc":"843:18:28","nodeType":"YulFunctionCall","src":"843:18:28"},"nativeSrc":"843:18:28","nodeType":"YulExpressionStatement","src":"843:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"800:10:28","nodeType":"YulIdentifier","src":"800:10:28"},{"name":"_2","nativeSrc":"812:2:28","nodeType":"YulIdentifier","src":"812:2:28"}],"functionName":{"name":"gt","nativeSrc":"797:2:28","nodeType":"YulIdentifier","src":"797:2:28"},"nativeSrc":"797:18:28","nodeType":"YulFunctionCall","src":"797:18:28"},{"arguments":[{"name":"newFreePtr","nativeSrc":"820:10:28","nodeType":"YulIdentifier","src":"820:10:28"},{"name":"memPtr","nativeSrc":"832:6:28","nodeType":"YulIdentifier","src":"832:6:28"}],"functionName":{"name":"lt","nativeSrc":"817:2:28","nodeType":"YulIdentifier","src":"817:2:28"},"nativeSrc":"817:22:28","nodeType":"YulFunctionCall","src":"817:22:28"}],"functionName":{"name":"or","nativeSrc":"794:2:28","nodeType":"YulIdentifier","src":"794:2:28"},"nativeSrc":"794:46:28","nodeType":"YulFunctionCall","src":"794:46:28"},"nativeSrc":"791:72:28","nodeType":"YulIf","src":"791:72:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"879:2:28","nodeType":"YulLiteral","src":"879:2:28","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"883:10:28","nodeType":"YulIdentifier","src":"883:10:28"}],"functionName":{"name":"mstore","nativeSrc":"872:6:28","nodeType":"YulIdentifier","src":"872:6:28"},"nativeSrc":"872:22:28","nodeType":"YulFunctionCall","src":"872:22:28"},"nativeSrc":"872:22:28","nodeType":"YulExpressionStatement","src":"872:22:28"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"910:6:28","nodeType":"YulIdentifier","src":"910:6:28"},{"name":"_1","nativeSrc":"918:2:28","nodeType":"YulIdentifier","src":"918:2:28"}],"functionName":{"name":"mstore","nativeSrc":"903:6:28","nodeType":"YulIdentifier","src":"903:6:28"},"nativeSrc":"903:18:28","nodeType":"YulFunctionCall","src":"903:18:28"},"nativeSrc":"903:18:28","nodeType":"YulExpressionStatement","src":"903:18:28"},{"body":{"nativeSrc":"969:16:28","nodeType":"YulBlock","src":"969:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"978:1:28","nodeType":"YulLiteral","src":"978:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"981:1:28","nodeType":"YulLiteral","src":"981:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"971:6:28","nodeType":"YulIdentifier","src":"971:6:28"},"nativeSrc":"971:12:28","nodeType":"YulFunctionCall","src":"971:12:28"},"nativeSrc":"971:12:28","nodeType":"YulExpressionStatement","src":"971:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"944:6:28","nodeType":"YulIdentifier","src":"944:6:28"},{"name":"_1","nativeSrc":"952:2:28","nodeType":"YulIdentifier","src":"952:2:28"}],"functionName":{"name":"add","nativeSrc":"940:3:28","nodeType":"YulIdentifier","src":"940:3:28"},"nativeSrc":"940:15:28","nodeType":"YulFunctionCall","src":"940:15:28"},{"kind":"number","nativeSrc":"957:4:28","nodeType":"YulLiteral","src":"957:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"936:3:28","nodeType":"YulIdentifier","src":"936:3:28"},"nativeSrc":"936:26:28","nodeType":"YulFunctionCall","src":"936:26:28"},{"name":"end","nativeSrc":"964:3:28","nodeType":"YulIdentifier","src":"964:3:28"}],"functionName":{"name":"gt","nativeSrc":"933:2:28","nodeType":"YulIdentifier","src":"933:2:28"},"nativeSrc":"933:35:28","nodeType":"YulFunctionCall","src":"933:35:28"},"nativeSrc":"930:55:28","nodeType":"YulIf","src":"930:55:28"},{"expression":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1033:6:28","nodeType":"YulIdentifier","src":"1033:6:28"},{"kind":"number","nativeSrc":"1041:4:28","nodeType":"YulLiteral","src":"1041:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1029:3:28","nodeType":"YulIdentifier","src":"1029:3:28"},"nativeSrc":"1029:17:28","nodeType":"YulFunctionCall","src":"1029:17:28"},{"arguments":[{"name":"memPtr","nativeSrc":"1052:6:28","nodeType":"YulIdentifier","src":"1052:6:28"},{"kind":"number","nativeSrc":"1060:4:28","nodeType":"YulLiteral","src":"1060:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1048:3:28","nodeType":"YulIdentifier","src":"1048:3:28"},"nativeSrc":"1048:17:28","nodeType":"YulFunctionCall","src":"1048:17:28"},{"name":"_1","nativeSrc":"1067:2:28","nodeType":"YulIdentifier","src":"1067:2:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"994:34:28","nodeType":"YulIdentifier","src":"994:34:28"},"nativeSrc":"994:76:28","nodeType":"YulFunctionCall","src":"994:76:28"},"nativeSrc":"994:76:28","nodeType":"YulExpressionStatement","src":"994:76:28"},{"nativeSrc":"1079:15:28","nodeType":"YulAssignment","src":"1079:15:28","value":{"name":"memPtr","nativeSrc":"1088:6:28","nodeType":"YulIdentifier","src":"1088:6:28"},"variableNames":[{"name":"array","nativeSrc":"1079:5:28","nodeType":"YulIdentifier","src":"1079:5:28"}]}]},"name":"abi_decode_string_fromMemory","nativeSrc":"401:699:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"439:6:28","nodeType":"YulTypedName","src":"439:6:28","type":""},{"name":"end","nativeSrc":"447:3:28","nodeType":"YulTypedName","src":"447:3:28","type":""}],"returnVariables":[{"name":"array","nativeSrc":"455:5:28","nodeType":"YulTypedName","src":"455:5:28","type":""}],"src":"401:699:28"},{"body":{"nativeSrc":"1223:444:28","nodeType":"YulBlock","src":"1223:444:28","statements":[{"body":{"nativeSrc":"1269:16:28","nodeType":"YulBlock","src":"1269:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1278:1:28","nodeType":"YulLiteral","src":"1278:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1281:1:28","nodeType":"YulLiteral","src":"1281:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1271:6:28","nodeType":"YulIdentifier","src":"1271:6:28"},"nativeSrc":"1271:12:28","nodeType":"YulFunctionCall","src":"1271:12:28"},"nativeSrc":"1271:12:28","nodeType":"YulExpressionStatement","src":"1271:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1244:7:28","nodeType":"YulIdentifier","src":"1244:7:28"},{"name":"headStart","nativeSrc":"1253:9:28","nodeType":"YulIdentifier","src":"1253:9:28"}],"functionName":{"name":"sub","nativeSrc":"1240:3:28","nodeType":"YulIdentifier","src":"1240:3:28"},"nativeSrc":"1240:23:28","nodeType":"YulFunctionCall","src":"1240:23:28"},{"kind":"number","nativeSrc":"1265:2:28","nodeType":"YulLiteral","src":"1265:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1236:3:28","nodeType":"YulIdentifier","src":"1236:3:28"},"nativeSrc":"1236:32:28","nodeType":"YulFunctionCall","src":"1236:32:28"},"nativeSrc":"1233:52:28","nodeType":"YulIf","src":"1233:52:28"},{"nativeSrc":"1294:30:28","nodeType":"YulVariableDeclaration","src":"1294:30:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1314:9:28","nodeType":"YulIdentifier","src":"1314:9:28"}],"functionName":{"name":"mload","nativeSrc":"1308:5:28","nodeType":"YulIdentifier","src":"1308:5:28"},"nativeSrc":"1308:16:28","nodeType":"YulFunctionCall","src":"1308:16:28"},"variables":[{"name":"offset","nativeSrc":"1298:6:28","nodeType":"YulTypedName","src":"1298:6:28","type":""}]},{"nativeSrc":"1333:28:28","nodeType":"YulVariableDeclaration","src":"1333:28:28","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1351:2:28","nodeType":"YulLiteral","src":"1351:2:28","type":"","value":"64"},{"kind":"number","nativeSrc":"1355:1:28","nodeType":"YulLiteral","src":"1355:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1347:3:28","nodeType":"YulIdentifier","src":"1347:3:28"},"nativeSrc":"1347:10:28","nodeType":"YulFunctionCall","src":"1347:10:28"},{"kind":"number","nativeSrc":"1359:1:28","nodeType":"YulLiteral","src":"1359:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1343:3:28","nodeType":"YulIdentifier","src":"1343:3:28"},"nativeSrc":"1343:18:28","nodeType":"YulFunctionCall","src":"1343:18:28"},"variables":[{"name":"_1","nativeSrc":"1337:2:28","nodeType":"YulTypedName","src":"1337:2:28","type":""}]},{"body":{"nativeSrc":"1388:16:28","nodeType":"YulBlock","src":"1388:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:1:28","nodeType":"YulLiteral","src":"1397:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1400:1:28","nodeType":"YulLiteral","src":"1400:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1390:6:28","nodeType":"YulIdentifier","src":"1390:6:28"},"nativeSrc":"1390:12:28","nodeType":"YulFunctionCall","src":"1390:12:28"},"nativeSrc":"1390:12:28","nodeType":"YulExpressionStatement","src":"1390:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1376:6:28","nodeType":"YulIdentifier","src":"1376:6:28"},{"name":"_1","nativeSrc":"1384:2:28","nodeType":"YulIdentifier","src":"1384:2:28"}],"functionName":{"name":"gt","nativeSrc":"1373:2:28","nodeType":"YulIdentifier","src":"1373:2:28"},"nativeSrc":"1373:14:28","nodeType":"YulFunctionCall","src":"1373:14:28"},"nativeSrc":"1370:34:28","nodeType":"YulIf","src":"1370:34:28"},{"nativeSrc":"1413:71:28","nodeType":"YulAssignment","src":"1413:71:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1456:9:28","nodeType":"YulIdentifier","src":"1456:9:28"},{"name":"offset","nativeSrc":"1467:6:28","nodeType":"YulIdentifier","src":"1467:6:28"}],"functionName":{"name":"add","nativeSrc":"1452:3:28","nodeType":"YulIdentifier","src":"1452:3:28"},"nativeSrc":"1452:22:28","nodeType":"YulFunctionCall","src":"1452:22:28"},{"name":"dataEnd","nativeSrc":"1476:7:28","nodeType":"YulIdentifier","src":"1476:7:28"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1423:28:28","nodeType":"YulIdentifier","src":"1423:28:28"},"nativeSrc":"1423:61:28","nodeType":"YulFunctionCall","src":"1423:61:28"},"variableNames":[{"name":"value0","nativeSrc":"1413:6:28","nodeType":"YulIdentifier","src":"1413:6:28"}]},{"nativeSrc":"1493:41:28","nodeType":"YulVariableDeclaration","src":"1493:41:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1519:9:28","nodeType":"YulIdentifier","src":"1519:9:28"},{"kind":"number","nativeSrc":"1530:2:28","nodeType":"YulLiteral","src":"1530:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1515:3:28","nodeType":"YulIdentifier","src":"1515:3:28"},"nativeSrc":"1515:18:28","nodeType":"YulFunctionCall","src":"1515:18:28"}],"functionName":{"name":"mload","nativeSrc":"1509:5:28","nodeType":"YulIdentifier","src":"1509:5:28"},"nativeSrc":"1509:25:28","nodeType":"YulFunctionCall","src":"1509:25:28"},"variables":[{"name":"offset_1","nativeSrc":"1497:8:28","nodeType":"YulTypedName","src":"1497:8:28","type":""}]},{"body":{"nativeSrc":"1563:16:28","nodeType":"YulBlock","src":"1563:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1572:1:28","nodeType":"YulLiteral","src":"1572:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1575:1:28","nodeType":"YulLiteral","src":"1575:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1565:6:28","nodeType":"YulIdentifier","src":"1565:6:28"},"nativeSrc":"1565:12:28","nodeType":"YulFunctionCall","src":"1565:12:28"},"nativeSrc":"1565:12:28","nodeType":"YulExpressionStatement","src":"1565:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"1549:8:28","nodeType":"YulIdentifier","src":"1549:8:28"},{"name":"_1","nativeSrc":"1559:2:28","nodeType":"YulIdentifier","src":"1559:2:28"}],"functionName":{"name":"gt","nativeSrc":"1546:2:28","nodeType":"YulIdentifier","src":"1546:2:28"},"nativeSrc":"1546:16:28","nodeType":"YulFunctionCall","src":"1546:16:28"},"nativeSrc":"1543:36:28","nodeType":"YulIf","src":"1543:36:28"},{"nativeSrc":"1588:73:28","nodeType":"YulAssignment","src":"1588:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1631:9:28","nodeType":"YulIdentifier","src":"1631:9:28"},{"name":"offset_1","nativeSrc":"1642:8:28","nodeType":"YulIdentifier","src":"1642:8:28"}],"functionName":{"name":"add","nativeSrc":"1627:3:28","nodeType":"YulIdentifier","src":"1627:3:28"},"nativeSrc":"1627:24:28","nodeType":"YulFunctionCall","src":"1627:24:28"},{"name":"dataEnd","nativeSrc":"1653:7:28","nodeType":"YulIdentifier","src":"1653:7:28"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1598:28:28","nodeType":"YulIdentifier","src":"1598:28:28"},"nativeSrc":"1598:63:28","nodeType":"YulFunctionCall","src":"1598:63:28"},"variableNames":[{"name":"value1","nativeSrc":"1588:6:28","nodeType":"YulIdentifier","src":"1588:6:28"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nativeSrc":"1105:562:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1181:9:28","nodeType":"YulTypedName","src":"1181:9:28","type":""},{"name":"dataEnd","nativeSrc":"1192:7:28","nodeType":"YulTypedName","src":"1192:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1204:6:28","nodeType":"YulTypedName","src":"1204:6:28","type":""},{"name":"value1","nativeSrc":"1212:6:28","nodeType":"YulTypedName","src":"1212:6:28","type":""}],"src":"1105:562:28"},{"body":{"nativeSrc":"1727:325:28","nodeType":"YulBlock","src":"1727:325:28","statements":[{"nativeSrc":"1737:22:28","nodeType":"YulAssignment","src":"1737:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"1751:1:28","nodeType":"YulLiteral","src":"1751:1:28","type":"","value":"1"},{"name":"data","nativeSrc":"1754:4:28","nodeType":"YulIdentifier","src":"1754:4:28"}],"functionName":{"name":"shr","nativeSrc":"1747:3:28","nodeType":"YulIdentifier","src":"1747:3:28"},"nativeSrc":"1747:12:28","nodeType":"YulFunctionCall","src":"1747:12:28"},"variableNames":[{"name":"length","nativeSrc":"1737:6:28","nodeType":"YulIdentifier","src":"1737:6:28"}]},{"nativeSrc":"1768:38:28","nodeType":"YulVariableDeclaration","src":"1768:38:28","value":{"arguments":[{"name":"data","nativeSrc":"1798:4:28","nodeType":"YulIdentifier","src":"1798:4:28"},{"kind":"number","nativeSrc":"1804:1:28","nodeType":"YulLiteral","src":"1804:1:28","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1794:3:28","nodeType":"YulIdentifier","src":"1794:3:28"},"nativeSrc":"1794:12:28","nodeType":"YulFunctionCall","src":"1794:12:28"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1772:18:28","nodeType":"YulTypedName","src":"1772:18:28","type":""}]},{"body":{"nativeSrc":"1845:31:28","nodeType":"YulBlock","src":"1845:31:28","statements":[{"nativeSrc":"1847:27:28","nodeType":"YulAssignment","src":"1847:27:28","value":{"arguments":[{"name":"length","nativeSrc":"1861:6:28","nodeType":"YulIdentifier","src":"1861:6:28"},{"kind":"number","nativeSrc":"1869:4:28","nodeType":"YulLiteral","src":"1869:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1857:3:28","nodeType":"YulIdentifier","src":"1857:3:28"},"nativeSrc":"1857:17:28","nodeType":"YulFunctionCall","src":"1857:17:28"},"variableNames":[{"name":"length","nativeSrc":"1847:6:28","nodeType":"YulIdentifier","src":"1847:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1825:18:28","nodeType":"YulIdentifier","src":"1825:18:28"}],"functionName":{"name":"iszero","nativeSrc":"1818:6:28","nodeType":"YulIdentifier","src":"1818:6:28"},"nativeSrc":"1818:26:28","nodeType":"YulFunctionCall","src":"1818:26:28"},"nativeSrc":"1815:61:28","nodeType":"YulIf","src":"1815:61:28"},{"body":{"nativeSrc":"1935:111:28","nodeType":"YulBlock","src":"1935:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1956:1:28","nodeType":"YulLiteral","src":"1956:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1963:3:28","nodeType":"YulLiteral","src":"1963:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"1968:10:28","nodeType":"YulLiteral","src":"1968:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1959:3:28","nodeType":"YulIdentifier","src":"1959:3:28"},"nativeSrc":"1959:20:28","nodeType":"YulFunctionCall","src":"1959:20:28"}],"functionName":{"name":"mstore","nativeSrc":"1949:6:28","nodeType":"YulIdentifier","src":"1949:6:28"},"nativeSrc":"1949:31:28","nodeType":"YulFunctionCall","src":"1949:31:28"},"nativeSrc":"1949:31:28","nodeType":"YulExpressionStatement","src":"1949:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2000:1:28","nodeType":"YulLiteral","src":"2000:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"2003:4:28","nodeType":"YulLiteral","src":"2003:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1993:6:28","nodeType":"YulIdentifier","src":"1993:6:28"},"nativeSrc":"1993:15:28","nodeType":"YulFunctionCall","src":"1993:15:28"},"nativeSrc":"1993:15:28","nodeType":"YulExpressionStatement","src":"1993:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2028:1:28","nodeType":"YulLiteral","src":"2028:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2031:4:28","nodeType":"YulLiteral","src":"2031:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2021:6:28","nodeType":"YulIdentifier","src":"2021:6:28"},"nativeSrc":"2021:15:28","nodeType":"YulFunctionCall","src":"2021:15:28"},"nativeSrc":"2021:15:28","nodeType":"YulExpressionStatement","src":"2021:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1891:18:28","nodeType":"YulIdentifier","src":"1891:18:28"},{"arguments":[{"name":"length","nativeSrc":"1914:6:28","nodeType":"YulIdentifier","src":"1914:6:28"},{"kind":"number","nativeSrc":"1922:2:28","nodeType":"YulLiteral","src":"1922:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1911:2:28","nodeType":"YulIdentifier","src":"1911:2:28"},"nativeSrc":"1911:14:28","nodeType":"YulFunctionCall","src":"1911:14:28"}],"functionName":{"name":"eq","nativeSrc":"1888:2:28","nodeType":"YulIdentifier","src":"1888:2:28"},"nativeSrc":"1888:38:28","nodeType":"YulFunctionCall","src":"1888:38:28"},"nativeSrc":"1885:161:28","nodeType":"YulIf","src":"1885:161:28"}]},"name":"extract_byte_array_length","nativeSrc":"1672:380:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1707:4:28","nodeType":"YulTypedName","src":"1707:4:28","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1716:6:28","nodeType":"YulTypedName","src":"1716:6:28","type":""}],"src":"1672:380:28"},{"body":{"nativeSrc":"2113:65:28","nodeType":"YulBlock","src":"2113:65:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2130:1:28","nodeType":"YulLiteral","src":"2130:1:28","type":"","value":"0"},{"name":"ptr","nativeSrc":"2133:3:28","nodeType":"YulIdentifier","src":"2133:3:28"}],"functionName":{"name":"mstore","nativeSrc":"2123:6:28","nodeType":"YulIdentifier","src":"2123:6:28"},"nativeSrc":"2123:14:28","nodeType":"YulFunctionCall","src":"2123:14:28"},"nativeSrc":"2123:14:28","nodeType":"YulExpressionStatement","src":"2123:14:28"},{"nativeSrc":"2146:26:28","nodeType":"YulAssignment","src":"2146:26:28","value":{"arguments":[{"kind":"number","nativeSrc":"2164:1:28","nodeType":"YulLiteral","src":"2164:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2167:4:28","nodeType":"YulLiteral","src":"2167:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2154:9:28","nodeType":"YulIdentifier","src":"2154:9:28"},"nativeSrc":"2154:18:28","nodeType":"YulFunctionCall","src":"2154:18:28"},"variableNames":[{"name":"data","nativeSrc":"2146:4:28","nodeType":"YulIdentifier","src":"2146:4:28"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"2057:121:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2096:3:28","nodeType":"YulTypedName","src":"2096:3:28","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2104:4:28","nodeType":"YulTypedName","src":"2104:4:28","type":""}],"src":"2057:121:28"},{"body":{"nativeSrc":"2264:462:28","nodeType":"YulBlock","src":"2264:462:28","statements":[{"body":{"nativeSrc":"2297:423:28","nodeType":"YulBlock","src":"2297:423:28","statements":[{"nativeSrc":"2311:11:28","nodeType":"YulVariableDeclaration","src":"2311:11:28","value":{"kind":"number","nativeSrc":"2321:1:28","nodeType":"YulLiteral","src":"2321:1:28","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"2315:2:28","nodeType":"YulTypedName","src":"2315:2:28","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2342:1:28","nodeType":"YulLiteral","src":"2342:1:28","type":"","value":"0"},{"name":"array","nativeSrc":"2345:5:28","nodeType":"YulIdentifier","src":"2345:5:28"}],"functionName":{"name":"mstore","nativeSrc":"2335:6:28","nodeType":"YulIdentifier","src":"2335:6:28"},"nativeSrc":"2335:16:28","nodeType":"YulFunctionCall","src":"2335:16:28"},"nativeSrc":"2335:16:28","nodeType":"YulExpressionStatement","src":"2335:16:28"},{"nativeSrc":"2364:30:28","nodeType":"YulVariableDeclaration","src":"2364:30:28","value":{"arguments":[{"kind":"number","nativeSrc":"2386:1:28","nodeType":"YulLiteral","src":"2386:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2389:4:28","nodeType":"YulLiteral","src":"2389:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2376:9:28","nodeType":"YulIdentifier","src":"2376:9:28"},"nativeSrc":"2376:18:28","nodeType":"YulFunctionCall","src":"2376:18:28"},"variables":[{"name":"data","nativeSrc":"2368:4:28","nodeType":"YulTypedName","src":"2368:4:28","type":""}]},{"nativeSrc":"2407:57:28","nodeType":"YulVariableDeclaration","src":"2407:57:28","value":{"arguments":[{"name":"data","nativeSrc":"2430:4:28","nodeType":"YulIdentifier","src":"2430:4:28"},{"arguments":[{"kind":"number","nativeSrc":"2440:1:28","nodeType":"YulLiteral","src":"2440:1:28","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"2447:10:28","nodeType":"YulIdentifier","src":"2447:10:28"},{"kind":"number","nativeSrc":"2459:2:28","nodeType":"YulLiteral","src":"2459:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2443:3:28","nodeType":"YulIdentifier","src":"2443:3:28"},"nativeSrc":"2443:19:28","nodeType":"YulFunctionCall","src":"2443:19:28"}],"functionName":{"name":"shr","nativeSrc":"2436:3:28","nodeType":"YulIdentifier","src":"2436:3:28"},"nativeSrc":"2436:27:28","nodeType":"YulFunctionCall","src":"2436:27:28"}],"functionName":{"name":"add","nativeSrc":"2426:3:28","nodeType":"YulIdentifier","src":"2426:3:28"},"nativeSrc":"2426:38:28","nodeType":"YulFunctionCall","src":"2426:38:28"},"variables":[{"name":"deleteStart","nativeSrc":"2411:11:28","nodeType":"YulTypedName","src":"2411:11:28","type":""}]},{"body":{"nativeSrc":"2501:23:28","nodeType":"YulBlock","src":"2501:23:28","statements":[{"nativeSrc":"2503:19:28","nodeType":"YulAssignment","src":"2503:19:28","value":{"name":"data","nativeSrc":"2518:4:28","nodeType":"YulIdentifier","src":"2518:4:28"},"variableNames":[{"name":"deleteStart","nativeSrc":"2503:11:28","nodeType":"YulIdentifier","src":"2503:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"2483:10:28","nodeType":"YulIdentifier","src":"2483:10:28"},{"kind":"number","nativeSrc":"2495:4:28","nodeType":"YulLiteral","src":"2495:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"2480:2:28","nodeType":"YulIdentifier","src":"2480:2:28"},"nativeSrc":"2480:20:28","nodeType":"YulFunctionCall","src":"2480:20:28"},"nativeSrc":"2477:47:28","nodeType":"YulIf","src":"2477:47:28"},{"nativeSrc":"2537:41:28","nodeType":"YulVariableDeclaration","src":"2537:41:28","value":{"arguments":[{"name":"data","nativeSrc":"2551:4:28","nodeType":"YulIdentifier","src":"2551:4:28"},{"arguments":[{"kind":"number","nativeSrc":"2561:1:28","nodeType":"YulLiteral","src":"2561:1:28","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"2568:3:28","nodeType":"YulIdentifier","src":"2568:3:28"},{"kind":"number","nativeSrc":"2573:2:28","nodeType":"YulLiteral","src":"2573:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2564:3:28","nodeType":"YulIdentifier","src":"2564:3:28"},"nativeSrc":"2564:12:28","nodeType":"YulFunctionCall","src":"2564:12:28"}],"functionName":{"name":"shr","nativeSrc":"2557:3:28","nodeType":"YulIdentifier","src":"2557:3:28"},"nativeSrc":"2557:20:28","nodeType":"YulFunctionCall","src":"2557:20:28"}],"functionName":{"name":"add","nativeSrc":"2547:3:28","nodeType":"YulIdentifier","src":"2547:3:28"},"nativeSrc":"2547:31:28","nodeType":"YulFunctionCall","src":"2547:31:28"},"variables":[{"name":"_2","nativeSrc":"2541:2:28","nodeType":"YulTypedName","src":"2541:2:28","type":""}]},{"nativeSrc":"2591:24:28","nodeType":"YulVariableDeclaration","src":"2591:24:28","value":{"name":"deleteStart","nativeSrc":"2604:11:28","nodeType":"YulIdentifier","src":"2604:11:28"},"variables":[{"name":"start","nativeSrc":"2595:5:28","nodeType":"YulTypedName","src":"2595:5:28","type":""}]},{"body":{"nativeSrc":"2689:21:28","nodeType":"YulBlock","src":"2689:21:28","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2698:5:28","nodeType":"YulIdentifier","src":"2698:5:28"},{"name":"_1","nativeSrc":"2705:2:28","nodeType":"YulIdentifier","src":"2705:2:28"}],"functionName":{"name":"sstore","nativeSrc":"2691:6:28","nodeType":"YulIdentifier","src":"2691:6:28"},"nativeSrc":"2691:17:28","nodeType":"YulFunctionCall","src":"2691:17:28"},"nativeSrc":"2691:17:28","nodeType":"YulExpressionStatement","src":"2691:17:28"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2639:5:28","nodeType":"YulIdentifier","src":"2639:5:28"},{"name":"_2","nativeSrc":"2646:2:28","nodeType":"YulIdentifier","src":"2646:2:28"}],"functionName":{"name":"lt","nativeSrc":"2636:2:28","nodeType":"YulIdentifier","src":"2636:2:28"},"nativeSrc":"2636:13:28","nodeType":"YulFunctionCall","src":"2636:13:28"},"nativeSrc":"2628:82:28","nodeType":"YulForLoop","post":{"nativeSrc":"2650:26:28","nodeType":"YulBlock","src":"2650:26:28","statements":[{"nativeSrc":"2652:22:28","nodeType":"YulAssignment","src":"2652:22:28","value":{"arguments":[{"name":"start","nativeSrc":"2665:5:28","nodeType":"YulIdentifier","src":"2665:5:28"},{"kind":"number","nativeSrc":"2672:1:28","nodeType":"YulLiteral","src":"2672:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2661:3:28","nodeType":"YulIdentifier","src":"2661:3:28"},"nativeSrc":"2661:13:28","nodeType":"YulFunctionCall","src":"2661:13:28"},"variableNames":[{"name":"start","nativeSrc":"2652:5:28","nodeType":"YulIdentifier","src":"2652:5:28"}]}]},"pre":{"nativeSrc":"2632:3:28","nodeType":"YulBlock","src":"2632:3:28","statements":[]},"src":"2628:82:28"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2280:3:28","nodeType":"YulIdentifier","src":"2280:3:28"},{"kind":"number","nativeSrc":"2285:2:28","nodeType":"YulLiteral","src":"2285:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2277:2:28","nodeType":"YulIdentifier","src":"2277:2:28"},"nativeSrc":"2277:11:28","nodeType":"YulFunctionCall","src":"2277:11:28"},"nativeSrc":"2274:446:28","nodeType":"YulIf","src":"2274:446:28"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2183:543:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2236:5:28","nodeType":"YulTypedName","src":"2236:5:28","type":""},{"name":"len","nativeSrc":"2243:3:28","nodeType":"YulTypedName","src":"2243:3:28","type":""},{"name":"startIndex","nativeSrc":"2248:10:28","nodeType":"YulTypedName","src":"2248:10:28","type":""}],"src":"2183:543:28"},{"body":{"nativeSrc":"2816:81:28","nodeType":"YulBlock","src":"2816:81:28","statements":[{"nativeSrc":"2826:65:28","nodeType":"YulAssignment","src":"2826:65:28","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"2841:4:28","nodeType":"YulIdentifier","src":"2841:4:28"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2859:1:28","nodeType":"YulLiteral","src":"2859:1:28","type":"","value":"3"},{"name":"len","nativeSrc":"2862:3:28","nodeType":"YulIdentifier","src":"2862:3:28"}],"functionName":{"name":"shl","nativeSrc":"2855:3:28","nodeType":"YulIdentifier","src":"2855:3:28"},"nativeSrc":"2855:11:28","nodeType":"YulFunctionCall","src":"2855:11:28"},{"arguments":[{"kind":"number","nativeSrc":"2872:1:28","nodeType":"YulLiteral","src":"2872:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2868:3:28","nodeType":"YulIdentifier","src":"2868:3:28"},"nativeSrc":"2868:6:28","nodeType":"YulFunctionCall","src":"2868:6:28"}],"functionName":{"name":"shr","nativeSrc":"2851:3:28","nodeType":"YulIdentifier","src":"2851:3:28"},"nativeSrc":"2851:24:28","nodeType":"YulFunctionCall","src":"2851:24:28"}],"functionName":{"name":"not","nativeSrc":"2847:3:28","nodeType":"YulIdentifier","src":"2847:3:28"},"nativeSrc":"2847:29:28","nodeType":"YulFunctionCall","src":"2847:29:28"}],"functionName":{"name":"and","nativeSrc":"2837:3:28","nodeType":"YulIdentifier","src":"2837:3:28"},"nativeSrc":"2837:40:28","nodeType":"YulFunctionCall","src":"2837:40:28"},{"arguments":[{"kind":"number","nativeSrc":"2883:1:28","nodeType":"YulLiteral","src":"2883:1:28","type":"","value":"1"},{"name":"len","nativeSrc":"2886:3:28","nodeType":"YulIdentifier","src":"2886:3:28"}],"functionName":{"name":"shl","nativeSrc":"2879:3:28","nodeType":"YulIdentifier","src":"2879:3:28"},"nativeSrc":"2879:11:28","nodeType":"YulFunctionCall","src":"2879:11:28"}],"functionName":{"name":"or","nativeSrc":"2834:2:28","nodeType":"YulIdentifier","src":"2834:2:28"},"nativeSrc":"2834:57:28","nodeType":"YulFunctionCall","src":"2834:57:28"},"variableNames":[{"name":"used","nativeSrc":"2826:4:28","nodeType":"YulIdentifier","src":"2826:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2731:166:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2793:4:28","nodeType":"YulTypedName","src":"2793:4:28","type":""},{"name":"len","nativeSrc":"2799:3:28","nodeType":"YulTypedName","src":"2799:3:28","type":""}],"returnVariables":[{"name":"used","nativeSrc":"2807:4:28","nodeType":"YulTypedName","src":"2807:4:28","type":""}],"src":"2731:166:28"},{"body":{"nativeSrc":"2998:1249:28","nodeType":"YulBlock","src":"2998:1249:28","statements":[{"nativeSrc":"3008:24:28","nodeType":"YulVariableDeclaration","src":"3008:24:28","value":{"arguments":[{"name":"src","nativeSrc":"3028:3:28","nodeType":"YulIdentifier","src":"3028:3:28"}],"functionName":{"name":"mload","nativeSrc":"3022:5:28","nodeType":"YulIdentifier","src":"3022:5:28"},"nativeSrc":"3022:10:28","nodeType":"YulFunctionCall","src":"3022:10:28"},"variables":[{"name":"newLen","nativeSrc":"3012:6:28","nodeType":"YulTypedName","src":"3012:6:28","type":""}]},{"body":{"nativeSrc":"3075:22:28","nodeType":"YulBlock","src":"3075:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3077:16:28","nodeType":"YulIdentifier","src":"3077:16:28"},"nativeSrc":"3077:18:28","nodeType":"YulFunctionCall","src":"3077:18:28"},"nativeSrc":"3077:18:28","nodeType":"YulExpressionStatement","src":"3077:18:28"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"3047:6:28","nodeType":"YulIdentifier","src":"3047:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3063:2:28","nodeType":"YulLiteral","src":"3063:2:28","type":"","value":"64"},{"kind":"number","nativeSrc":"3067:1:28","nodeType":"YulLiteral","src":"3067:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3059:3:28","nodeType":"YulIdentifier","src":"3059:3:28"},"nativeSrc":"3059:10:28","nodeType":"YulFunctionCall","src":"3059:10:28"},{"kind":"number","nativeSrc":"3071:1:28","nodeType":"YulLiteral","src":"3071:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3055:3:28","nodeType":"YulIdentifier","src":"3055:3:28"},"nativeSrc":"3055:18:28","nodeType":"YulFunctionCall","src":"3055:18:28"}],"functionName":{"name":"gt","nativeSrc":"3044:2:28","nodeType":"YulIdentifier","src":"3044:2:28"},"nativeSrc":"3044:30:28","nodeType":"YulFunctionCall","src":"3044:30:28"},"nativeSrc":"3041:56:28","nodeType":"YulIf","src":"3041:56:28"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3150:4:28","nodeType":"YulIdentifier","src":"3150:4:28"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3188:4:28","nodeType":"YulIdentifier","src":"3188:4:28"}],"functionName":{"name":"sload","nativeSrc":"3182:5:28","nodeType":"YulIdentifier","src":"3182:5:28"},"nativeSrc":"3182:11:28","nodeType":"YulFunctionCall","src":"3182:11:28"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"3156:25:28","nodeType":"YulIdentifier","src":"3156:25:28"},"nativeSrc":"3156:38:28","nodeType":"YulFunctionCall","src":"3156:38:28"},{"name":"newLen","nativeSrc":"3196:6:28","nodeType":"YulIdentifier","src":"3196:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"3106:43:28","nodeType":"YulIdentifier","src":"3106:43:28"},"nativeSrc":"3106:97:28","nodeType":"YulFunctionCall","src":"3106:97:28"},"nativeSrc":"3106:97:28","nodeType":"YulExpressionStatement","src":"3106:97:28"},{"nativeSrc":"3212:18:28","nodeType":"YulVariableDeclaration","src":"3212:18:28","value":{"kind":"number","nativeSrc":"3229:1:28","nodeType":"YulLiteral","src":"3229:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"3216:9:28","nodeType":"YulTypedName","src":"3216:9:28","type":""}]},{"nativeSrc":"3239:23:28","nodeType":"YulVariableDeclaration","src":"3239:23:28","value":{"kind":"number","nativeSrc":"3258:4:28","nodeType":"YulLiteral","src":"3258:4:28","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"3243:11:28","nodeType":"YulTypedName","src":"3243:11:28","type":""}]},{"nativeSrc":"3271:17:28","nodeType":"YulAssignment","src":"3271:17:28","value":{"kind":"number","nativeSrc":"3284:4:28","nodeType":"YulLiteral","src":"3284:4:28","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"3271:9:28","nodeType":"YulIdentifier","src":"3271:9:28"}]},{"cases":[{"body":{"nativeSrc":"3334:656:28","nodeType":"YulBlock","src":"3334:656:28","statements":[{"nativeSrc":"3348:35:28","nodeType":"YulVariableDeclaration","src":"3348:35:28","value":{"arguments":[{"name":"newLen","nativeSrc":"3367:6:28","nodeType":"YulIdentifier","src":"3367:6:28"},{"arguments":[{"kind":"number","nativeSrc":"3379:2:28","nodeType":"YulLiteral","src":"3379:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3375:3:28","nodeType":"YulIdentifier","src":"3375:3:28"},"nativeSrc":"3375:7:28","nodeType":"YulFunctionCall","src":"3375:7:28"}],"functionName":{"name":"and","nativeSrc":"3363:3:28","nodeType":"YulIdentifier","src":"3363:3:28"},"nativeSrc":"3363:20:28","nodeType":"YulFunctionCall","src":"3363:20:28"},"variables":[{"name":"loopEnd","nativeSrc":"3352:7:28","nodeType":"YulTypedName","src":"3352:7:28","type":""}]},{"nativeSrc":"3396:49:28","nodeType":"YulVariableDeclaration","src":"3396:49:28","value":{"arguments":[{"name":"slot","nativeSrc":"3440:4:28","nodeType":"YulIdentifier","src":"3440:4:28"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"3410:29:28","nodeType":"YulIdentifier","src":"3410:29:28"},"nativeSrc":"3410:35:28","nodeType":"YulFunctionCall","src":"3410:35:28"},"variables":[{"name":"dstPtr","nativeSrc":"3400:6:28","nodeType":"YulTypedName","src":"3400:6:28","type":""}]},{"nativeSrc":"3458:10:28","nodeType":"YulVariableDeclaration","src":"3458:10:28","value":{"kind":"number","nativeSrc":"3467:1:28","nodeType":"YulLiteral","src":"3467:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3462:1:28","nodeType":"YulTypedName","src":"3462:1:28","type":""}]},{"body":{"nativeSrc":"3545:172:28","nodeType":"YulBlock","src":"3545:172:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3570:6:28","nodeType":"YulIdentifier","src":"3570:6:28"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3588:3:28","nodeType":"YulIdentifier","src":"3588:3:28"},{"name":"srcOffset","nativeSrc":"3593:9:28","nodeType":"YulIdentifier","src":"3593:9:28"}],"functionName":{"name":"add","nativeSrc":"3584:3:28","nodeType":"YulIdentifier","src":"3584:3:28"},"nativeSrc":"3584:19:28","nodeType":"YulFunctionCall","src":"3584:19:28"}],"functionName":{"name":"mload","nativeSrc":"3578:5:28","nodeType":"YulIdentifier","src":"3578:5:28"},"nativeSrc":"3578:26:28","nodeType":"YulFunctionCall","src":"3578:26:28"}],"functionName":{"name":"sstore","nativeSrc":"3563:6:28","nodeType":"YulIdentifier","src":"3563:6:28"},"nativeSrc":"3563:42:28","nodeType":"YulFunctionCall","src":"3563:42:28"},"nativeSrc":"3563:42:28","nodeType":"YulExpressionStatement","src":"3563:42:28"},{"nativeSrc":"3622:24:28","nodeType":"YulAssignment","src":"3622:24:28","value":{"arguments":[{"name":"dstPtr","nativeSrc":"3636:6:28","nodeType":"YulIdentifier","src":"3636:6:28"},{"kind":"number","nativeSrc":"3644:1:28","nodeType":"YulLiteral","src":"3644:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3632:3:28","nodeType":"YulIdentifier","src":"3632:3:28"},"nativeSrc":"3632:14:28","nodeType":"YulFunctionCall","src":"3632:14:28"},"variableNames":[{"name":"dstPtr","nativeSrc":"3622:6:28","nodeType":"YulIdentifier","src":"3622:6:28"}]},{"nativeSrc":"3663:40:28","nodeType":"YulAssignment","src":"3663:40:28","value":{"arguments":[{"name":"srcOffset","nativeSrc":"3680:9:28","nodeType":"YulIdentifier","src":"3680:9:28"},{"name":"srcOffset_1","nativeSrc":"3691:11:28","nodeType":"YulIdentifier","src":"3691:11:28"}],"functionName":{"name":"add","nativeSrc":"3676:3:28","nodeType":"YulIdentifier","src":"3676:3:28"},"nativeSrc":"3676:27:28","nodeType":"YulFunctionCall","src":"3676:27:28"},"variableNames":[{"name":"srcOffset","nativeSrc":"3663:9:28","nodeType":"YulIdentifier","src":"3663:9:28"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3492:1:28","nodeType":"YulIdentifier","src":"3492:1:28"},{"name":"loopEnd","nativeSrc":"3495:7:28","nodeType":"YulIdentifier","src":"3495:7:28"}],"functionName":{"name":"lt","nativeSrc":"3489:2:28","nodeType":"YulIdentifier","src":"3489:2:28"},"nativeSrc":"3489:14:28","nodeType":"YulFunctionCall","src":"3489:14:28"},"nativeSrc":"3481:236:28","nodeType":"YulForLoop","post":{"nativeSrc":"3504:28:28","nodeType":"YulBlock","src":"3504:28:28","statements":[{"nativeSrc":"3506:24:28","nodeType":"YulAssignment","src":"3506:24:28","value":{"arguments":[{"name":"i","nativeSrc":"3515:1:28","nodeType":"YulIdentifier","src":"3515:1:28"},{"name":"srcOffset_1","nativeSrc":"3518:11:28","nodeType":"YulIdentifier","src":"3518:11:28"}],"functionName":{"name":"add","nativeSrc":"3511:3:28","nodeType":"YulIdentifier","src":"3511:3:28"},"nativeSrc":"3511:19:28","nodeType":"YulFunctionCall","src":"3511:19:28"},"variableNames":[{"name":"i","nativeSrc":"3506:1:28","nodeType":"YulIdentifier","src":"3506:1:28"}]}]},"pre":{"nativeSrc":"3485:3:28","nodeType":"YulBlock","src":"3485:3:28","statements":[]},"src":"3481:236:28"},{"body":{"nativeSrc":"3765:166:28","nodeType":"YulBlock","src":"3765:166:28","statements":[{"nativeSrc":"3783:43:28","nodeType":"YulVariableDeclaration","src":"3783:43:28","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3810:3:28","nodeType":"YulIdentifier","src":"3810:3:28"},{"name":"srcOffset","nativeSrc":"3815:9:28","nodeType":"YulIdentifier","src":"3815:9:28"}],"functionName":{"name":"add","nativeSrc":"3806:3:28","nodeType":"YulIdentifier","src":"3806:3:28"},"nativeSrc":"3806:19:28","nodeType":"YulFunctionCall","src":"3806:19:28"}],"functionName":{"name":"mload","nativeSrc":"3800:5:28","nodeType":"YulIdentifier","src":"3800:5:28"},"nativeSrc":"3800:26:28","nodeType":"YulFunctionCall","src":"3800:26:28"},"variables":[{"name":"lastValue","nativeSrc":"3787:9:28","nodeType":"YulTypedName","src":"3787:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3850:6:28","nodeType":"YulIdentifier","src":"3850:6:28"},{"arguments":[{"name":"lastValue","nativeSrc":"3862:9:28","nodeType":"YulIdentifier","src":"3862:9:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3889:1:28","nodeType":"YulLiteral","src":"3889:1:28","type":"","value":"3"},{"name":"newLen","nativeSrc":"3892:6:28","nodeType":"YulIdentifier","src":"3892:6:28"}],"functionName":{"name":"shl","nativeSrc":"3885:3:28","nodeType":"YulIdentifier","src":"3885:3:28"},"nativeSrc":"3885:14:28","nodeType":"YulFunctionCall","src":"3885:14:28"},{"kind":"number","nativeSrc":"3901:3:28","nodeType":"YulLiteral","src":"3901:3:28","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"3881:3:28","nodeType":"YulIdentifier","src":"3881:3:28"},"nativeSrc":"3881:24:28","nodeType":"YulFunctionCall","src":"3881:24:28"},{"arguments":[{"kind":"number","nativeSrc":"3911:1:28","nodeType":"YulLiteral","src":"3911:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3907:3:28","nodeType":"YulIdentifier","src":"3907:3:28"},"nativeSrc":"3907:6:28","nodeType":"YulFunctionCall","src":"3907:6:28"}],"functionName":{"name":"shr","nativeSrc":"3877:3:28","nodeType":"YulIdentifier","src":"3877:3:28"},"nativeSrc":"3877:37:28","nodeType":"YulFunctionCall","src":"3877:37:28"}],"functionName":{"name":"not","nativeSrc":"3873:3:28","nodeType":"YulIdentifier","src":"3873:3:28"},"nativeSrc":"3873:42:28","nodeType":"YulFunctionCall","src":"3873:42:28"}],"functionName":{"name":"and","nativeSrc":"3858:3:28","nodeType":"YulIdentifier","src":"3858:3:28"},"nativeSrc":"3858:58:28","nodeType":"YulFunctionCall","src":"3858:58:28"}],"functionName":{"name":"sstore","nativeSrc":"3843:6:28","nodeType":"YulIdentifier","src":"3843:6:28"},"nativeSrc":"3843:74:28","nodeType":"YulFunctionCall","src":"3843:74:28"},"nativeSrc":"3843:74:28","nodeType":"YulExpressionStatement","src":"3843:74:28"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"3736:7:28","nodeType":"YulIdentifier","src":"3736:7:28"},{"name":"newLen","nativeSrc":"3745:6:28","nodeType":"YulIdentifier","src":"3745:6:28"}],"functionName":{"name":"lt","nativeSrc":"3733:2:28","nodeType":"YulIdentifier","src":"3733:2:28"},"nativeSrc":"3733:19:28","nodeType":"YulFunctionCall","src":"3733:19:28"},"nativeSrc":"3730:201:28","nodeType":"YulIf","src":"3730:201:28"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3951:4:28","nodeType":"YulIdentifier","src":"3951:4:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3965:1:28","nodeType":"YulLiteral","src":"3965:1:28","type":"","value":"1"},{"name":"newLen","nativeSrc":"3968:6:28","nodeType":"YulIdentifier","src":"3968:6:28"}],"functionName":{"name":"shl","nativeSrc":"3961:3:28","nodeType":"YulIdentifier","src":"3961:3:28"},"nativeSrc":"3961:14:28","nodeType":"YulFunctionCall","src":"3961:14:28"},{"kind":"number","nativeSrc":"3977:1:28","nodeType":"YulLiteral","src":"3977:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3957:3:28","nodeType":"YulIdentifier","src":"3957:3:28"},"nativeSrc":"3957:22:28","nodeType":"YulFunctionCall","src":"3957:22:28"}],"functionName":{"name":"sstore","nativeSrc":"3944:6:28","nodeType":"YulIdentifier","src":"3944:6:28"},"nativeSrc":"3944:36:28","nodeType":"YulFunctionCall","src":"3944:36:28"},"nativeSrc":"3944:36:28","nodeType":"YulExpressionStatement","src":"3944:36:28"}]},"nativeSrc":"3327:663:28","nodeType":"YulCase","src":"3327:663:28","value":{"kind":"number","nativeSrc":"3332:1:28","nodeType":"YulLiteral","src":"3332:1:28","type":"","value":"1"}},{"body":{"nativeSrc":"4007:234:28","nodeType":"YulBlock","src":"4007:234:28","statements":[{"nativeSrc":"4021:14:28","nodeType":"YulVariableDeclaration","src":"4021:14:28","value":{"kind":"number","nativeSrc":"4034:1:28","nodeType":"YulLiteral","src":"4034:1:28","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"4025:5:28","nodeType":"YulTypedName","src":"4025:5:28","type":""}]},{"body":{"nativeSrc":"4070:67:28","nodeType":"YulBlock","src":"4070:67:28","statements":[{"nativeSrc":"4088:35:28","nodeType":"YulAssignment","src":"4088:35:28","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4107:3:28","nodeType":"YulIdentifier","src":"4107:3:28"},{"name":"srcOffset","nativeSrc":"4112:9:28","nodeType":"YulIdentifier","src":"4112:9:28"}],"functionName":{"name":"add","nativeSrc":"4103:3:28","nodeType":"YulIdentifier","src":"4103:3:28"},"nativeSrc":"4103:19:28","nodeType":"YulFunctionCall","src":"4103:19:28"}],"functionName":{"name":"mload","nativeSrc":"4097:5:28","nodeType":"YulIdentifier","src":"4097:5:28"},"nativeSrc":"4097:26:28","nodeType":"YulFunctionCall","src":"4097:26:28"},"variableNames":[{"name":"value","nativeSrc":"4088:5:28","nodeType":"YulIdentifier","src":"4088:5:28"}]}]},"condition":{"name":"newLen","nativeSrc":"4051:6:28","nodeType":"YulIdentifier","src":"4051:6:28"},"nativeSrc":"4048:89:28","nodeType":"YulIf","src":"4048:89:28"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4157:4:28","nodeType":"YulIdentifier","src":"4157:4:28"},{"arguments":[{"name":"value","nativeSrc":"4216:5:28","nodeType":"YulIdentifier","src":"4216:5:28"},{"name":"newLen","nativeSrc":"4223:6:28","nodeType":"YulIdentifier","src":"4223:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4163:52:28","nodeType":"YulIdentifier","src":"4163:52:28"},"nativeSrc":"4163:67:28","nodeType":"YulFunctionCall","src":"4163:67:28"}],"functionName":{"name":"sstore","nativeSrc":"4150:6:28","nodeType":"YulIdentifier","src":"4150:6:28"},"nativeSrc":"4150:81:28","nodeType":"YulFunctionCall","src":"4150:81:28"},"nativeSrc":"4150:81:28","nodeType":"YulExpressionStatement","src":"4150:81:28"}]},"nativeSrc":"3999:242:28","nodeType":"YulCase","src":"3999:242:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"3307:6:28","nodeType":"YulIdentifier","src":"3307:6:28"},{"kind":"number","nativeSrc":"3315:2:28","nodeType":"YulLiteral","src":"3315:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3304:2:28","nodeType":"YulIdentifier","src":"3304:2:28"},"nativeSrc":"3304:14:28","nodeType":"YulFunctionCall","src":"3304:14:28"},"nativeSrc":"3297:944:28","nodeType":"YulSwitch","src":"3297:944:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"2902:1345:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2983:4:28","nodeType":"YulTypedName","src":"2983:4:28","type":""},{"name":"src","nativeSrc":"2989:3:28","nodeType":"YulTypedName","src":"2989:3:28","type":""}],"src":"2902:1345:28"},{"body":{"nativeSrc":"4353:102:28","nodeType":"YulBlock","src":"4353:102:28","statements":[{"nativeSrc":"4363:26:28","nodeType":"YulAssignment","src":"4363:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4375:9:28","nodeType":"YulIdentifier","src":"4375:9:28"},{"kind":"number","nativeSrc":"4386:2:28","nodeType":"YulLiteral","src":"4386:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4371:3:28","nodeType":"YulIdentifier","src":"4371:3:28"},"nativeSrc":"4371:18:28","nodeType":"YulFunctionCall","src":"4371:18:28"},"variableNames":[{"name":"tail","nativeSrc":"4363:4:28","nodeType":"YulIdentifier","src":"4363:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4405:9:28","nodeType":"YulIdentifier","src":"4405:9:28"},{"arguments":[{"name":"value0","nativeSrc":"4420:6:28","nodeType":"YulIdentifier","src":"4420:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4436:3:28","nodeType":"YulLiteral","src":"4436:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"4441:1:28","nodeType":"YulLiteral","src":"4441:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4432:3:28","nodeType":"YulIdentifier","src":"4432:3:28"},"nativeSrc":"4432:11:28","nodeType":"YulFunctionCall","src":"4432:11:28"},{"kind":"number","nativeSrc":"4445:1:28","nodeType":"YulLiteral","src":"4445:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4428:3:28","nodeType":"YulIdentifier","src":"4428:3:28"},"nativeSrc":"4428:19:28","nodeType":"YulFunctionCall","src":"4428:19:28"}],"functionName":{"name":"and","nativeSrc":"4416:3:28","nodeType":"YulIdentifier","src":"4416:3:28"},"nativeSrc":"4416:32:28","nodeType":"YulFunctionCall","src":"4416:32:28"}],"functionName":{"name":"mstore","nativeSrc":"4398:6:28","nodeType":"YulIdentifier","src":"4398:6:28"},"nativeSrc":"4398:51:28","nodeType":"YulFunctionCall","src":"4398:51:28"},"nativeSrc":"4398:51:28","nodeType":"YulExpressionStatement","src":"4398:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4252:203:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4322:9:28","nodeType":"YulTypedName","src":"4322:9:28","type":""},{"name":"value0","nativeSrc":"4333:6:28","nodeType":"YulTypedName","src":"4333:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4344:4:28","nodeType":"YulTypedName","src":"4344:4:28","type":""}],"src":"4252:203:28"},{"body":{"nativeSrc":"4673:276:28","nodeType":"YulBlock","src":"4673:276:28","statements":[{"nativeSrc":"4683:27:28","nodeType":"YulAssignment","src":"4683:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4695:9:28","nodeType":"YulIdentifier","src":"4695:9:28"},{"kind":"number","nativeSrc":"4706:3:28","nodeType":"YulLiteral","src":"4706:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4691:3:28","nodeType":"YulIdentifier","src":"4691:3:28"},"nativeSrc":"4691:19:28","nodeType":"YulFunctionCall","src":"4691:19:28"},"variableNames":[{"name":"tail","nativeSrc":"4683:4:28","nodeType":"YulIdentifier","src":"4683:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4726:9:28","nodeType":"YulIdentifier","src":"4726:9:28"},{"name":"value0","nativeSrc":"4737:6:28","nodeType":"YulIdentifier","src":"4737:6:28"}],"functionName":{"name":"mstore","nativeSrc":"4719:6:28","nodeType":"YulIdentifier","src":"4719:6:28"},"nativeSrc":"4719:25:28","nodeType":"YulFunctionCall","src":"4719:25:28"},"nativeSrc":"4719:25:28","nodeType":"YulExpressionStatement","src":"4719:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4764:9:28","nodeType":"YulIdentifier","src":"4764:9:28"},{"kind":"number","nativeSrc":"4775:2:28","nodeType":"YulLiteral","src":"4775:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4760:3:28","nodeType":"YulIdentifier","src":"4760:3:28"},"nativeSrc":"4760:18:28","nodeType":"YulFunctionCall","src":"4760:18:28"},{"name":"value1","nativeSrc":"4780:6:28","nodeType":"YulIdentifier","src":"4780:6:28"}],"functionName":{"name":"mstore","nativeSrc":"4753:6:28","nodeType":"YulIdentifier","src":"4753:6:28"},"nativeSrc":"4753:34:28","nodeType":"YulFunctionCall","src":"4753:34:28"},"nativeSrc":"4753:34:28","nodeType":"YulExpressionStatement","src":"4753:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4807:9:28","nodeType":"YulIdentifier","src":"4807:9:28"},{"kind":"number","nativeSrc":"4818:2:28","nodeType":"YulLiteral","src":"4818:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4803:3:28","nodeType":"YulIdentifier","src":"4803:3:28"},"nativeSrc":"4803:18:28","nodeType":"YulFunctionCall","src":"4803:18:28"},{"name":"value2","nativeSrc":"4823:6:28","nodeType":"YulIdentifier","src":"4823:6:28"}],"functionName":{"name":"mstore","nativeSrc":"4796:6:28","nodeType":"YulIdentifier","src":"4796:6:28"},"nativeSrc":"4796:34:28","nodeType":"YulFunctionCall","src":"4796:34:28"},"nativeSrc":"4796:34:28","nodeType":"YulExpressionStatement","src":"4796:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4850:9:28","nodeType":"YulIdentifier","src":"4850:9:28"},{"kind":"number","nativeSrc":"4861:2:28","nodeType":"YulLiteral","src":"4861:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4846:3:28","nodeType":"YulIdentifier","src":"4846:3:28"},"nativeSrc":"4846:18:28","nodeType":"YulFunctionCall","src":"4846:18:28"},{"name":"value3","nativeSrc":"4866:6:28","nodeType":"YulIdentifier","src":"4866:6:28"}],"functionName":{"name":"mstore","nativeSrc":"4839:6:28","nodeType":"YulIdentifier","src":"4839:6:28"},"nativeSrc":"4839:34:28","nodeType":"YulFunctionCall","src":"4839:34:28"},"nativeSrc":"4839:34:28","nodeType":"YulExpressionStatement","src":"4839:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4893:9:28","nodeType":"YulIdentifier","src":"4893:9:28"},{"kind":"number","nativeSrc":"4904:3:28","nodeType":"YulLiteral","src":"4904:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4889:3:28","nodeType":"YulIdentifier","src":"4889:3:28"},"nativeSrc":"4889:19:28","nodeType":"YulFunctionCall","src":"4889:19:28"},{"arguments":[{"name":"value4","nativeSrc":"4914:6:28","nodeType":"YulIdentifier","src":"4914:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4930:3:28","nodeType":"YulLiteral","src":"4930:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"4935:1:28","nodeType":"YulLiteral","src":"4935:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4926:3:28","nodeType":"YulIdentifier","src":"4926:3:28"},"nativeSrc":"4926:11:28","nodeType":"YulFunctionCall","src":"4926:11:28"},{"kind":"number","nativeSrc":"4939:1:28","nodeType":"YulLiteral","src":"4939:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4922:3:28","nodeType":"YulIdentifier","src":"4922:3:28"},"nativeSrc":"4922:19:28","nodeType":"YulFunctionCall","src":"4922:19:28"}],"functionName":{"name":"and","nativeSrc":"4910:3:28","nodeType":"YulIdentifier","src":"4910:3:28"},"nativeSrc":"4910:32:28","nodeType":"YulFunctionCall","src":"4910:32:28"}],"functionName":{"name":"mstore","nativeSrc":"4882:6:28","nodeType":"YulIdentifier","src":"4882:6:28"},"nativeSrc":"4882:61:28","nodeType":"YulFunctionCall","src":"4882:61:28"},"nativeSrc":"4882:61:28","nodeType":"YulExpressionStatement","src":"4882:61:28"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"4460:489:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4610:9:28","nodeType":"YulTypedName","src":"4610:9:28","type":""},{"name":"value4","nativeSrc":"4621:6:28","nodeType":"YulTypedName","src":"4621:6:28","type":""},{"name":"value3","nativeSrc":"4629:6:28","nodeType":"YulTypedName","src":"4629:6:28","type":""},{"name":"value2","nativeSrc":"4637:6:28","nodeType":"YulTypedName","src":"4637:6:28","type":""},{"name":"value1","nativeSrc":"4645:6:28","nodeType":"YulTypedName","src":"4645:6:28","type":""},{"name":"value0","nativeSrc":"4653:6:28","nodeType":"YulTypedName","src":"4653:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4664:4:28","nodeType":"YulTypedName","src":"4664:4:28","type":""}],"src":"4460:489:28"},{"body":{"nativeSrc":"5075:275:28","nodeType":"YulBlock","src":"5075:275:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5092:9:28","nodeType":"YulIdentifier","src":"5092:9:28"},{"kind":"number","nativeSrc":"5103:2:28","nodeType":"YulLiteral","src":"5103:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5085:6:28","nodeType":"YulIdentifier","src":"5085:6:28"},"nativeSrc":"5085:21:28","nodeType":"YulFunctionCall","src":"5085:21:28"},"nativeSrc":"5085:21:28","nodeType":"YulExpressionStatement","src":"5085:21:28"},{"nativeSrc":"5115:27:28","nodeType":"YulVariableDeclaration","src":"5115:27:28","value":{"arguments":[{"name":"value0","nativeSrc":"5135:6:28","nodeType":"YulIdentifier","src":"5135:6:28"}],"functionName":{"name":"mload","nativeSrc":"5129:5:28","nodeType":"YulIdentifier","src":"5129:5:28"},"nativeSrc":"5129:13:28","nodeType":"YulFunctionCall","src":"5129:13:28"},"variables":[{"name":"length","nativeSrc":"5119:6:28","nodeType":"YulTypedName","src":"5119:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5162:9:28","nodeType":"YulIdentifier","src":"5162:9:28"},{"kind":"number","nativeSrc":"5173:2:28","nodeType":"YulLiteral","src":"5173:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5158:3:28","nodeType":"YulIdentifier","src":"5158:3:28"},"nativeSrc":"5158:18:28","nodeType":"YulFunctionCall","src":"5158:18:28"},{"name":"length","nativeSrc":"5178:6:28","nodeType":"YulIdentifier","src":"5178:6:28"}],"functionName":{"name":"mstore","nativeSrc":"5151:6:28","nodeType":"YulIdentifier","src":"5151:6:28"},"nativeSrc":"5151:34:28","nodeType":"YulFunctionCall","src":"5151:34:28"},"nativeSrc":"5151:34:28","nodeType":"YulExpressionStatement","src":"5151:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5233:6:28","nodeType":"YulIdentifier","src":"5233:6:28"},{"kind":"number","nativeSrc":"5241:2:28","nodeType":"YulLiteral","src":"5241:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5229:3:28","nodeType":"YulIdentifier","src":"5229:3:28"},"nativeSrc":"5229:15:28","nodeType":"YulFunctionCall","src":"5229:15:28"},{"arguments":[{"name":"headStart","nativeSrc":"5250:9:28","nodeType":"YulIdentifier","src":"5250:9:28"},{"kind":"number","nativeSrc":"5261:2:28","nodeType":"YulLiteral","src":"5261:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5246:3:28","nodeType":"YulIdentifier","src":"5246:3:28"},"nativeSrc":"5246:18:28","nodeType":"YulFunctionCall","src":"5246:18:28"},{"name":"length","nativeSrc":"5266:6:28","nodeType":"YulIdentifier","src":"5266:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"5194:34:28","nodeType":"YulIdentifier","src":"5194:34:28"},"nativeSrc":"5194:79:28","nodeType":"YulFunctionCall","src":"5194:79:28"},"nativeSrc":"5194:79:28","nodeType":"YulExpressionStatement","src":"5194:79:28"},{"nativeSrc":"5282:62:28","nodeType":"YulAssignment","src":"5282:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5298:9:28","nodeType":"YulIdentifier","src":"5298:9:28"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"5317:6:28","nodeType":"YulIdentifier","src":"5317:6:28"},{"kind":"number","nativeSrc":"5325:2:28","nodeType":"YulLiteral","src":"5325:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5313:3:28","nodeType":"YulIdentifier","src":"5313:3:28"},"nativeSrc":"5313:15:28","nodeType":"YulFunctionCall","src":"5313:15:28"},{"arguments":[{"kind":"number","nativeSrc":"5334:2:28","nodeType":"YulLiteral","src":"5334:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5330:3:28","nodeType":"YulIdentifier","src":"5330:3:28"},"nativeSrc":"5330:7:28","nodeType":"YulFunctionCall","src":"5330:7:28"}],"functionName":{"name":"and","nativeSrc":"5309:3:28","nodeType":"YulIdentifier","src":"5309:3:28"},"nativeSrc":"5309:29:28","nodeType":"YulFunctionCall","src":"5309:29:28"}],"functionName":{"name":"add","nativeSrc":"5294:3:28","nodeType":"YulIdentifier","src":"5294:3:28"},"nativeSrc":"5294:45:28","nodeType":"YulFunctionCall","src":"5294:45:28"},{"kind":"number","nativeSrc":"5341:2:28","nodeType":"YulLiteral","src":"5341:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5290:3:28","nodeType":"YulIdentifier","src":"5290:3:28"},"nativeSrc":"5290:54:28","nodeType":"YulFunctionCall","src":"5290:54:28"},"variableNames":[{"name":"tail","nativeSrc":"5282:4:28","nodeType":"YulIdentifier","src":"5282:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4954:396:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5044:9:28","nodeType":"YulTypedName","src":"5044:9:28","type":""},{"name":"value0","nativeSrc":"5055:6:28","nodeType":"YulTypedName","src":"5055:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5066:4:28","nodeType":"YulTypedName","src":"5066:4:28","type":""}],"src":"4954:396:28"},{"body":{"nativeSrc":"5449:203:28","nodeType":"YulBlock","src":"5449:203:28","statements":[{"nativeSrc":"5459:26:28","nodeType":"YulVariableDeclaration","src":"5459:26:28","value":{"arguments":[{"name":"array","nativeSrc":"5479:5:28","nodeType":"YulIdentifier","src":"5479:5:28"}],"functionName":{"name":"mload","nativeSrc":"5473:5:28","nodeType":"YulIdentifier","src":"5473:5:28"},"nativeSrc":"5473:12:28","nodeType":"YulFunctionCall","src":"5473:12:28"},"variables":[{"name":"length","nativeSrc":"5463:6:28","nodeType":"YulTypedName","src":"5463:6:28","type":""}]},{"nativeSrc":"5494:32:28","nodeType":"YulAssignment","src":"5494:32:28","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"5513:5:28","nodeType":"YulIdentifier","src":"5513:5:28"},{"kind":"number","nativeSrc":"5520:4:28","nodeType":"YulLiteral","src":"5520:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5509:3:28","nodeType":"YulIdentifier","src":"5509:3:28"},"nativeSrc":"5509:16:28","nodeType":"YulFunctionCall","src":"5509:16:28"}],"functionName":{"name":"mload","nativeSrc":"5503:5:28","nodeType":"YulIdentifier","src":"5503:5:28"},"nativeSrc":"5503:23:28","nodeType":"YulFunctionCall","src":"5503:23:28"},"variableNames":[{"name":"value","nativeSrc":"5494:5:28","nodeType":"YulIdentifier","src":"5494:5:28"}]},{"body":{"nativeSrc":"5563:83:28","nodeType":"YulBlock","src":"5563:83:28","statements":[{"nativeSrc":"5577:59:28","nodeType":"YulAssignment","src":"5577:59:28","value":{"arguments":[{"name":"value","nativeSrc":"5590:5:28","nodeType":"YulIdentifier","src":"5590:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5605:1:28","nodeType":"YulLiteral","src":"5605:1:28","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"5612:4:28","nodeType":"YulLiteral","src":"5612:4:28","type":"","value":"0x20"},{"name":"length","nativeSrc":"5618:6:28","nodeType":"YulIdentifier","src":"5618:6:28"}],"functionName":{"name":"sub","nativeSrc":"5608:3:28","nodeType":"YulIdentifier","src":"5608:3:28"},"nativeSrc":"5608:17:28","nodeType":"YulFunctionCall","src":"5608:17:28"}],"functionName":{"name":"shl","nativeSrc":"5601:3:28","nodeType":"YulIdentifier","src":"5601:3:28"},"nativeSrc":"5601:25:28","nodeType":"YulFunctionCall","src":"5601:25:28"},{"arguments":[{"kind":"number","nativeSrc":"5632:1:28","nodeType":"YulLiteral","src":"5632:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5628:3:28","nodeType":"YulIdentifier","src":"5628:3:28"},"nativeSrc":"5628:6:28","nodeType":"YulFunctionCall","src":"5628:6:28"}],"functionName":{"name":"shl","nativeSrc":"5597:3:28","nodeType":"YulIdentifier","src":"5597:3:28"},"nativeSrc":"5597:38:28","nodeType":"YulFunctionCall","src":"5597:38:28"}],"functionName":{"name":"and","nativeSrc":"5586:3:28","nodeType":"YulIdentifier","src":"5586:3:28"},"nativeSrc":"5586:50:28","nodeType":"YulFunctionCall","src":"5586:50:28"},"variableNames":[{"name":"value","nativeSrc":"5577:5:28","nodeType":"YulIdentifier","src":"5577:5:28"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5541:6:28","nodeType":"YulIdentifier","src":"5541:6:28"},{"kind":"number","nativeSrc":"5549:4:28","nodeType":"YulLiteral","src":"5549:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"5538:2:28","nodeType":"YulIdentifier","src":"5538:2:28"},"nativeSrc":"5538:16:28","nodeType":"YulFunctionCall","src":"5538:16:28"},"nativeSrc":"5535:111:28","nodeType":"YulIf","src":"5535:111:28"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"5355:297:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"5429:5:28","nodeType":"YulTypedName","src":"5429:5:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5439:5:28","nodeType":"YulTypedName","src":"5439:5:28","type":""}],"src":"5355:297:28"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b50604051620016753803806200167583398101604081905262000035916200030a565b6040805180820190915260018152603160f81b602082015282908190338285600362000062838262000405565b50600462000071828262000405565b5050506001600160a01b038116620000a457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000af816200016f565b50620000bd826006620001c1565b61012052620000ce816007620001c1565b61014052815160208084019190912060e052815190820120610100524660a0526200015c60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200052b915050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602083511015620001e157620001d983620001fa565b9050620001f4565b81620001ee848262000405565b5060ff90505b92915050565b600080829050601f8151111562000228578260405163305a27a960e01b81526004016200009b9190620004d1565b8051620002358262000506565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200027057818101518382015260200162000256565b50506000910152565b600082601f8301126200028b57600080fd5b81516001600160401b0380821115620002a857620002a86200023d565b604051601f8301601f19908116603f01168101908282118183101715620002d357620002d36200023d565b81604052838152866020858801011115620002ed57600080fd5b6200030084602083016020890162000253565b9695505050505050565b600080604083850312156200031e57600080fd5b82516001600160401b03808211156200033657600080fd5b620003448683870162000279565b935060208501519150808211156200035b57600080fd5b506200036a8582860162000279565b9150509250929050565b600181811c908216806200038957607f821691505b602082108103620003aa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000400576000816000526020600020601f850160051c81016020861015620003db5750805b601f850160051c820191505b81811015620003fc57828155600101620003e7565b5050505b505050565b81516001600160401b038111156200042157620004216200023d565b620004398162000432845462000374565b84620003b0565b602080601f831160018114620004715760008415620004585750858301515b600019600386901b1c1916600185901b178555620003fc565b600085815260208120601f198616915b82811015620004a25788860151825594840194600190910190840162000481565b5085821015620004c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620004f281604085016020870162000253565b601f01601f19169190910160400192915050565b80516020808301519190811015620003aa5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516110ef6200058660003960006108f2015260006108c5015260006107b801526000610790015260006106eb015260006107150152600061073f01526110ef6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a257806395d89b411161007157806395d89b411461021c578063a9059cbb14610224578063d505accf14610237578063dd62ed3e1461024a578063f2fde38b1461028357600080fd5b8063715018a6146101cb5780637ecebe00146101d357806384b0196e146101e65780638da5cb5b1461020157600080fd5b8063313ce567116100de578063313ce567146101765780633644e5151461018557806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610296565b6040516101259190610e52565b60405180910390f35b61014161013c366004610e88565b610328565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610eb2565b610342565b60405160128152602001610125565b610155610366565b6101a061019b366004610e88565b610375565b005b6101556101b0366004610eee565b6001600160a01b031660009081526020819052604090205490565b6101a06103e1565b6101556101e1366004610eee565b6103f5565b6101ee610413565b6040516101259796959493929190610f09565b6005546040516001600160a01b039091168152602001610125565b610118610459565b610141610232366004610e88565b610468565b6101a0610245366004610fa2565b610476565b610155610258366004611015565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101a0610291366004610eee565b6105b0565b6060600380546102a590611048565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190611048565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050905090565b6000336103368185856105ee565b60019150505b92915050565b600033610350858285610600565b61035b85858561067f565b506001949350505050565b60006103706106de565b905090565b68056bc75e2d631000008111156103d35760405162461bcd60e51b815260206004820152601c60248201527f616d6f756e74206d757374206265206c657373207468616e203130300000000060448201526064015b60405180910390fd5b6103dd8282610809565b5050565b6103e961083f565b6103f3600061086c565b565b6001600160a01b03811660009081526008602052604081205461033c565b6000606080600080600060606104276108be565b61042f6108eb565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102a590611048565b60003361033681858561067f565b8342111561049a5760405163313c898160e11b8152600481018590526024016103ca565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886104e78c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061054282610918565b9050600061055282878787610945565b9050896001600160a01b0316816001600160a01b031614610599576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016103ca565b6105a48a8a8a6105ee565b50505050505050505050565b6105b861083f565b6001600160a01b0381166105e257604051631e4fbdf760e01b8152600060048201526024016103ca565b6105eb8161086c565b50565b6105fb8383836001610973565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610679578181101561066a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103ca565b61067984848484036000610973565b50505050565b6001600160a01b0383166106a957604051634b637e8f60e11b8152600060048201526024016103ca565b6001600160a01b0382166106d35760405163ec442f0560e01b8152600060048201526024016103ca565b6105fb838383610a48565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561073757507f000000000000000000000000000000000000000000000000000000000000000046145b1561076157507f000000000000000000000000000000000000000000000000000000000000000090565b610370604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b0382166108335760405163ec442f0560e01b8152600060048201526024016103ca565b6103dd60008383610a48565b6005546001600160a01b031633146103f35760405163118cdaa760e01b81523360048201526024016103ca565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606103707f00000000000000000000000000000000000000000000000000000000000000006006610b72565b60606103707f00000000000000000000000000000000000000000000000000000000000000006007610b72565b600061033c6109256106de565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061095788888888610c1d565b9250925092506109678282610cec565b50909695505050505050565b6001600160a01b03841661099d5760405163e602df0560e01b8152600060048201526024016103ca565b6001600160a01b0383166109c757604051634a1406b160e11b8152600060048201526024016103ca565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561067957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a3a91815260200190565b60405180910390a350505050565b6001600160a01b038316610a73578060026000828254610a689190611082565b90915550610ae59050565b6001600160a01b03831660009081526020819052604090205481811015610ac65760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103ca565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610b0157600280548290039055610b20565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b6591815260200190565b60405180910390a3505050565b606060ff8314610b8c57610b8583610da5565b905061033c565b818054610b9890611048565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc490611048565b8015610c115780601f10610be657610100808354040283529160200191610c11565b820191906000526020600020905b815481529060010190602001808311610bf457829003601f168201915b5050505050905061033c565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610c585750600091506003905082610ce2565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610cac573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610cd857506000925060019150829050610ce2565b9250600091508190505b9450945094915050565b6000826003811115610d0057610d006110a3565b03610d09575050565b6001826003811115610d1d57610d1d6110a3565b03610d3b5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610d4f57610d4f6110a3565b03610d705760405163fce698f760e01b8152600481018290526024016103ca565b6003826003811115610d8457610d846110a3565b036103dd576040516335e2f38360e21b8152600481018290526024016103ca565b60606000610db283610de4565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561033c57604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015610e3257602081850181015186830182015201610e16565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e656020830184610e0c565b9392505050565b80356001600160a01b0381168114610e8357600080fd5b919050565b60008060408385031215610e9b57600080fd5b610ea483610e6c565b946020939093013593505050565b600080600060608486031215610ec757600080fd5b610ed084610e6c565b9250610ede60208501610e6c565b9150604084013590509250925092565b600060208284031215610f0057600080fd5b610e6582610e6c565b60ff60f81b881681526000602060e06020840152610f2a60e084018a610e0c565b8381036040850152610f3c818a610e0c565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015610f9057835183529284019291840191600101610f74565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215610fbd57600080fd5b610fc688610e6c565b9650610fd460208901610e6c565b95506040880135945060608801359350608088013560ff81168114610ff857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561102857600080fd5b61103183610e6c565b915061103f60208401610e6c565b90509250929050565b600181811c9082168061105c57607f821691505b60208210810361107c57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561033c57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212206a21559b41bd1cf93f729a1799043bbf053a3f05bec5666985a079d34ba6291764736f6c63430008180033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1675 CODESIZE SUB DUP1 PUSH3 0x1675 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x30A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP1 DUP2 SWAP1 CALLER DUP3 DUP6 PUSH1 0x3 PUSH3 0x62 DUP4 DUP3 PUSH3 0x405 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x71 DUP3 DUP3 PUSH3 0x405 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xAF DUP2 PUSH3 0x16F JUMP JUMPDEST POP PUSH3 0xBD DUP3 PUSH1 0x6 PUSH3 0x1C1 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0xCE DUP2 PUSH1 0x7 PUSH3 0x1C1 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x15C PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH3 0x52B SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x1E1 JUMPI PUSH3 0x1D9 DUP4 PUSH3 0x1FA JUMP JUMPDEST SWAP1 POP PUSH3 0x1F4 JUMP JUMPDEST DUP2 PUSH3 0x1EE DUP5 DUP3 PUSH3 0x405 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x228 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9B SWAP2 SWAP1 PUSH3 0x4D1 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x235 DUP3 PUSH3 0x506 JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x270 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x256 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2A8 JUMPI PUSH3 0x2A8 PUSH3 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2D3 JUMPI PUSH3 0x2D3 PUSH3 0x23D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x300 DUP5 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP10 ADD PUSH3 0x253 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x344 DUP7 DUP4 DUP8 ADD PUSH3 0x279 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x36A DUP6 DUP3 DUP7 ADD PUSH3 0x279 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x389 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x400 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3DB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3FC JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3E7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x421 JUMPI PUSH3 0x421 PUSH3 0x23D JUMP JUMPDEST PUSH3 0x439 DUP2 PUSH3 0x432 DUP5 SLOAD PUSH3 0x374 JUMP JUMPDEST DUP5 PUSH3 0x3B0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x471 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x458 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x3FC JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4A2 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x481 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4C1 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x4F2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x253 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x3AA JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x10EF PUSH3 0x586 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x8F2 ADD MSTORE PUSH1 0x0 PUSH2 0x8C5 ADD MSTORE PUSH1 0x0 PUSH2 0x7B8 ADD MSTORE PUSH1 0x0 PUSH2 0x790 ADD MSTORE PUSH1 0x0 PUSH2 0x6EB ADD MSTORE PUSH1 0x0 PUSH2 0x715 ADD MSTORE PUSH1 0x0 PUSH2 0x73F ADD MSTORE PUSH2 0x10EF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xE88 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xE88 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x3E1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xE88 JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A5 SWAP1 PUSH2 0x1048 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D1 SWAP1 PUSH2 0x1048 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x301 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x336 DUP2 DUP6 DUP6 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x350 DUP6 DUP3 DUP6 PUSH2 0x600 JUMP JUMPDEST PUSH2 0x35B DUP6 DUP6 DUP6 PUSH2 0x67F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x370 PUSH2 0x6DE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 GT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616D6F756E74206D757374206265206C657373207468616E2031303000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3DD DUP3 DUP3 PUSH2 0x809 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x3F3 PUSH1 0x0 PUSH2 0x86C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x427 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x42F PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A5 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x336 DUP2 DUP6 DUP6 PUSH2 0x67F JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x49A JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x4E7 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x542 DUP3 PUSH2 0x918 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x552 DUP3 DUP8 DUP8 DUP8 PUSH2 0x945 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x5A4 DUP11 DUP11 DUP11 PUSH2 0x5EE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x5EB DUP2 PUSH2 0x86C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5FB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x973 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x679 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x679 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x973 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x5FB DUP4 DUP4 DUP4 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x737 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x761 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x370 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x0 DUP4 DUP4 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x370 PUSH32 0x0 PUSH1 0x6 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x370 PUSH32 0x0 PUSH1 0x7 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C PUSH2 0x925 PUSH2 0x6DE JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x957 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC1D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x967 DUP3 DUP3 PUSH2 0xCEC JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x679 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA3A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA73 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xAE5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB01 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB65 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xB8C JUMPI PUSH2 0xB85 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP1 POP PUSH2 0x33C JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xB98 SWAP1 PUSH2 0x1048 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBC4 SWAP1 PUSH2 0x1048 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC11 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBE6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC11 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBF4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xC58 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCD8 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xCE2 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD00 JUMPI PUSH2 0xD00 PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD09 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1D PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4F PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD70 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD84 PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0x3DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xDB2 DUP4 PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE32 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE16 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE65 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE0C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA4 DUP4 PUSH2 0xE6C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED0 DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 POP PUSH2 0xEDE PUSH1 0x20 DUP6 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP3 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xF2A PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xE0C JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xF3C DUP2 DUP11 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF90 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF74 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xFBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC6 DUP9 PUSH2 0xE6C JUMP JUMPDEST SWAP7 POP PUSH2 0xFD4 PUSH1 0x20 DUP10 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1031 DUP4 PUSH2 0xE6C JUMP JUMPDEST SWAP2 POP PUSH2 0x103F PUSH1 0x20 DUP5 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x105C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x107C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x33C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x21559B41BD1CF93F729A17 SWAP10 DIV EXTCODESIZE 0xBF SDIV GASPRICE EXTCODEHASH SDIV 0xBE 0xC5 PUSH7 0x6985A079D34BA6 0x29 OR PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"298:378:27:-:0;;;358:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:19;;;;;;;;;;;;-1:-1:-1;;;3328:431:19;;;;491:4:27;;;;458:10;491:4;433:6;1667:5:6;:13;491:4:27;1667:5:6;:13;:::i;:::-;-1:-1:-1;1690:7:6;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4398:51:28;4371:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3401:45:19;:4;3432:13;3401:30;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;4719:25:28;4760:18;;;4753:34;;;;4803:18;;;4796:34;4255:13:19;4846:18:28;;;4839:34;4278:4:19;4889:19:28;;;4882:61;4168:7:19;;4691:19:28;;4204:80:19;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:19;3725:27;;-1:-1:-1;298:378:27;;-1:-1:-1;;298:378:27;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2887:340:15:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:15;;-1:-1:-1;3006:215:15;2887:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:15;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:15:o;14:127:28:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:28;370:16;;363:27;146:250::o;401:699::-;455:5;508:3;501:4;493:6;489:17;485:27;475:55;;526:1;523;516:12;475:55;549:13;;-1:-1:-1;;;;;611:10:28;;;608:36;;;624:18;;:::i;:::-;699:2;693:9;667:2;753:13;;-1:-1:-1;;749:22:28;;;773:2;745:31;741:40;729:53;;;797:18;;;817:22;;;794:46;791:72;;;843:18;;:::i;:::-;883:10;879:2;872:22;918:2;910:6;903:18;964:3;957:4;952:2;944:6;940:15;936:26;933:35;930:55;;;981:1;978;971:12;930:55;994:76;1067:2;1060:4;1052:6;1048:17;1041:4;1033:6;1029:17;994:76;:::i;:::-;1088:6;401:699;-1:-1:-1;;;;;;401:699:28:o;1105:562::-;1204:6;1212;1265:2;1253:9;1244:7;1240:23;1236:32;1233:52;;;1281:1;1278;1271:12;1233:52;1308:16;;-1:-1:-1;;;;;1373:14:28;;;1370:34;;;1400:1;1397;1390:12;1370:34;1423:61;1476:7;1467:6;1456:9;1452:22;1423:61;:::i;:::-;1413:71;;1530:2;1519:9;1515:18;1509:25;1493:41;;1559:2;1549:8;1546:16;1543:36;;;1575:1;1572;1565:12;1543:36;;1598:63;1653:7;1642:8;1631:9;1627:24;1598:63;:::i;:::-;1588:73;;;1105:562;;;;;:::o;1672:380::-;1751:1;1747:12;;;;1794;;;1815:61;;1869:4;1861:6;1857:17;1847:27;;1815:61;1922:2;1914:6;1911:14;1891:18;1888:38;1885:161;;1968:10;1963:3;1959:20;1956:1;1949:31;2003:4;2000:1;1993:15;2031:4;2028:1;2021:15;1885:161;;1672:380;;;:::o;2183:543::-;2285:2;2280:3;2277:11;2274:446;;;2321:1;2345:5;2342:1;2335:16;2389:4;2386:1;2376:18;2459:2;2447:10;2443:19;2440:1;2436:27;2430:4;2426:38;2495:4;2483:10;2480:20;2477:47;;;-1:-1:-1;2518:4:28;2477:47;2573:2;2568:3;2564:12;2561:1;2557:20;2551:4;2547:31;2537:41;;2628:82;2646:2;2639:5;2636:13;2628:82;;;2691:17;;;2672:1;2661:13;2628:82;;;2632:3;;;2274:446;2183:543;;;:::o;2902:1345::-;3022:10;;-1:-1:-1;;;;;3044:30:28;;3041:56;;;3077:18;;:::i;:::-;3106:97;3196:6;3156:38;3188:4;3182:11;3156:38;:::i;:::-;3150:4;3106:97;:::i;:::-;3258:4;;3315:2;3304:14;;3332:1;3327:663;;;;4034:1;4051:6;4048:89;;;-1:-1:-1;4103:19:28;;;4097:26;4048:89;-1:-1:-1;;2859:1:28;2855:11;;;2851:24;2847:29;2837:40;2883:1;2879:11;;;2834:57;4150:81;;3297:944;;3327:663;2130:1;2123:14;;;2167:4;2154:18;;-1:-1:-1;;3363:20:28;;;3481:236;3495:7;3492:1;3489:14;3481:236;;;3584:19;;;3578:26;3563:42;;3676:27;;;;3644:1;3632:14;;;;3511:19;;3481:236;;;3485:3;3745:6;3736:7;3733:19;3730:201;;;3806:19;;;3800:26;-1:-1:-1;;3889:1:28;3885:14;;;3901:3;3881:24;3877:37;3873:42;3858:58;3843:74;;3730:201;-1:-1:-1;;;;;3977:1:28;3961:14;;;3957:22;3944:36;;-1:-1:-1;2902:1345:28:o;4954:396::-;5103:2;5092:9;5085:21;5066:4;5135:6;5129:13;5178:6;5173:2;5162:9;5158:18;5151:34;5194:79;5266:6;5261:2;5250:9;5246:18;5241:2;5233:6;5229:15;5194:79;:::i;:::-;5334:2;5313:15;-1:-1:-1;;5309:29:28;5294:45;;;;5341:2;5290:54;;4954:396;-1:-1:-1;;4954:396:28:o;5355:297::-;5473:12;;5520:4;5509:16;;;5503:23;;5473:12;5538:16;;5535:111;;;-1:-1:-1;;5612:4:28;5608:17;;;;5605:1;5601:25;5597:38;5586:50;;5355:297;-1:-1:-1;5355:297:28:o;:::-;298:378:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1145":{"entryPoint":870,"id":1145,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3870":{"entryPoint":2238,"id":3870,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3882":{"entryPoint":2283,"id":3882,"parameterSlots":0,"returnSlots":1},"@_approve_805":{"entryPoint":1518,"id":805,"parameterSlots":3,"returnSlots":0},"@_approve_865":{"entryPoint":2419,"id":865,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3800":{"entryPoint":null,"id":3800,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":2111,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3779":{"entryPoint":1758,"id":3779,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3816":{"entryPoint":2328,"id":3816,"parameterSlots":1,"returnSlots":1},"@_mint_754":{"entryPoint":2057,"id":754,"parameterSlots":2,"returnSlots":0},"@_msgSender_1629":{"entryPoint":null,"id":1629,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_913":{"entryPoint":1536,"id":913,"parameterSlots":3,"returnSlots":0},"@_throwError_3655":{"entryPoint":3308,"id":3655,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2156,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_644":{"entryPoint":1663,"id":644,"parameterSlots":3,"returnSlots":0},"@_update_721":{"entryPoint":2632,"id":721,"parameterSlots":3,"returnSlots":0},"@_useNonce_1689":{"entryPoint":null,"id":1689,"parameterSlots":1,"returnSlots":1},"@allowance_541":{"entryPoint":null,"id":541,"parameterSlots":2,"returnSlots":1},"@approve_565":{"entryPoint":808,"id":565,"parameterSlots":2,"returnSlots":1},"@balanceOf_500":{"entryPoint":null,"id":500,"parameterSlots":1,"returnSlots":1},"@byteLength_1885":{"entryPoint":3556,"id":1885,"parameterSlots":1,"returnSlots":1},"@decimals_478":{"entryPoint":null,"id":478,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3858":{"entryPoint":1043,"id":3858,"parameterSlots":0,"returnSlots":7},"@mint_7952":{"entryPoint":885,"id":7952,"parameterSlots":2,"returnSlots":0},"@name_460":{"entryPoint":662,"id":460,"parameterSlots":0,"returnSlots":1},"@nonces_1135":{"entryPoint":1013,"id":1135,"parameterSlots":1,"returnSlots":1},"@nonces_1674":{"entryPoint":null,"id":1674,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1118":{"entryPoint":1142,"id":1118,"parameterSlots":7,"returnSlots":0},"@recover_3606":{"entryPoint":2373,"id":3606,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":993,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_469":{"entryPoint":1113,"id":469,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1952":{"entryPoint":2930,"id":1952,"parameterSlots":2,"returnSlots":1},"@toString_1853":{"entryPoint":3493,"id":1853,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3956":{"entryPoint":null,"id":3956,"parameterSlots":2,"returnSlots":1},"@totalSupply_487":{"entryPoint":null,"id":487,"parameterSlots":0,"returnSlots":1},"@transferFrom_597":{"entryPoint":834,"id":597,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1456,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_524":{"entryPoint":1128,"id":524,"parameterSlots":2,"returnSlots":1},"@tryRecover_3570":{"entryPoint":3101,"id":3570,"parameterSlots":4,"returnSlots":3},"abi_decode_address":{"entryPoint":3692,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4117,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3762,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":4002,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3720,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_string":{"entryPoint":3596,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3849,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3666,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a0a78b37e49b508655b2a997562878feee45ff4a9a04a66d72e46d861d0a1a16__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4226,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4168,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":4259,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8190:28","nodeType":"YulBlock","src":"0:8190:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"64:373:28","nodeType":"YulBlock","src":"64:373:28","statements":[{"nativeSrc":"74:26:28","nodeType":"YulVariableDeclaration","src":"74:26:28","value":{"arguments":[{"name":"value","nativeSrc":"94:5:28","nodeType":"YulIdentifier","src":"94:5:28"}],"functionName":{"name":"mload","nativeSrc":"88:5:28","nodeType":"YulIdentifier","src":"88:5:28"},"nativeSrc":"88:12:28","nodeType":"YulFunctionCall","src":"88:12:28"},"variables":[{"name":"length","nativeSrc":"78:6:28","nodeType":"YulTypedName","src":"78:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"116:3:28","nodeType":"YulIdentifier","src":"116:3:28"},{"name":"length","nativeSrc":"121:6:28","nodeType":"YulIdentifier","src":"121:6:28"}],"functionName":{"name":"mstore","nativeSrc":"109:6:28","nodeType":"YulIdentifier","src":"109:6:28"},"nativeSrc":"109:19:28","nodeType":"YulFunctionCall","src":"109:19:28"},"nativeSrc":"109:19:28","nodeType":"YulExpressionStatement","src":"109:19:28"},{"nativeSrc":"137:10:28","nodeType":"YulVariableDeclaration","src":"137:10:28","value":{"kind":"number","nativeSrc":"146:1:28","nodeType":"YulLiteral","src":"146:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"141:1:28","nodeType":"YulTypedName","src":"141:1:28","type":""}]},{"body":{"nativeSrc":"208:110:28","nodeType":"YulBlock","src":"208:110:28","statements":[{"nativeSrc":"222:14:28","nodeType":"YulVariableDeclaration","src":"222:14:28","value":{"kind":"number","nativeSrc":"232:4:28","nodeType":"YulLiteral","src":"232:4:28","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"226:2:28","nodeType":"YulTypedName","src":"226:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"264:3:28","nodeType":"YulIdentifier","src":"264:3:28"},{"name":"i","nativeSrc":"269:1:28","nodeType":"YulIdentifier","src":"269:1:28"}],"functionName":{"name":"add","nativeSrc":"260:3:28","nodeType":"YulIdentifier","src":"260:3:28"},"nativeSrc":"260:11:28","nodeType":"YulFunctionCall","src":"260:11:28"},{"name":"_1","nativeSrc":"273:2:28","nodeType":"YulIdentifier","src":"273:2:28"}],"functionName":{"name":"add","nativeSrc":"256:3:28","nodeType":"YulIdentifier","src":"256:3:28"},"nativeSrc":"256:20:28","nodeType":"YulFunctionCall","src":"256:20:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"292:5:28","nodeType":"YulIdentifier","src":"292:5:28"},{"name":"i","nativeSrc":"299:1:28","nodeType":"YulIdentifier","src":"299:1:28"}],"functionName":{"name":"add","nativeSrc":"288:3:28","nodeType":"YulIdentifier","src":"288:3:28"},"nativeSrc":"288:13:28","nodeType":"YulFunctionCall","src":"288:13:28"},{"name":"_1","nativeSrc":"303:2:28","nodeType":"YulIdentifier","src":"303:2:28"}],"functionName":{"name":"add","nativeSrc":"284:3:28","nodeType":"YulIdentifier","src":"284:3:28"},"nativeSrc":"284:22:28","nodeType":"YulFunctionCall","src":"284:22:28"}],"functionName":{"name":"mload","nativeSrc":"278:5:28","nodeType":"YulIdentifier","src":"278:5:28"},"nativeSrc":"278:29:28","nodeType":"YulFunctionCall","src":"278:29:28"}],"functionName":{"name":"mstore","nativeSrc":"249:6:28","nodeType":"YulIdentifier","src":"249:6:28"},"nativeSrc":"249:59:28","nodeType":"YulFunctionCall","src":"249:59:28"},"nativeSrc":"249:59:28","nodeType":"YulExpressionStatement","src":"249:59:28"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"167:1:28","nodeType":"YulIdentifier","src":"167:1:28"},{"name":"length","nativeSrc":"170:6:28","nodeType":"YulIdentifier","src":"170:6:28"}],"functionName":{"name":"lt","nativeSrc":"164:2:28","nodeType":"YulIdentifier","src":"164:2:28"},"nativeSrc":"164:13:28","nodeType":"YulFunctionCall","src":"164:13:28"},"nativeSrc":"156:162:28","nodeType":"YulForLoop","post":{"nativeSrc":"178:21:28","nodeType":"YulBlock","src":"178:21:28","statements":[{"nativeSrc":"180:17:28","nodeType":"YulAssignment","src":"180:17:28","value":{"arguments":[{"name":"i","nativeSrc":"189:1:28","nodeType":"YulIdentifier","src":"189:1:28"},{"kind":"number","nativeSrc":"192:4:28","nodeType":"YulLiteral","src":"192:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"185:3:28","nodeType":"YulIdentifier","src":"185:3:28"},"nativeSrc":"185:12:28","nodeType":"YulFunctionCall","src":"185:12:28"},"variableNames":[{"name":"i","nativeSrc":"180:1:28","nodeType":"YulIdentifier","src":"180:1:28"}]}]},"pre":{"nativeSrc":"160:3:28","nodeType":"YulBlock","src":"160:3:28","statements":[]},"src":"156:162:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"342:3:28","nodeType":"YulIdentifier","src":"342:3:28"},{"name":"length","nativeSrc":"347:6:28","nodeType":"YulIdentifier","src":"347:6:28"}],"functionName":{"name":"add","nativeSrc":"338:3:28","nodeType":"YulIdentifier","src":"338:3:28"},"nativeSrc":"338:16:28","nodeType":"YulFunctionCall","src":"338:16:28"},{"kind":"number","nativeSrc":"356:4:28","nodeType":"YulLiteral","src":"356:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"334:3:28","nodeType":"YulIdentifier","src":"334:3:28"},"nativeSrc":"334:27:28","nodeType":"YulFunctionCall","src":"334:27:28"},{"kind":"number","nativeSrc":"363:1:28","nodeType":"YulLiteral","src":"363:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"327:6:28","nodeType":"YulIdentifier","src":"327:6:28"},"nativeSrc":"327:38:28","nodeType":"YulFunctionCall","src":"327:38:28"},"nativeSrc":"327:38:28","nodeType":"YulExpressionStatement","src":"327:38:28"},{"nativeSrc":"374:57:28","nodeType":"YulAssignment","src":"374:57:28","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"389:3:28","nodeType":"YulIdentifier","src":"389:3:28"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"402:6:28","nodeType":"YulIdentifier","src":"402:6:28"},{"kind":"number","nativeSrc":"410:2:28","nodeType":"YulLiteral","src":"410:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"398:3:28","nodeType":"YulIdentifier","src":"398:3:28"},"nativeSrc":"398:15:28","nodeType":"YulFunctionCall","src":"398:15:28"},{"arguments":[{"kind":"number","nativeSrc":"419:2:28","nodeType":"YulLiteral","src":"419:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"415:3:28","nodeType":"YulIdentifier","src":"415:3:28"},"nativeSrc":"415:7:28","nodeType":"YulFunctionCall","src":"415:7:28"}],"functionName":{"name":"and","nativeSrc":"394:3:28","nodeType":"YulIdentifier","src":"394:3:28"},"nativeSrc":"394:29:28","nodeType":"YulFunctionCall","src":"394:29:28"}],"functionName":{"name":"add","nativeSrc":"385:3:28","nodeType":"YulIdentifier","src":"385:3:28"},"nativeSrc":"385:39:28","nodeType":"YulFunctionCall","src":"385:39:28"},{"kind":"number","nativeSrc":"426:4:28","nodeType":"YulLiteral","src":"426:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"381:3:28","nodeType":"YulIdentifier","src":"381:3:28"},"nativeSrc":"381:50:28","nodeType":"YulFunctionCall","src":"381:50:28"},"variableNames":[{"name":"end","nativeSrc":"374:3:28","nodeType":"YulIdentifier","src":"374:3:28"}]}]},"name":"abi_encode_string","nativeSrc":"14:423:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"41:5:28","nodeType":"YulTypedName","src":"41:5:28","type":""},{"name":"pos","nativeSrc":"48:3:28","nodeType":"YulTypedName","src":"48:3:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"56:3:28","nodeType":"YulTypedName","src":"56:3:28","type":""}],"src":"14:423:28"},{"body":{"nativeSrc":"563:99:28","nodeType":"YulBlock","src":"563:99:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"580:9:28","nodeType":"YulIdentifier","src":"580:9:28"},{"kind":"number","nativeSrc":"591:2:28","nodeType":"YulLiteral","src":"591:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"573:6:28","nodeType":"YulIdentifier","src":"573:6:28"},"nativeSrc":"573:21:28","nodeType":"YulFunctionCall","src":"573:21:28"},"nativeSrc":"573:21:28","nodeType":"YulExpressionStatement","src":"573:21:28"},{"nativeSrc":"603:53:28","nodeType":"YulAssignment","src":"603:53:28","value":{"arguments":[{"name":"value0","nativeSrc":"629:6:28","nodeType":"YulIdentifier","src":"629:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"641:9:28","nodeType":"YulIdentifier","src":"641:9:28"},{"kind":"number","nativeSrc":"652:2:28","nodeType":"YulLiteral","src":"652:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"637:3:28","nodeType":"YulIdentifier","src":"637:3:28"},"nativeSrc":"637:18:28","nodeType":"YulFunctionCall","src":"637:18:28"}],"functionName":{"name":"abi_encode_string","nativeSrc":"611:17:28","nodeType":"YulIdentifier","src":"611:17:28"},"nativeSrc":"611:45:28","nodeType":"YulFunctionCall","src":"611:45:28"},"variableNames":[{"name":"tail","nativeSrc":"603:4:28","nodeType":"YulIdentifier","src":"603:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"442:220:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"532:9:28","nodeType":"YulTypedName","src":"532:9:28","type":""},{"name":"value0","nativeSrc":"543:6:28","nodeType":"YulTypedName","src":"543:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"554:4:28","nodeType":"YulTypedName","src":"554:4:28","type":""}],"src":"442:220:28"},{"body":{"nativeSrc":"716:124:28","nodeType":"YulBlock","src":"716:124:28","statements":[{"nativeSrc":"726:29:28","nodeType":"YulAssignment","src":"726:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"748:6:28","nodeType":"YulIdentifier","src":"748:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"735:12:28","nodeType":"YulIdentifier","src":"735:12:28"},"nativeSrc":"735:20:28","nodeType":"YulFunctionCall","src":"735:20:28"},"variableNames":[{"name":"value","nativeSrc":"726:5:28","nodeType":"YulIdentifier","src":"726:5:28"}]},{"body":{"nativeSrc":"818:16:28","nodeType":"YulBlock","src":"818:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"827:1:28","nodeType":"YulLiteral","src":"827:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"830:1:28","nodeType":"YulLiteral","src":"830:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"820:6:28","nodeType":"YulIdentifier","src":"820:6:28"},"nativeSrc":"820:12:28","nodeType":"YulFunctionCall","src":"820:12:28"},"nativeSrc":"820:12:28","nodeType":"YulExpressionStatement","src":"820:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"777:5:28","nodeType":"YulIdentifier","src":"777:5:28"},{"arguments":[{"name":"value","nativeSrc":"788:5:28","nodeType":"YulIdentifier","src":"788:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"803:3:28","nodeType":"YulLiteral","src":"803:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"808:1:28","nodeType":"YulLiteral","src":"808:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"799:3:28","nodeType":"YulIdentifier","src":"799:3:28"},"nativeSrc":"799:11:28","nodeType":"YulFunctionCall","src":"799:11:28"},{"kind":"number","nativeSrc":"812:1:28","nodeType":"YulLiteral","src":"812:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"795:3:28","nodeType":"YulIdentifier","src":"795:3:28"},"nativeSrc":"795:19:28","nodeType":"YulFunctionCall","src":"795:19:28"}],"functionName":{"name":"and","nativeSrc":"784:3:28","nodeType":"YulIdentifier","src":"784:3:28"},"nativeSrc":"784:31:28","nodeType":"YulFunctionCall","src":"784:31:28"}],"functionName":{"name":"eq","nativeSrc":"774:2:28","nodeType":"YulIdentifier","src":"774:2:28"},"nativeSrc":"774:42:28","nodeType":"YulFunctionCall","src":"774:42:28"}],"functionName":{"name":"iszero","nativeSrc":"767:6:28","nodeType":"YulIdentifier","src":"767:6:28"},"nativeSrc":"767:50:28","nodeType":"YulFunctionCall","src":"767:50:28"},"nativeSrc":"764:70:28","nodeType":"YulIf","src":"764:70:28"}]},"name":"abi_decode_address","nativeSrc":"667:173:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"695:6:28","nodeType":"YulTypedName","src":"695:6:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"706:5:28","nodeType":"YulTypedName","src":"706:5:28","type":""}],"src":"667:173:28"},{"body":{"nativeSrc":"932:167:28","nodeType":"YulBlock","src":"932:167:28","statements":[{"body":{"nativeSrc":"978:16:28","nodeType":"YulBlock","src":"978:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"987:1:28","nodeType":"YulLiteral","src":"987:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"990:1:28","nodeType":"YulLiteral","src":"990:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"980:6:28","nodeType":"YulIdentifier","src":"980:6:28"},"nativeSrc":"980:12:28","nodeType":"YulFunctionCall","src":"980:12:28"},"nativeSrc":"980:12:28","nodeType":"YulExpressionStatement","src":"980:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"953:7:28","nodeType":"YulIdentifier","src":"953:7:28"},{"name":"headStart","nativeSrc":"962:9:28","nodeType":"YulIdentifier","src":"962:9:28"}],"functionName":{"name":"sub","nativeSrc":"949:3:28","nodeType":"YulIdentifier","src":"949:3:28"},"nativeSrc":"949:23:28","nodeType":"YulFunctionCall","src":"949:23:28"},{"kind":"number","nativeSrc":"974:2:28","nodeType":"YulLiteral","src":"974:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"945:3:28","nodeType":"YulIdentifier","src":"945:3:28"},"nativeSrc":"945:32:28","nodeType":"YulFunctionCall","src":"945:32:28"},"nativeSrc":"942:52:28","nodeType":"YulIf","src":"942:52:28"},{"nativeSrc":"1003:39:28","nodeType":"YulAssignment","src":"1003:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1032:9:28","nodeType":"YulIdentifier","src":"1032:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1013:18:28","nodeType":"YulIdentifier","src":"1013:18:28"},"nativeSrc":"1013:29:28","nodeType":"YulFunctionCall","src":"1013:29:28"},"variableNames":[{"name":"value0","nativeSrc":"1003:6:28","nodeType":"YulIdentifier","src":"1003:6:28"}]},{"nativeSrc":"1051:42:28","nodeType":"YulAssignment","src":"1051:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1078:9:28","nodeType":"YulIdentifier","src":"1078:9:28"},{"kind":"number","nativeSrc":"1089:2:28","nodeType":"YulLiteral","src":"1089:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1074:3:28","nodeType":"YulIdentifier","src":"1074:3:28"},"nativeSrc":"1074:18:28","nodeType":"YulFunctionCall","src":"1074:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"1061:12:28","nodeType":"YulIdentifier","src":"1061:12:28"},"nativeSrc":"1061:32:28","nodeType":"YulFunctionCall","src":"1061:32:28"},"variableNames":[{"name":"value1","nativeSrc":"1051:6:28","nodeType":"YulIdentifier","src":"1051:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"845:254:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"890:9:28","nodeType":"YulTypedName","src":"890:9:28","type":""},{"name":"dataEnd","nativeSrc":"901:7:28","nodeType":"YulTypedName","src":"901:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"913:6:28","nodeType":"YulTypedName","src":"913:6:28","type":""},{"name":"value1","nativeSrc":"921:6:28","nodeType":"YulTypedName","src":"921:6:28","type":""}],"src":"845:254:28"},{"body":{"nativeSrc":"1199:92:28","nodeType":"YulBlock","src":"1199:92:28","statements":[{"nativeSrc":"1209:26:28","nodeType":"YulAssignment","src":"1209:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1221:9:28","nodeType":"YulIdentifier","src":"1221:9:28"},{"kind":"number","nativeSrc":"1232:2:28","nodeType":"YulLiteral","src":"1232:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1217:3:28","nodeType":"YulIdentifier","src":"1217:3:28"},"nativeSrc":"1217:18:28","nodeType":"YulFunctionCall","src":"1217:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1209:4:28","nodeType":"YulIdentifier","src":"1209:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1251:9:28","nodeType":"YulIdentifier","src":"1251:9:28"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1276:6:28","nodeType":"YulIdentifier","src":"1276:6:28"}],"functionName":{"name":"iszero","nativeSrc":"1269:6:28","nodeType":"YulIdentifier","src":"1269:6:28"},"nativeSrc":"1269:14:28","nodeType":"YulFunctionCall","src":"1269:14:28"}],"functionName":{"name":"iszero","nativeSrc":"1262:6:28","nodeType":"YulIdentifier","src":"1262:6:28"},"nativeSrc":"1262:22:28","nodeType":"YulFunctionCall","src":"1262:22:28"}],"functionName":{"name":"mstore","nativeSrc":"1244:6:28","nodeType":"YulIdentifier","src":"1244:6:28"},"nativeSrc":"1244:41:28","nodeType":"YulFunctionCall","src":"1244:41:28"},"nativeSrc":"1244:41:28","nodeType":"YulExpressionStatement","src":"1244:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1104:187:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1168:9:28","nodeType":"YulTypedName","src":"1168:9:28","type":""},{"name":"value0","nativeSrc":"1179:6:28","nodeType":"YulTypedName","src":"1179:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1190:4:28","nodeType":"YulTypedName","src":"1190:4:28","type":""}],"src":"1104:187:28"},{"body":{"nativeSrc":"1397:76:28","nodeType":"YulBlock","src":"1397:76:28","statements":[{"nativeSrc":"1407:26:28","nodeType":"YulAssignment","src":"1407:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1419:9:28","nodeType":"YulIdentifier","src":"1419:9:28"},{"kind":"number","nativeSrc":"1430:2:28","nodeType":"YulLiteral","src":"1430:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1415:3:28","nodeType":"YulIdentifier","src":"1415:3:28"},"nativeSrc":"1415:18:28","nodeType":"YulFunctionCall","src":"1415:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1407:4:28","nodeType":"YulIdentifier","src":"1407:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1449:9:28","nodeType":"YulIdentifier","src":"1449:9:28"},{"name":"value0","nativeSrc":"1460:6:28","nodeType":"YulIdentifier","src":"1460:6:28"}],"functionName":{"name":"mstore","nativeSrc":"1442:6:28","nodeType":"YulIdentifier","src":"1442:6:28"},"nativeSrc":"1442:25:28","nodeType":"YulFunctionCall","src":"1442:25:28"},"nativeSrc":"1442:25:28","nodeType":"YulExpressionStatement","src":"1442:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1296:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:28","nodeType":"YulTypedName","src":"1366:9:28","type":""},{"name":"value0","nativeSrc":"1377:6:28","nodeType":"YulTypedName","src":"1377:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1388:4:28","nodeType":"YulTypedName","src":"1388:4:28","type":""}],"src":"1296:177:28"},{"body":{"nativeSrc":"1582:224:28","nodeType":"YulBlock","src":"1582:224:28","statements":[{"body":{"nativeSrc":"1628:16:28","nodeType":"YulBlock","src":"1628:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1637:1:28","nodeType":"YulLiteral","src":"1637:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1640:1:28","nodeType":"YulLiteral","src":"1640:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1630:6:28","nodeType":"YulIdentifier","src":"1630:6:28"},"nativeSrc":"1630:12:28","nodeType":"YulFunctionCall","src":"1630:12:28"},"nativeSrc":"1630:12:28","nodeType":"YulExpressionStatement","src":"1630:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1603:7:28","nodeType":"YulIdentifier","src":"1603:7:28"},{"name":"headStart","nativeSrc":"1612:9:28","nodeType":"YulIdentifier","src":"1612:9:28"}],"functionName":{"name":"sub","nativeSrc":"1599:3:28","nodeType":"YulIdentifier","src":"1599:3:28"},"nativeSrc":"1599:23:28","nodeType":"YulFunctionCall","src":"1599:23:28"},{"kind":"number","nativeSrc":"1624:2:28","nodeType":"YulLiteral","src":"1624:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1595:3:28","nodeType":"YulIdentifier","src":"1595:3:28"},"nativeSrc":"1595:32:28","nodeType":"YulFunctionCall","src":"1595:32:28"},"nativeSrc":"1592:52:28","nodeType":"YulIf","src":"1592:52:28"},{"nativeSrc":"1653:39:28","nodeType":"YulAssignment","src":"1653:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1682:9:28","nodeType":"YulIdentifier","src":"1682:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1663:18:28","nodeType":"YulIdentifier","src":"1663:18:28"},"nativeSrc":"1663:29:28","nodeType":"YulFunctionCall","src":"1663:29:28"},"variableNames":[{"name":"value0","nativeSrc":"1653:6:28","nodeType":"YulIdentifier","src":"1653:6:28"}]},{"nativeSrc":"1701:48:28","nodeType":"YulAssignment","src":"1701:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1734:9:28","nodeType":"YulIdentifier","src":"1734:9:28"},{"kind":"number","nativeSrc":"1745:2:28","nodeType":"YulLiteral","src":"1745:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1730:3:28","nodeType":"YulIdentifier","src":"1730:3:28"},"nativeSrc":"1730:18:28","nodeType":"YulFunctionCall","src":"1730:18:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1711:18:28","nodeType":"YulIdentifier","src":"1711:18:28"},"nativeSrc":"1711:38:28","nodeType":"YulFunctionCall","src":"1711:38:28"},"variableNames":[{"name":"value1","nativeSrc":"1701:6:28","nodeType":"YulIdentifier","src":"1701:6:28"}]},{"nativeSrc":"1758:42:28","nodeType":"YulAssignment","src":"1758:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1785:9:28","nodeType":"YulIdentifier","src":"1785:9:28"},{"kind":"number","nativeSrc":"1796:2:28","nodeType":"YulLiteral","src":"1796:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1781:3:28","nodeType":"YulIdentifier","src":"1781:3:28"},"nativeSrc":"1781:18:28","nodeType":"YulFunctionCall","src":"1781:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"1768:12:28","nodeType":"YulIdentifier","src":"1768:12:28"},"nativeSrc":"1768:32:28","nodeType":"YulFunctionCall","src":"1768:32:28"},"variableNames":[{"name":"value2","nativeSrc":"1758:6:28","nodeType":"YulIdentifier","src":"1758:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1478:328:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1532:9:28","nodeType":"YulTypedName","src":"1532:9:28","type":""},{"name":"dataEnd","nativeSrc":"1543:7:28","nodeType":"YulTypedName","src":"1543:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1555:6:28","nodeType":"YulTypedName","src":"1555:6:28","type":""},{"name":"value1","nativeSrc":"1563:6:28","nodeType":"YulTypedName","src":"1563:6:28","type":""},{"name":"value2","nativeSrc":"1571:6:28","nodeType":"YulTypedName","src":"1571:6:28","type":""}],"src":"1478:328:28"},{"body":{"nativeSrc":"1908:87:28","nodeType":"YulBlock","src":"1908:87:28","statements":[{"nativeSrc":"1918:26:28","nodeType":"YulAssignment","src":"1918:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1930:9:28","nodeType":"YulIdentifier","src":"1930:9:28"},{"kind":"number","nativeSrc":"1941:2:28","nodeType":"YulLiteral","src":"1941:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1926:3:28","nodeType":"YulIdentifier","src":"1926:3:28"},"nativeSrc":"1926:18:28","nodeType":"YulFunctionCall","src":"1926:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1918:4:28","nodeType":"YulIdentifier","src":"1918:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1960:9:28","nodeType":"YulIdentifier","src":"1960:9:28"},{"arguments":[{"name":"value0","nativeSrc":"1975:6:28","nodeType":"YulIdentifier","src":"1975:6:28"},{"kind":"number","nativeSrc":"1983:4:28","nodeType":"YulLiteral","src":"1983:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1971:3:28","nodeType":"YulIdentifier","src":"1971:3:28"},"nativeSrc":"1971:17:28","nodeType":"YulFunctionCall","src":"1971:17:28"}],"functionName":{"name":"mstore","nativeSrc":"1953:6:28","nodeType":"YulIdentifier","src":"1953:6:28"},"nativeSrc":"1953:36:28","nodeType":"YulFunctionCall","src":"1953:36:28"},"nativeSrc":"1953:36:28","nodeType":"YulExpressionStatement","src":"1953:36:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1811:184:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1877:9:28","nodeType":"YulTypedName","src":"1877:9:28","type":""},{"name":"value0","nativeSrc":"1888:6:28","nodeType":"YulTypedName","src":"1888:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1899:4:28","nodeType":"YulTypedName","src":"1899:4:28","type":""}],"src":"1811:184:28"},{"body":{"nativeSrc":"2101:76:28","nodeType":"YulBlock","src":"2101:76:28","statements":[{"nativeSrc":"2111:26:28","nodeType":"YulAssignment","src":"2111:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2123:9:28","nodeType":"YulIdentifier","src":"2123:9:28"},{"kind":"number","nativeSrc":"2134:2:28","nodeType":"YulLiteral","src":"2134:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2119:3:28","nodeType":"YulIdentifier","src":"2119:3:28"},"nativeSrc":"2119:18:28","nodeType":"YulFunctionCall","src":"2119:18:28"},"variableNames":[{"name":"tail","nativeSrc":"2111:4:28","nodeType":"YulIdentifier","src":"2111:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2153:9:28","nodeType":"YulIdentifier","src":"2153:9:28"},{"name":"value0","nativeSrc":"2164:6:28","nodeType":"YulIdentifier","src":"2164:6:28"}],"functionName":{"name":"mstore","nativeSrc":"2146:6:28","nodeType":"YulIdentifier","src":"2146:6:28"},"nativeSrc":"2146:25:28","nodeType":"YulFunctionCall","src":"2146:25:28"},"nativeSrc":"2146:25:28","nodeType":"YulExpressionStatement","src":"2146:25:28"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2000:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2070:9:28","nodeType":"YulTypedName","src":"2070:9:28","type":""},{"name":"value0","nativeSrc":"2081:6:28","nodeType":"YulTypedName","src":"2081:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2092:4:28","nodeType":"YulTypedName","src":"2092:4:28","type":""}],"src":"2000:177:28"},{"body":{"nativeSrc":"2252:116:28","nodeType":"YulBlock","src":"2252:116:28","statements":[{"body":{"nativeSrc":"2298:16:28","nodeType":"YulBlock","src":"2298:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2307:1:28","nodeType":"YulLiteral","src":"2307:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2310:1:28","nodeType":"YulLiteral","src":"2310:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2300:6:28","nodeType":"YulIdentifier","src":"2300:6:28"},"nativeSrc":"2300:12:28","nodeType":"YulFunctionCall","src":"2300:12:28"},"nativeSrc":"2300:12:28","nodeType":"YulExpressionStatement","src":"2300:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2273:7:28","nodeType":"YulIdentifier","src":"2273:7:28"},{"name":"headStart","nativeSrc":"2282:9:28","nodeType":"YulIdentifier","src":"2282:9:28"}],"functionName":{"name":"sub","nativeSrc":"2269:3:28","nodeType":"YulIdentifier","src":"2269:3:28"},"nativeSrc":"2269:23:28","nodeType":"YulFunctionCall","src":"2269:23:28"},{"kind":"number","nativeSrc":"2294:2:28","nodeType":"YulLiteral","src":"2294:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2265:3:28","nodeType":"YulIdentifier","src":"2265:3:28"},"nativeSrc":"2265:32:28","nodeType":"YulFunctionCall","src":"2265:32:28"},"nativeSrc":"2262:52:28","nodeType":"YulIf","src":"2262:52:28"},{"nativeSrc":"2323:39:28","nodeType":"YulAssignment","src":"2323:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2352:9:28","nodeType":"YulIdentifier","src":"2352:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2333:18:28","nodeType":"YulIdentifier","src":"2333:18:28"},"nativeSrc":"2333:29:28","nodeType":"YulFunctionCall","src":"2333:29:28"},"variableNames":[{"name":"value0","nativeSrc":"2323:6:28","nodeType":"YulIdentifier","src":"2323:6:28"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2182:186:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2218:9:28","nodeType":"YulTypedName","src":"2218:9:28","type":""},{"name":"dataEnd","nativeSrc":"2229:7:28","nodeType":"YulTypedName","src":"2229:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2241:6:28","nodeType":"YulTypedName","src":"2241:6:28","type":""}],"src":"2182:186:28"},{"body":{"nativeSrc":"2730:902:28","nodeType":"YulBlock","src":"2730:902:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2747:9:28","nodeType":"YulIdentifier","src":"2747:9:28"},{"arguments":[{"name":"value0","nativeSrc":"2762:6:28","nodeType":"YulIdentifier","src":"2762:6:28"},{"arguments":[{"kind":"number","nativeSrc":"2774:3:28","nodeType":"YulLiteral","src":"2774:3:28","type":"","value":"248"},{"kind":"number","nativeSrc":"2779:3:28","nodeType":"YulLiteral","src":"2779:3:28","type":"","value":"255"}],"functionName":{"name":"shl","nativeSrc":"2770:3:28","nodeType":"YulIdentifier","src":"2770:3:28"},"nativeSrc":"2770:13:28","nodeType":"YulFunctionCall","src":"2770:13:28"}],"functionName":{"name":"and","nativeSrc":"2758:3:28","nodeType":"YulIdentifier","src":"2758:3:28"},"nativeSrc":"2758:26:28","nodeType":"YulFunctionCall","src":"2758:26:28"}],"functionName":{"name":"mstore","nativeSrc":"2740:6:28","nodeType":"YulIdentifier","src":"2740:6:28"},"nativeSrc":"2740:45:28","nodeType":"YulFunctionCall","src":"2740:45:28"},"nativeSrc":"2740:45:28","nodeType":"YulExpressionStatement","src":"2740:45:28"},{"nativeSrc":"2794:12:28","nodeType":"YulVariableDeclaration","src":"2794:12:28","value":{"kind":"number","nativeSrc":"2804:2:28","nodeType":"YulLiteral","src":"2804:2:28","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"2798:2:28","nodeType":"YulTypedName","src":"2798:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2826:9:28","nodeType":"YulIdentifier","src":"2826:9:28"},{"kind":"number","nativeSrc":"2837:2:28","nodeType":"YulLiteral","src":"2837:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2822:3:28","nodeType":"YulIdentifier","src":"2822:3:28"},"nativeSrc":"2822:18:28","nodeType":"YulFunctionCall","src":"2822:18:28"},{"kind":"number","nativeSrc":"2842:3:28","nodeType":"YulLiteral","src":"2842:3:28","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"2815:6:28","nodeType":"YulIdentifier","src":"2815:6:28"},"nativeSrc":"2815:31:28","nodeType":"YulFunctionCall","src":"2815:31:28"},"nativeSrc":"2815:31:28","nodeType":"YulExpressionStatement","src":"2815:31:28"},{"nativeSrc":"2855:60:28","nodeType":"YulVariableDeclaration","src":"2855:60:28","value":{"arguments":[{"name":"value1","nativeSrc":"2887:6:28","nodeType":"YulIdentifier","src":"2887:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"2899:9:28","nodeType":"YulIdentifier","src":"2899:9:28"},{"kind":"number","nativeSrc":"2910:3:28","nodeType":"YulLiteral","src":"2910:3:28","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"2895:3:28","nodeType":"YulIdentifier","src":"2895:3:28"},"nativeSrc":"2895:19:28","nodeType":"YulFunctionCall","src":"2895:19:28"}],"functionName":{"name":"abi_encode_string","nativeSrc":"2869:17:28","nodeType":"YulIdentifier","src":"2869:17:28"},"nativeSrc":"2869:46:28","nodeType":"YulFunctionCall","src":"2869:46:28"},"variables":[{"name":"tail_1","nativeSrc":"2859:6:28","nodeType":"YulTypedName","src":"2859:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2935:9:28","nodeType":"YulIdentifier","src":"2935:9:28"},{"kind":"number","nativeSrc":"2946:2:28","nodeType":"YulLiteral","src":"2946:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2931:3:28","nodeType":"YulIdentifier","src":"2931:3:28"},"nativeSrc":"2931:18:28","nodeType":"YulFunctionCall","src":"2931:18:28"},{"arguments":[{"name":"tail_1","nativeSrc":"2955:6:28","nodeType":"YulIdentifier","src":"2955:6:28"},{"name":"headStart","nativeSrc":"2963:9:28","nodeType":"YulIdentifier","src":"2963:9:28"}],"functionName":{"name":"sub","nativeSrc":"2951:3:28","nodeType":"YulIdentifier","src":"2951:3:28"},"nativeSrc":"2951:22:28","nodeType":"YulFunctionCall","src":"2951:22:28"}],"functionName":{"name":"mstore","nativeSrc":"2924:6:28","nodeType":"YulIdentifier","src":"2924:6:28"},"nativeSrc":"2924:50:28","nodeType":"YulFunctionCall","src":"2924:50:28"},"nativeSrc":"2924:50:28","nodeType":"YulExpressionStatement","src":"2924:50:28"},{"nativeSrc":"2983:47:28","nodeType":"YulVariableDeclaration","src":"2983:47:28","value":{"arguments":[{"name":"value2","nativeSrc":"3015:6:28","nodeType":"YulIdentifier","src":"3015:6:28"},{"name":"tail_1","nativeSrc":"3023:6:28","nodeType":"YulIdentifier","src":"3023:6:28"}],"functionName":{"name":"abi_encode_string","nativeSrc":"2997:17:28","nodeType":"YulIdentifier","src":"2997:17:28"},"nativeSrc":"2997:33:28","nodeType":"YulFunctionCall","src":"2997:33:28"},"variables":[{"name":"tail_2","nativeSrc":"2987:6:28","nodeType":"YulTypedName","src":"2987:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3050:9:28","nodeType":"YulIdentifier","src":"3050:9:28"},{"kind":"number","nativeSrc":"3061:2:28","nodeType":"YulLiteral","src":"3061:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3046:3:28","nodeType":"YulIdentifier","src":"3046:3:28"},"nativeSrc":"3046:18:28","nodeType":"YulFunctionCall","src":"3046:18:28"},{"name":"value3","nativeSrc":"3066:6:28","nodeType":"YulIdentifier","src":"3066:6:28"}],"functionName":{"name":"mstore","nativeSrc":"3039:6:28","nodeType":"YulIdentifier","src":"3039:6:28"},"nativeSrc":"3039:34:28","nodeType":"YulFunctionCall","src":"3039:34:28"},"nativeSrc":"3039:34:28","nodeType":"YulExpressionStatement","src":"3039:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3093:9:28","nodeType":"YulIdentifier","src":"3093:9:28"},{"kind":"number","nativeSrc":"3104:3:28","nodeType":"YulLiteral","src":"3104:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3089:3:28","nodeType":"YulIdentifier","src":"3089:3:28"},"nativeSrc":"3089:19:28","nodeType":"YulFunctionCall","src":"3089:19:28"},{"arguments":[{"name":"value4","nativeSrc":"3114:6:28","nodeType":"YulIdentifier","src":"3114:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3130:3:28","nodeType":"YulLiteral","src":"3130:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"3135:1:28","nodeType":"YulLiteral","src":"3135:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3126:3:28","nodeType":"YulIdentifier","src":"3126:3:28"},"nativeSrc":"3126:11:28","nodeType":"YulFunctionCall","src":"3126:11:28"},{"kind":"number","nativeSrc":"3139:1:28","nodeType":"YulLiteral","src":"3139:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3122:3:28","nodeType":"YulIdentifier","src":"3122:3:28"},"nativeSrc":"3122:19:28","nodeType":"YulFunctionCall","src":"3122:19:28"}],"functionName":{"name":"and","nativeSrc":"3110:3:28","nodeType":"YulIdentifier","src":"3110:3:28"},"nativeSrc":"3110:32:28","nodeType":"YulFunctionCall","src":"3110:32:28"}],"functionName":{"name":"mstore","nativeSrc":"3082:6:28","nodeType":"YulIdentifier","src":"3082:6:28"},"nativeSrc":"3082:61:28","nodeType":"YulFunctionCall","src":"3082:61:28"},"nativeSrc":"3082:61:28","nodeType":"YulExpressionStatement","src":"3082:61:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3163:9:28","nodeType":"YulIdentifier","src":"3163:9:28"},{"kind":"number","nativeSrc":"3174:3:28","nodeType":"YulLiteral","src":"3174:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"3159:3:28","nodeType":"YulIdentifier","src":"3159:3:28"},"nativeSrc":"3159:19:28","nodeType":"YulFunctionCall","src":"3159:19:28"},{"name":"value5","nativeSrc":"3180:6:28","nodeType":"YulIdentifier","src":"3180:6:28"}],"functionName":{"name":"mstore","nativeSrc":"3152:6:28","nodeType":"YulIdentifier","src":"3152:6:28"},"nativeSrc":"3152:35:28","nodeType":"YulFunctionCall","src":"3152:35:28"},"nativeSrc":"3152:35:28","nodeType":"YulExpressionStatement","src":"3152:35:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3207:9:28","nodeType":"YulIdentifier","src":"3207:9:28"},{"kind":"number","nativeSrc":"3218:3:28","nodeType":"YulLiteral","src":"3218:3:28","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"3203:3:28","nodeType":"YulIdentifier","src":"3203:3:28"},"nativeSrc":"3203:19:28","nodeType":"YulFunctionCall","src":"3203:19:28"},{"arguments":[{"name":"tail_2","nativeSrc":"3228:6:28","nodeType":"YulIdentifier","src":"3228:6:28"},{"name":"headStart","nativeSrc":"3236:9:28","nodeType":"YulIdentifier","src":"3236:9:28"}],"functionName":{"name":"sub","nativeSrc":"3224:3:28","nodeType":"YulIdentifier","src":"3224:3:28"},"nativeSrc":"3224:22:28","nodeType":"YulFunctionCall","src":"3224:22:28"}],"functionName":{"name":"mstore","nativeSrc":"3196:6:28","nodeType":"YulIdentifier","src":"3196:6:28"},"nativeSrc":"3196:51:28","nodeType":"YulFunctionCall","src":"3196:51:28"},"nativeSrc":"3196:51:28","nodeType":"YulExpressionStatement","src":"3196:51:28"},{"nativeSrc":"3256:17:28","nodeType":"YulVariableDeclaration","src":"3256:17:28","value":{"name":"tail_2","nativeSrc":"3267:6:28","nodeType":"YulIdentifier","src":"3267:6:28"},"variables":[{"name":"pos","nativeSrc":"3260:3:28","nodeType":"YulTypedName","src":"3260:3:28","type":""}]},{"nativeSrc":"3282:27:28","nodeType":"YulVariableDeclaration","src":"3282:27:28","value":{"arguments":[{"name":"value6","nativeSrc":"3302:6:28","nodeType":"YulIdentifier","src":"3302:6:28"}],"functionName":{"name":"mload","nativeSrc":"3296:5:28","nodeType":"YulIdentifier","src":"3296:5:28"},"nativeSrc":"3296:13:28","nodeType":"YulFunctionCall","src":"3296:13:28"},"variables":[{"name":"length","nativeSrc":"3286:6:28","nodeType":"YulTypedName","src":"3286:6:28","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"3325:6:28","nodeType":"YulIdentifier","src":"3325:6:28"},{"name":"length","nativeSrc":"3333:6:28","nodeType":"YulIdentifier","src":"3333:6:28"}],"functionName":{"name":"mstore","nativeSrc":"3318:6:28","nodeType":"YulIdentifier","src":"3318:6:28"},"nativeSrc":"3318:22:28","nodeType":"YulFunctionCall","src":"3318:22:28"},"nativeSrc":"3318:22:28","nodeType":"YulExpressionStatement","src":"3318:22:28"},{"nativeSrc":"3349:22:28","nodeType":"YulAssignment","src":"3349:22:28","value":{"arguments":[{"name":"tail_2","nativeSrc":"3360:6:28","nodeType":"YulIdentifier","src":"3360:6:28"},{"kind":"number","nativeSrc":"3368:2:28","nodeType":"YulLiteral","src":"3368:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3356:3:28","nodeType":"YulIdentifier","src":"3356:3:28"},"nativeSrc":"3356:15:28","nodeType":"YulFunctionCall","src":"3356:15:28"},"variableNames":[{"name":"pos","nativeSrc":"3349:3:28","nodeType":"YulIdentifier","src":"3349:3:28"}]},{"nativeSrc":"3380:29:28","nodeType":"YulVariableDeclaration","src":"3380:29:28","value":{"arguments":[{"name":"value6","nativeSrc":"3398:6:28","nodeType":"YulIdentifier","src":"3398:6:28"},{"kind":"number","nativeSrc":"3406:2:28","nodeType":"YulLiteral","src":"3406:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3394:3:28","nodeType":"YulIdentifier","src":"3394:3:28"},"nativeSrc":"3394:15:28","nodeType":"YulFunctionCall","src":"3394:15:28"},"variables":[{"name":"srcPtr","nativeSrc":"3384:6:28","nodeType":"YulTypedName","src":"3384:6:28","type":""}]},{"nativeSrc":"3418:10:28","nodeType":"YulVariableDeclaration","src":"3418:10:28","value":{"kind":"number","nativeSrc":"3427:1:28","nodeType":"YulLiteral","src":"3427:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3422:1:28","nodeType":"YulTypedName","src":"3422:1:28","type":""}]},{"body":{"nativeSrc":"3486:120:28","nodeType":"YulBlock","src":"3486:120:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3507:3:28","nodeType":"YulIdentifier","src":"3507:3:28"},{"arguments":[{"name":"srcPtr","nativeSrc":"3518:6:28","nodeType":"YulIdentifier","src":"3518:6:28"}],"functionName":{"name":"mload","nativeSrc":"3512:5:28","nodeType":"YulIdentifier","src":"3512:5:28"},"nativeSrc":"3512:13:28","nodeType":"YulFunctionCall","src":"3512:13:28"}],"functionName":{"name":"mstore","nativeSrc":"3500:6:28","nodeType":"YulIdentifier","src":"3500:6:28"},"nativeSrc":"3500:26:28","nodeType":"YulFunctionCall","src":"3500:26:28"},"nativeSrc":"3500:26:28","nodeType":"YulExpressionStatement","src":"3500:26:28"},{"nativeSrc":"3539:19:28","nodeType":"YulAssignment","src":"3539:19:28","value":{"arguments":[{"name":"pos","nativeSrc":"3550:3:28","nodeType":"YulIdentifier","src":"3550:3:28"},{"name":"_1","nativeSrc":"3555:2:28","nodeType":"YulIdentifier","src":"3555:2:28"}],"functionName":{"name":"add","nativeSrc":"3546:3:28","nodeType":"YulIdentifier","src":"3546:3:28"},"nativeSrc":"3546:12:28","nodeType":"YulFunctionCall","src":"3546:12:28"},"variableNames":[{"name":"pos","nativeSrc":"3539:3:28","nodeType":"YulIdentifier","src":"3539:3:28"}]},{"nativeSrc":"3571:25:28","nodeType":"YulAssignment","src":"3571:25:28","value":{"arguments":[{"name":"srcPtr","nativeSrc":"3585:6:28","nodeType":"YulIdentifier","src":"3585:6:28"},{"name":"_1","nativeSrc":"3593:2:28","nodeType":"YulIdentifier","src":"3593:2:28"}],"functionName":{"name":"add","nativeSrc":"3581:3:28","nodeType":"YulIdentifier","src":"3581:3:28"},"nativeSrc":"3581:15:28","nodeType":"YulFunctionCall","src":"3581:15:28"},"variableNames":[{"name":"srcPtr","nativeSrc":"3571:6:28","nodeType":"YulIdentifier","src":"3571:6:28"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3448:1:28","nodeType":"YulIdentifier","src":"3448:1:28"},{"name":"length","nativeSrc":"3451:6:28","nodeType":"YulIdentifier","src":"3451:6:28"}],"functionName":{"name":"lt","nativeSrc":"3445:2:28","nodeType":"YulIdentifier","src":"3445:2:28"},"nativeSrc":"3445:13:28","nodeType":"YulFunctionCall","src":"3445:13:28"},"nativeSrc":"3437:169:28","nodeType":"YulForLoop","post":{"nativeSrc":"3459:18:28","nodeType":"YulBlock","src":"3459:18:28","statements":[{"nativeSrc":"3461:14:28","nodeType":"YulAssignment","src":"3461:14:28","value":{"arguments":[{"name":"i","nativeSrc":"3470:1:28","nodeType":"YulIdentifier","src":"3470:1:28"},{"kind":"number","nativeSrc":"3473:1:28","nodeType":"YulLiteral","src":"3473:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3466:3:28","nodeType":"YulIdentifier","src":"3466:3:28"},"nativeSrc":"3466:9:28","nodeType":"YulFunctionCall","src":"3466:9:28"},"variableNames":[{"name":"i","nativeSrc":"3461:1:28","nodeType":"YulIdentifier","src":"3461:1:28"}]}]},"pre":{"nativeSrc":"3441:3:28","nodeType":"YulBlock","src":"3441:3:28","statements":[]},"src":"3437:169:28"},{"nativeSrc":"3615:11:28","nodeType":"YulAssignment","src":"3615:11:28","value":{"name":"pos","nativeSrc":"3623:3:28","nodeType":"YulIdentifier","src":"3623:3:28"},"variableNames":[{"name":"tail","nativeSrc":"3615:4:28","nodeType":"YulIdentifier","src":"3615:4:28"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"2373:1259:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2651:9:28","nodeType":"YulTypedName","src":"2651:9:28","type":""},{"name":"value6","nativeSrc":"2662:6:28","nodeType":"YulTypedName","src":"2662:6:28","type":""},{"name":"value5","nativeSrc":"2670:6:28","nodeType":"YulTypedName","src":"2670:6:28","type":""},{"name":"value4","nativeSrc":"2678:6:28","nodeType":"YulTypedName","src":"2678:6:28","type":""},{"name":"value3","nativeSrc":"2686:6:28","nodeType":"YulTypedName","src":"2686:6:28","type":""},{"name":"value2","nativeSrc":"2694:6:28","nodeType":"YulTypedName","src":"2694:6:28","type":""},{"name":"value1","nativeSrc":"2702:6:28","nodeType":"YulTypedName","src":"2702:6:28","type":""},{"name":"value0","nativeSrc":"2710:6:28","nodeType":"YulTypedName","src":"2710:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2721:4:28","nodeType":"YulTypedName","src":"2721:4:28","type":""}],"src":"2373:1259:28"},{"body":{"nativeSrc":"3738:102:28","nodeType":"YulBlock","src":"3738:102:28","statements":[{"nativeSrc":"3748:26:28","nodeType":"YulAssignment","src":"3748:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3760:9:28","nodeType":"YulIdentifier","src":"3760:9:28"},{"kind":"number","nativeSrc":"3771:2:28","nodeType":"YulLiteral","src":"3771:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3756:3:28","nodeType":"YulIdentifier","src":"3756:3:28"},"nativeSrc":"3756:18:28","nodeType":"YulFunctionCall","src":"3756:18:28"},"variableNames":[{"name":"tail","nativeSrc":"3748:4:28","nodeType":"YulIdentifier","src":"3748:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3790:9:28","nodeType":"YulIdentifier","src":"3790:9:28"},{"arguments":[{"name":"value0","nativeSrc":"3805:6:28","nodeType":"YulIdentifier","src":"3805:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3821:3:28","nodeType":"YulLiteral","src":"3821:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"3826:1:28","nodeType":"YulLiteral","src":"3826:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3817:3:28","nodeType":"YulIdentifier","src":"3817:3:28"},"nativeSrc":"3817:11:28","nodeType":"YulFunctionCall","src":"3817:11:28"},{"kind":"number","nativeSrc":"3830:1:28","nodeType":"YulLiteral","src":"3830:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3813:3:28","nodeType":"YulIdentifier","src":"3813:3:28"},"nativeSrc":"3813:19:28","nodeType":"YulFunctionCall","src":"3813:19:28"}],"functionName":{"name":"and","nativeSrc":"3801:3:28","nodeType":"YulIdentifier","src":"3801:3:28"},"nativeSrc":"3801:32:28","nodeType":"YulFunctionCall","src":"3801:32:28"}],"functionName":{"name":"mstore","nativeSrc":"3783:6:28","nodeType":"YulIdentifier","src":"3783:6:28"},"nativeSrc":"3783:51:28","nodeType":"YulFunctionCall","src":"3783:51:28"},"nativeSrc":"3783:51:28","nodeType":"YulExpressionStatement","src":"3783:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3637:203:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3707:9:28","nodeType":"YulTypedName","src":"3707:9:28","type":""},{"name":"value0","nativeSrc":"3718:6:28","nodeType":"YulTypedName","src":"3718:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3729:4:28","nodeType":"YulTypedName","src":"3729:4:28","type":""}],"src":"3637:203:28"},{"body":{"nativeSrc":"4015:523:28","nodeType":"YulBlock","src":"4015:523:28","statements":[{"body":{"nativeSrc":"4062:16:28","nodeType":"YulBlock","src":"4062:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4071:1:28","nodeType":"YulLiteral","src":"4071:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"4074:1:28","nodeType":"YulLiteral","src":"4074:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4064:6:28","nodeType":"YulIdentifier","src":"4064:6:28"},"nativeSrc":"4064:12:28","nodeType":"YulFunctionCall","src":"4064:12:28"},"nativeSrc":"4064:12:28","nodeType":"YulExpressionStatement","src":"4064:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4036:7:28","nodeType":"YulIdentifier","src":"4036:7:28"},{"name":"headStart","nativeSrc":"4045:9:28","nodeType":"YulIdentifier","src":"4045:9:28"}],"functionName":{"name":"sub","nativeSrc":"4032:3:28","nodeType":"YulIdentifier","src":"4032:3:28"},"nativeSrc":"4032:23:28","nodeType":"YulFunctionCall","src":"4032:23:28"},{"kind":"number","nativeSrc":"4057:3:28","nodeType":"YulLiteral","src":"4057:3:28","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"4028:3:28","nodeType":"YulIdentifier","src":"4028:3:28"},"nativeSrc":"4028:33:28","nodeType":"YulFunctionCall","src":"4028:33:28"},"nativeSrc":"4025:53:28","nodeType":"YulIf","src":"4025:53:28"},{"nativeSrc":"4087:39:28","nodeType":"YulAssignment","src":"4087:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4116:9:28","nodeType":"YulIdentifier","src":"4116:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4097:18:28","nodeType":"YulIdentifier","src":"4097:18:28"},"nativeSrc":"4097:29:28","nodeType":"YulFunctionCall","src":"4097:29:28"},"variableNames":[{"name":"value0","nativeSrc":"4087:6:28","nodeType":"YulIdentifier","src":"4087:6:28"}]},{"nativeSrc":"4135:48:28","nodeType":"YulAssignment","src":"4135:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4168:9:28","nodeType":"YulIdentifier","src":"4168:9:28"},{"kind":"number","nativeSrc":"4179:2:28","nodeType":"YulLiteral","src":"4179:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4164:3:28","nodeType":"YulIdentifier","src":"4164:3:28"},"nativeSrc":"4164:18:28","nodeType":"YulFunctionCall","src":"4164:18:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4145:18:28","nodeType":"YulIdentifier","src":"4145:18:28"},"nativeSrc":"4145:38:28","nodeType":"YulFunctionCall","src":"4145:38:28"},"variableNames":[{"name":"value1","nativeSrc":"4135:6:28","nodeType":"YulIdentifier","src":"4135:6:28"}]},{"nativeSrc":"4192:42:28","nodeType":"YulAssignment","src":"4192:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4219:9:28","nodeType":"YulIdentifier","src":"4219:9:28"},{"kind":"number","nativeSrc":"4230:2:28","nodeType":"YulLiteral","src":"4230:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4215:3:28","nodeType":"YulIdentifier","src":"4215:3:28"},"nativeSrc":"4215:18:28","nodeType":"YulFunctionCall","src":"4215:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"4202:12:28","nodeType":"YulIdentifier","src":"4202:12:28"},"nativeSrc":"4202:32:28","nodeType":"YulFunctionCall","src":"4202:32:28"},"variableNames":[{"name":"value2","nativeSrc":"4192:6:28","nodeType":"YulIdentifier","src":"4192:6:28"}]},{"nativeSrc":"4243:42:28","nodeType":"YulAssignment","src":"4243:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4270:9:28","nodeType":"YulIdentifier","src":"4270:9:28"},{"kind":"number","nativeSrc":"4281:2:28","nodeType":"YulLiteral","src":"4281:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4266:3:28","nodeType":"YulIdentifier","src":"4266:3:28"},"nativeSrc":"4266:18:28","nodeType":"YulFunctionCall","src":"4266:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"4253:12:28","nodeType":"YulIdentifier","src":"4253:12:28"},"nativeSrc":"4253:32:28","nodeType":"YulFunctionCall","src":"4253:32:28"},"variableNames":[{"name":"value3","nativeSrc":"4243:6:28","nodeType":"YulIdentifier","src":"4243:6:28"}]},{"nativeSrc":"4294:46:28","nodeType":"YulVariableDeclaration","src":"4294:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4324:9:28","nodeType":"YulIdentifier","src":"4324:9:28"},{"kind":"number","nativeSrc":"4335:3:28","nodeType":"YulLiteral","src":"4335:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4320:3:28","nodeType":"YulIdentifier","src":"4320:3:28"},"nativeSrc":"4320:19:28","nodeType":"YulFunctionCall","src":"4320:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"4307:12:28","nodeType":"YulIdentifier","src":"4307:12:28"},"nativeSrc":"4307:33:28","nodeType":"YulFunctionCall","src":"4307:33:28"},"variables":[{"name":"value","nativeSrc":"4298:5:28","nodeType":"YulTypedName","src":"4298:5:28","type":""}]},{"body":{"nativeSrc":"4388:16:28","nodeType":"YulBlock","src":"4388:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4397:1:28","nodeType":"YulLiteral","src":"4397:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"4400:1:28","nodeType":"YulLiteral","src":"4400:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4390:6:28","nodeType":"YulIdentifier","src":"4390:6:28"},"nativeSrc":"4390:12:28","nodeType":"YulFunctionCall","src":"4390:12:28"},"nativeSrc":"4390:12:28","nodeType":"YulExpressionStatement","src":"4390:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4362:5:28","nodeType":"YulIdentifier","src":"4362:5:28"},{"arguments":[{"name":"value","nativeSrc":"4373:5:28","nodeType":"YulIdentifier","src":"4373:5:28"},{"kind":"number","nativeSrc":"4380:4:28","nodeType":"YulLiteral","src":"4380:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4369:3:28","nodeType":"YulIdentifier","src":"4369:3:28"},"nativeSrc":"4369:16:28","nodeType":"YulFunctionCall","src":"4369:16:28"}],"functionName":{"name":"eq","nativeSrc":"4359:2:28","nodeType":"YulIdentifier","src":"4359:2:28"},"nativeSrc":"4359:27:28","nodeType":"YulFunctionCall","src":"4359:27:28"}],"functionName":{"name":"iszero","nativeSrc":"4352:6:28","nodeType":"YulIdentifier","src":"4352:6:28"},"nativeSrc":"4352:35:28","nodeType":"YulFunctionCall","src":"4352:35:28"},"nativeSrc":"4349:55:28","nodeType":"YulIf","src":"4349:55:28"},{"nativeSrc":"4413:15:28","nodeType":"YulAssignment","src":"4413:15:28","value":{"name":"value","nativeSrc":"4423:5:28","nodeType":"YulIdentifier","src":"4423:5:28"},"variableNames":[{"name":"value4","nativeSrc":"4413:6:28","nodeType":"YulIdentifier","src":"4413:6:28"}]},{"nativeSrc":"4437:43:28","nodeType":"YulAssignment","src":"4437:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4464:9:28","nodeType":"YulIdentifier","src":"4464:9:28"},{"kind":"number","nativeSrc":"4475:3:28","nodeType":"YulLiteral","src":"4475:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4460:3:28","nodeType":"YulIdentifier","src":"4460:3:28"},"nativeSrc":"4460:19:28","nodeType":"YulFunctionCall","src":"4460:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"4447:12:28","nodeType":"YulIdentifier","src":"4447:12:28"},"nativeSrc":"4447:33:28","nodeType":"YulFunctionCall","src":"4447:33:28"},"variableNames":[{"name":"value5","nativeSrc":"4437:6:28","nodeType":"YulIdentifier","src":"4437:6:28"}]},{"nativeSrc":"4489:43:28","nodeType":"YulAssignment","src":"4489:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4516:9:28","nodeType":"YulIdentifier","src":"4516:9:28"},{"kind":"number","nativeSrc":"4527:3:28","nodeType":"YulLiteral","src":"4527:3:28","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"4512:3:28","nodeType":"YulIdentifier","src":"4512:3:28"},"nativeSrc":"4512:19:28","nodeType":"YulFunctionCall","src":"4512:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"4499:12:28","nodeType":"YulIdentifier","src":"4499:12:28"},"nativeSrc":"4499:33:28","nodeType":"YulFunctionCall","src":"4499:33:28"},"variableNames":[{"name":"value6","nativeSrc":"4489:6:28","nodeType":"YulIdentifier","src":"4489:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"3845:693:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3933:9:28","nodeType":"YulTypedName","src":"3933:9:28","type":""},{"name":"dataEnd","nativeSrc":"3944:7:28","nodeType":"YulTypedName","src":"3944:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3956:6:28","nodeType":"YulTypedName","src":"3956:6:28","type":""},{"name":"value1","nativeSrc":"3964:6:28","nodeType":"YulTypedName","src":"3964:6:28","type":""},{"name":"value2","nativeSrc":"3972:6:28","nodeType":"YulTypedName","src":"3972:6:28","type":""},{"name":"value3","nativeSrc":"3980:6:28","nodeType":"YulTypedName","src":"3980:6:28","type":""},{"name":"value4","nativeSrc":"3988:6:28","nodeType":"YulTypedName","src":"3988:6:28","type":""},{"name":"value5","nativeSrc":"3996:6:28","nodeType":"YulTypedName","src":"3996:6:28","type":""},{"name":"value6","nativeSrc":"4004:6:28","nodeType":"YulTypedName","src":"4004:6:28","type":""}],"src":"3845:693:28"},{"body":{"nativeSrc":"4630:173:28","nodeType":"YulBlock","src":"4630:173:28","statements":[{"body":{"nativeSrc":"4676:16:28","nodeType":"YulBlock","src":"4676:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4685:1:28","nodeType":"YulLiteral","src":"4685:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"4688:1:28","nodeType":"YulLiteral","src":"4688:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4678:6:28","nodeType":"YulIdentifier","src":"4678:6:28"},"nativeSrc":"4678:12:28","nodeType":"YulFunctionCall","src":"4678:12:28"},"nativeSrc":"4678:12:28","nodeType":"YulExpressionStatement","src":"4678:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4651:7:28","nodeType":"YulIdentifier","src":"4651:7:28"},{"name":"headStart","nativeSrc":"4660:9:28","nodeType":"YulIdentifier","src":"4660:9:28"}],"functionName":{"name":"sub","nativeSrc":"4647:3:28","nodeType":"YulIdentifier","src":"4647:3:28"},"nativeSrc":"4647:23:28","nodeType":"YulFunctionCall","src":"4647:23:28"},{"kind":"number","nativeSrc":"4672:2:28","nodeType":"YulLiteral","src":"4672:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4643:3:28","nodeType":"YulIdentifier","src":"4643:3:28"},"nativeSrc":"4643:32:28","nodeType":"YulFunctionCall","src":"4643:32:28"},"nativeSrc":"4640:52:28","nodeType":"YulIf","src":"4640:52:28"},{"nativeSrc":"4701:39:28","nodeType":"YulAssignment","src":"4701:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4730:9:28","nodeType":"YulIdentifier","src":"4730:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4711:18:28","nodeType":"YulIdentifier","src":"4711:18:28"},"nativeSrc":"4711:29:28","nodeType":"YulFunctionCall","src":"4711:29:28"},"variableNames":[{"name":"value0","nativeSrc":"4701:6:28","nodeType":"YulIdentifier","src":"4701:6:28"}]},{"nativeSrc":"4749:48:28","nodeType":"YulAssignment","src":"4749:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4782:9:28","nodeType":"YulIdentifier","src":"4782:9:28"},{"kind":"number","nativeSrc":"4793:2:28","nodeType":"YulLiteral","src":"4793:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4778:3:28","nodeType":"YulIdentifier","src":"4778:3:28"},"nativeSrc":"4778:18:28","nodeType":"YulFunctionCall","src":"4778:18:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4759:18:28","nodeType":"YulIdentifier","src":"4759:18:28"},"nativeSrc":"4759:38:28","nodeType":"YulFunctionCall","src":"4759:38:28"},"variableNames":[{"name":"value1","nativeSrc":"4749:6:28","nodeType":"YulIdentifier","src":"4749:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"4543:260:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4588:9:28","nodeType":"YulTypedName","src":"4588:9:28","type":""},{"name":"dataEnd","nativeSrc":"4599:7:28","nodeType":"YulTypedName","src":"4599:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4611:6:28","nodeType":"YulTypedName","src":"4611:6:28","type":""},{"name":"value1","nativeSrc":"4619:6:28","nodeType":"YulTypedName","src":"4619:6:28","type":""}],"src":"4543:260:28"},{"body":{"nativeSrc":"4863:325:28","nodeType":"YulBlock","src":"4863:325:28","statements":[{"nativeSrc":"4873:22:28","nodeType":"YulAssignment","src":"4873:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"4887:1:28","nodeType":"YulLiteral","src":"4887:1:28","type":"","value":"1"},{"name":"data","nativeSrc":"4890:4:28","nodeType":"YulIdentifier","src":"4890:4:28"}],"functionName":{"name":"shr","nativeSrc":"4883:3:28","nodeType":"YulIdentifier","src":"4883:3:28"},"nativeSrc":"4883:12:28","nodeType":"YulFunctionCall","src":"4883:12:28"},"variableNames":[{"name":"length","nativeSrc":"4873:6:28","nodeType":"YulIdentifier","src":"4873:6:28"}]},{"nativeSrc":"4904:38:28","nodeType":"YulVariableDeclaration","src":"4904:38:28","value":{"arguments":[{"name":"data","nativeSrc":"4934:4:28","nodeType":"YulIdentifier","src":"4934:4:28"},{"kind":"number","nativeSrc":"4940:1:28","nodeType":"YulLiteral","src":"4940:1:28","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4930:3:28","nodeType":"YulIdentifier","src":"4930:3:28"},"nativeSrc":"4930:12:28","nodeType":"YulFunctionCall","src":"4930:12:28"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4908:18:28","nodeType":"YulTypedName","src":"4908:18:28","type":""}]},{"body":{"nativeSrc":"4981:31:28","nodeType":"YulBlock","src":"4981:31:28","statements":[{"nativeSrc":"4983:27:28","nodeType":"YulAssignment","src":"4983:27:28","value":{"arguments":[{"name":"length","nativeSrc":"4997:6:28","nodeType":"YulIdentifier","src":"4997:6:28"},{"kind":"number","nativeSrc":"5005:4:28","nodeType":"YulLiteral","src":"5005:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4993:3:28","nodeType":"YulIdentifier","src":"4993:3:28"},"nativeSrc":"4993:17:28","nodeType":"YulFunctionCall","src":"4993:17:28"},"variableNames":[{"name":"length","nativeSrc":"4983:6:28","nodeType":"YulIdentifier","src":"4983:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4961:18:28","nodeType":"YulIdentifier","src":"4961:18:28"}],"functionName":{"name":"iszero","nativeSrc":"4954:6:28","nodeType":"YulIdentifier","src":"4954:6:28"},"nativeSrc":"4954:26:28","nodeType":"YulFunctionCall","src":"4954:26:28"},"nativeSrc":"4951:61:28","nodeType":"YulIf","src":"4951:61:28"},{"body":{"nativeSrc":"5071:111:28","nodeType":"YulBlock","src":"5071:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5092:1:28","nodeType":"YulLiteral","src":"5092:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5099:3:28","nodeType":"YulLiteral","src":"5099:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"5104:10:28","nodeType":"YulLiteral","src":"5104:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5095:3:28","nodeType":"YulIdentifier","src":"5095:3:28"},"nativeSrc":"5095:20:28","nodeType":"YulFunctionCall","src":"5095:20:28"}],"functionName":{"name":"mstore","nativeSrc":"5085:6:28","nodeType":"YulIdentifier","src":"5085:6:28"},"nativeSrc":"5085:31:28","nodeType":"YulFunctionCall","src":"5085:31:28"},"nativeSrc":"5085:31:28","nodeType":"YulExpressionStatement","src":"5085:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5136:1:28","nodeType":"YulLiteral","src":"5136:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"5139:4:28","nodeType":"YulLiteral","src":"5139:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5129:6:28","nodeType":"YulIdentifier","src":"5129:6:28"},"nativeSrc":"5129:15:28","nodeType":"YulFunctionCall","src":"5129:15:28"},"nativeSrc":"5129:15:28","nodeType":"YulExpressionStatement","src":"5129:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5164:1:28","nodeType":"YulLiteral","src":"5164:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"5167:4:28","nodeType":"YulLiteral","src":"5167:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5157:6:28","nodeType":"YulIdentifier","src":"5157:6:28"},"nativeSrc":"5157:15:28","nodeType":"YulFunctionCall","src":"5157:15:28"},"nativeSrc":"5157:15:28","nodeType":"YulExpressionStatement","src":"5157:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5027:18:28","nodeType":"YulIdentifier","src":"5027:18:28"},{"arguments":[{"name":"length","nativeSrc":"5050:6:28","nodeType":"YulIdentifier","src":"5050:6:28"},{"kind":"number","nativeSrc":"5058:2:28","nodeType":"YulLiteral","src":"5058:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5047:2:28","nodeType":"YulIdentifier","src":"5047:2:28"},"nativeSrc":"5047:14:28","nodeType":"YulFunctionCall","src":"5047:14:28"}],"functionName":{"name":"eq","nativeSrc":"5024:2:28","nodeType":"YulIdentifier","src":"5024:2:28"},"nativeSrc":"5024:38:28","nodeType":"YulFunctionCall","src":"5024:38:28"},"nativeSrc":"5021:161:28","nodeType":"YulIf","src":"5021:161:28"}]},"name":"extract_byte_array_length","nativeSrc":"4808:380:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4843:4:28","nodeType":"YulTypedName","src":"4843:4:28","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4852:6:28","nodeType":"YulTypedName","src":"4852:6:28","type":""}],"src":"4808:380:28"},{"body":{"nativeSrc":"5367:178:28","nodeType":"YulBlock","src":"5367:178:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5384:9:28","nodeType":"YulIdentifier","src":"5384:9:28"},{"kind":"number","nativeSrc":"5395:2:28","nodeType":"YulLiteral","src":"5395:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5377:6:28","nodeType":"YulIdentifier","src":"5377:6:28"},"nativeSrc":"5377:21:28","nodeType":"YulFunctionCall","src":"5377:21:28"},"nativeSrc":"5377:21:28","nodeType":"YulExpressionStatement","src":"5377:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5418:9:28","nodeType":"YulIdentifier","src":"5418:9:28"},{"kind":"number","nativeSrc":"5429:2:28","nodeType":"YulLiteral","src":"5429:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5414:3:28","nodeType":"YulIdentifier","src":"5414:3:28"},"nativeSrc":"5414:18:28","nodeType":"YulFunctionCall","src":"5414:18:28"},{"kind":"number","nativeSrc":"5434:2:28","nodeType":"YulLiteral","src":"5434:2:28","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"5407:6:28","nodeType":"YulIdentifier","src":"5407:6:28"},"nativeSrc":"5407:30:28","nodeType":"YulFunctionCall","src":"5407:30:28"},"nativeSrc":"5407:30:28","nodeType":"YulExpressionStatement","src":"5407:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5457:9:28","nodeType":"YulIdentifier","src":"5457:9:28"},{"kind":"number","nativeSrc":"5468:2:28","nodeType":"YulLiteral","src":"5468:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5453:3:28","nodeType":"YulIdentifier","src":"5453:3:28"},"nativeSrc":"5453:18:28","nodeType":"YulFunctionCall","src":"5453:18:28"},{"hexValue":"616d6f756e74206d757374206265206c657373207468616e20313030","kind":"string","nativeSrc":"5473:30:28","nodeType":"YulLiteral","src":"5473:30:28","type":"","value":"amount must be less than 100"}],"functionName":{"name":"mstore","nativeSrc":"5446:6:28","nodeType":"YulIdentifier","src":"5446:6:28"},"nativeSrc":"5446:58:28","nodeType":"YulFunctionCall","src":"5446:58:28"},"nativeSrc":"5446:58:28","nodeType":"YulExpressionStatement","src":"5446:58:28"},{"nativeSrc":"5513:26:28","nodeType":"YulAssignment","src":"5513:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"5525:9:28","nodeType":"YulIdentifier","src":"5525:9:28"},{"kind":"number","nativeSrc":"5536:2:28","nodeType":"YulLiteral","src":"5536:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5521:3:28","nodeType":"YulIdentifier","src":"5521:3:28"},"nativeSrc":"5521:18:28","nodeType":"YulFunctionCall","src":"5521:18:28"},"variableNames":[{"name":"tail","nativeSrc":"5513:4:28","nodeType":"YulIdentifier","src":"5513:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a0a78b37e49b508655b2a997562878feee45ff4a9a04a66d72e46d861d0a1a16__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5193:352:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5344:9:28","nodeType":"YulTypedName","src":"5344:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5358:4:28","nodeType":"YulTypedName","src":"5358:4:28","type":""}],"src":"5193:352:28"},{"body":{"nativeSrc":"5582:95:28","nodeType":"YulBlock","src":"5582:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5599:1:28","nodeType":"YulLiteral","src":"5599:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5606:3:28","nodeType":"YulLiteral","src":"5606:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"5611:10:28","nodeType":"YulLiteral","src":"5611:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5602:3:28","nodeType":"YulIdentifier","src":"5602:3:28"},"nativeSrc":"5602:20:28","nodeType":"YulFunctionCall","src":"5602:20:28"}],"functionName":{"name":"mstore","nativeSrc":"5592:6:28","nodeType":"YulIdentifier","src":"5592:6:28"},"nativeSrc":"5592:31:28","nodeType":"YulFunctionCall","src":"5592:31:28"},"nativeSrc":"5592:31:28","nodeType":"YulExpressionStatement","src":"5592:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5639:1:28","nodeType":"YulLiteral","src":"5639:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"5642:4:28","nodeType":"YulLiteral","src":"5642:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5632:6:28","nodeType":"YulIdentifier","src":"5632:6:28"},"nativeSrc":"5632:15:28","nodeType":"YulFunctionCall","src":"5632:15:28"},"nativeSrc":"5632:15:28","nodeType":"YulExpressionStatement","src":"5632:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5663:1:28","nodeType":"YulLiteral","src":"5663:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"5666:4:28","nodeType":"YulLiteral","src":"5666:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5656:6:28","nodeType":"YulIdentifier","src":"5656:6:28"},"nativeSrc":"5656:15:28","nodeType":"YulFunctionCall","src":"5656:15:28"},"nativeSrc":"5656:15:28","nodeType":"YulExpressionStatement","src":"5656:15:28"}]},"name":"panic_error_0x41","nativeSrc":"5550:127:28","nodeType":"YulFunctionDefinition","src":"5550:127:28"},{"body":{"nativeSrc":"5923:350:28","nodeType":"YulBlock","src":"5923:350:28","statements":[{"nativeSrc":"5933:27:28","nodeType":"YulAssignment","src":"5933:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"5945:9:28","nodeType":"YulIdentifier","src":"5945:9:28"},{"kind":"number","nativeSrc":"5956:3:28","nodeType":"YulLiteral","src":"5956:3:28","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"5941:3:28","nodeType":"YulIdentifier","src":"5941:3:28"},"nativeSrc":"5941:19:28","nodeType":"YulFunctionCall","src":"5941:19:28"},"variableNames":[{"name":"tail","nativeSrc":"5933:4:28","nodeType":"YulIdentifier","src":"5933:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5976:9:28","nodeType":"YulIdentifier","src":"5976:9:28"},{"name":"value0","nativeSrc":"5987:6:28","nodeType":"YulIdentifier","src":"5987:6:28"}],"functionName":{"name":"mstore","nativeSrc":"5969:6:28","nodeType":"YulIdentifier","src":"5969:6:28"},"nativeSrc":"5969:25:28","nodeType":"YulFunctionCall","src":"5969:25:28"},"nativeSrc":"5969:25:28","nodeType":"YulExpressionStatement","src":"5969:25:28"},{"nativeSrc":"6003:29:28","nodeType":"YulVariableDeclaration","src":"6003:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6021:3:28","nodeType":"YulLiteral","src":"6021:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"6026:1:28","nodeType":"YulLiteral","src":"6026:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6017:3:28","nodeType":"YulIdentifier","src":"6017:3:28"},"nativeSrc":"6017:11:28","nodeType":"YulFunctionCall","src":"6017:11:28"},{"kind":"number","nativeSrc":"6030:1:28","nodeType":"YulLiteral","src":"6030:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6013:3:28","nodeType":"YulIdentifier","src":"6013:3:28"},"nativeSrc":"6013:19:28","nodeType":"YulFunctionCall","src":"6013:19:28"},"variables":[{"name":"_1","nativeSrc":"6007:2:28","nodeType":"YulTypedName","src":"6007:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6052:9:28","nodeType":"YulIdentifier","src":"6052:9:28"},{"kind":"number","nativeSrc":"6063:2:28","nodeType":"YulLiteral","src":"6063:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6048:3:28","nodeType":"YulIdentifier","src":"6048:3:28"},"nativeSrc":"6048:18:28","nodeType":"YulFunctionCall","src":"6048:18:28"},{"arguments":[{"name":"value1","nativeSrc":"6072:6:28","nodeType":"YulIdentifier","src":"6072:6:28"},{"name":"_1","nativeSrc":"6080:2:28","nodeType":"YulIdentifier","src":"6080:2:28"}],"functionName":{"name":"and","nativeSrc":"6068:3:28","nodeType":"YulIdentifier","src":"6068:3:28"},"nativeSrc":"6068:15:28","nodeType":"YulFunctionCall","src":"6068:15:28"}],"functionName":{"name":"mstore","nativeSrc":"6041:6:28","nodeType":"YulIdentifier","src":"6041:6:28"},"nativeSrc":"6041:43:28","nodeType":"YulFunctionCall","src":"6041:43:28"},"nativeSrc":"6041:43:28","nodeType":"YulExpressionStatement","src":"6041:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6104:9:28","nodeType":"YulIdentifier","src":"6104:9:28"},{"kind":"number","nativeSrc":"6115:2:28","nodeType":"YulLiteral","src":"6115:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6100:3:28","nodeType":"YulIdentifier","src":"6100:3:28"},"nativeSrc":"6100:18:28","nodeType":"YulFunctionCall","src":"6100:18:28"},{"arguments":[{"name":"value2","nativeSrc":"6124:6:28","nodeType":"YulIdentifier","src":"6124:6:28"},{"name":"_1","nativeSrc":"6132:2:28","nodeType":"YulIdentifier","src":"6132:2:28"}],"functionName":{"name":"and","nativeSrc":"6120:3:28","nodeType":"YulIdentifier","src":"6120:3:28"},"nativeSrc":"6120:15:28","nodeType":"YulFunctionCall","src":"6120:15:28"}],"functionName":{"name":"mstore","nativeSrc":"6093:6:28","nodeType":"YulIdentifier","src":"6093:6:28"},"nativeSrc":"6093:43:28","nodeType":"YulFunctionCall","src":"6093:43:28"},"nativeSrc":"6093:43:28","nodeType":"YulExpressionStatement","src":"6093:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6156:9:28","nodeType":"YulIdentifier","src":"6156:9:28"},{"kind":"number","nativeSrc":"6167:2:28","nodeType":"YulLiteral","src":"6167:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6152:3:28","nodeType":"YulIdentifier","src":"6152:3:28"},"nativeSrc":"6152:18:28","nodeType":"YulFunctionCall","src":"6152:18:28"},{"name":"value3","nativeSrc":"6172:6:28","nodeType":"YulIdentifier","src":"6172:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6145:6:28","nodeType":"YulIdentifier","src":"6145:6:28"},"nativeSrc":"6145:34:28","nodeType":"YulFunctionCall","src":"6145:34:28"},"nativeSrc":"6145:34:28","nodeType":"YulExpressionStatement","src":"6145:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6199:9:28","nodeType":"YulIdentifier","src":"6199:9:28"},{"kind":"number","nativeSrc":"6210:3:28","nodeType":"YulLiteral","src":"6210:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6195:3:28","nodeType":"YulIdentifier","src":"6195:3:28"},"nativeSrc":"6195:19:28","nodeType":"YulFunctionCall","src":"6195:19:28"},{"name":"value4","nativeSrc":"6216:6:28","nodeType":"YulIdentifier","src":"6216:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6188:6:28","nodeType":"YulIdentifier","src":"6188:6:28"},"nativeSrc":"6188:35:28","nodeType":"YulFunctionCall","src":"6188:35:28"},"nativeSrc":"6188:35:28","nodeType":"YulExpressionStatement","src":"6188:35:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6243:9:28","nodeType":"YulIdentifier","src":"6243:9:28"},{"kind":"number","nativeSrc":"6254:3:28","nodeType":"YulLiteral","src":"6254:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6239:3:28","nodeType":"YulIdentifier","src":"6239:3:28"},"nativeSrc":"6239:19:28","nodeType":"YulFunctionCall","src":"6239:19:28"},{"name":"value5","nativeSrc":"6260:6:28","nodeType":"YulIdentifier","src":"6260:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6232:6:28","nodeType":"YulIdentifier","src":"6232:6:28"},"nativeSrc":"6232:35:28","nodeType":"YulFunctionCall","src":"6232:35:28"},"nativeSrc":"6232:35:28","nodeType":"YulExpressionStatement","src":"6232:35:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"5682:591:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5852:9:28","nodeType":"YulTypedName","src":"5852:9:28","type":""},{"name":"value5","nativeSrc":"5863:6:28","nodeType":"YulTypedName","src":"5863:6:28","type":""},{"name":"value4","nativeSrc":"5871:6:28","nodeType":"YulTypedName","src":"5871:6:28","type":""},{"name":"value3","nativeSrc":"5879:6:28","nodeType":"YulTypedName","src":"5879:6:28","type":""},{"name":"value2","nativeSrc":"5887:6:28","nodeType":"YulTypedName","src":"5887:6:28","type":""},{"name":"value1","nativeSrc":"5895:6:28","nodeType":"YulTypedName","src":"5895:6:28","type":""},{"name":"value0","nativeSrc":"5903:6:28","nodeType":"YulTypedName","src":"5903:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5914:4:28","nodeType":"YulTypedName","src":"5914:4:28","type":""}],"src":"5682:591:28"},{"body":{"nativeSrc":"6407:175:28","nodeType":"YulBlock","src":"6407:175:28","statements":[{"nativeSrc":"6417:26:28","nodeType":"YulAssignment","src":"6417:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6429:9:28","nodeType":"YulIdentifier","src":"6429:9:28"},{"kind":"number","nativeSrc":"6440:2:28","nodeType":"YulLiteral","src":"6440:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6425:3:28","nodeType":"YulIdentifier","src":"6425:3:28"},"nativeSrc":"6425:18:28","nodeType":"YulFunctionCall","src":"6425:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6417:4:28","nodeType":"YulIdentifier","src":"6417:4:28"}]},{"nativeSrc":"6452:29:28","nodeType":"YulVariableDeclaration","src":"6452:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6470:3:28","nodeType":"YulLiteral","src":"6470:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"6475:1:28","nodeType":"YulLiteral","src":"6475:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6466:3:28","nodeType":"YulIdentifier","src":"6466:3:28"},"nativeSrc":"6466:11:28","nodeType":"YulFunctionCall","src":"6466:11:28"},{"kind":"number","nativeSrc":"6479:1:28","nodeType":"YulLiteral","src":"6479:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6462:3:28","nodeType":"YulIdentifier","src":"6462:3:28"},"nativeSrc":"6462:19:28","nodeType":"YulFunctionCall","src":"6462:19:28"},"variables":[{"name":"_1","nativeSrc":"6456:2:28","nodeType":"YulTypedName","src":"6456:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6497:9:28","nodeType":"YulIdentifier","src":"6497:9:28"},{"arguments":[{"name":"value0","nativeSrc":"6512:6:28","nodeType":"YulIdentifier","src":"6512:6:28"},{"name":"_1","nativeSrc":"6520:2:28","nodeType":"YulIdentifier","src":"6520:2:28"}],"functionName":{"name":"and","nativeSrc":"6508:3:28","nodeType":"YulIdentifier","src":"6508:3:28"},"nativeSrc":"6508:15:28","nodeType":"YulFunctionCall","src":"6508:15:28"}],"functionName":{"name":"mstore","nativeSrc":"6490:6:28","nodeType":"YulIdentifier","src":"6490:6:28"},"nativeSrc":"6490:34:28","nodeType":"YulFunctionCall","src":"6490:34:28"},"nativeSrc":"6490:34:28","nodeType":"YulExpressionStatement","src":"6490:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6544:9:28","nodeType":"YulIdentifier","src":"6544:9:28"},{"kind":"number","nativeSrc":"6555:2:28","nodeType":"YulLiteral","src":"6555:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6540:3:28","nodeType":"YulIdentifier","src":"6540:3:28"},"nativeSrc":"6540:18:28","nodeType":"YulFunctionCall","src":"6540:18:28"},{"arguments":[{"name":"value1","nativeSrc":"6564:6:28","nodeType":"YulIdentifier","src":"6564:6:28"},{"name":"_1","nativeSrc":"6572:2:28","nodeType":"YulIdentifier","src":"6572:2:28"}],"functionName":{"name":"and","nativeSrc":"6560:3:28","nodeType":"YulIdentifier","src":"6560:3:28"},"nativeSrc":"6560:15:28","nodeType":"YulFunctionCall","src":"6560:15:28"}],"functionName":{"name":"mstore","nativeSrc":"6533:6:28","nodeType":"YulIdentifier","src":"6533:6:28"},"nativeSrc":"6533:43:28","nodeType":"YulFunctionCall","src":"6533:43:28"},"nativeSrc":"6533:43:28","nodeType":"YulExpressionStatement","src":"6533:43:28"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"6278:304:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6368:9:28","nodeType":"YulTypedName","src":"6368:9:28","type":""},{"name":"value1","nativeSrc":"6379:6:28","nodeType":"YulTypedName","src":"6379:6:28","type":""},{"name":"value0","nativeSrc":"6387:6:28","nodeType":"YulTypedName","src":"6387:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6398:4:28","nodeType":"YulTypedName","src":"6398:4:28","type":""}],"src":"6278:304:28"},{"body":{"nativeSrc":"6744:188:28","nodeType":"YulBlock","src":"6744:188:28","statements":[{"nativeSrc":"6754:26:28","nodeType":"YulAssignment","src":"6754:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6766:9:28","nodeType":"YulIdentifier","src":"6766:9:28"},{"kind":"number","nativeSrc":"6777:2:28","nodeType":"YulLiteral","src":"6777:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6762:3:28","nodeType":"YulIdentifier","src":"6762:3:28"},"nativeSrc":"6762:18:28","nodeType":"YulFunctionCall","src":"6762:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6754:4:28","nodeType":"YulIdentifier","src":"6754:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6796:9:28","nodeType":"YulIdentifier","src":"6796:9:28"},{"arguments":[{"name":"value0","nativeSrc":"6811:6:28","nodeType":"YulIdentifier","src":"6811:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6827:3:28","nodeType":"YulLiteral","src":"6827:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"6832:1:28","nodeType":"YulLiteral","src":"6832:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6823:3:28","nodeType":"YulIdentifier","src":"6823:3:28"},"nativeSrc":"6823:11:28","nodeType":"YulFunctionCall","src":"6823:11:28"},{"kind":"number","nativeSrc":"6836:1:28","nodeType":"YulLiteral","src":"6836:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6819:3:28","nodeType":"YulIdentifier","src":"6819:3:28"},"nativeSrc":"6819:19:28","nodeType":"YulFunctionCall","src":"6819:19:28"}],"functionName":{"name":"and","nativeSrc":"6807:3:28","nodeType":"YulIdentifier","src":"6807:3:28"},"nativeSrc":"6807:32:28","nodeType":"YulFunctionCall","src":"6807:32:28"}],"functionName":{"name":"mstore","nativeSrc":"6789:6:28","nodeType":"YulIdentifier","src":"6789:6:28"},"nativeSrc":"6789:51:28","nodeType":"YulFunctionCall","src":"6789:51:28"},"nativeSrc":"6789:51:28","nodeType":"YulExpressionStatement","src":"6789:51:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6860:9:28","nodeType":"YulIdentifier","src":"6860:9:28"},{"kind":"number","nativeSrc":"6871:2:28","nodeType":"YulLiteral","src":"6871:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6856:3:28","nodeType":"YulIdentifier","src":"6856:3:28"},"nativeSrc":"6856:18:28","nodeType":"YulFunctionCall","src":"6856:18:28"},{"name":"value1","nativeSrc":"6876:6:28","nodeType":"YulIdentifier","src":"6876:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6849:6:28","nodeType":"YulIdentifier","src":"6849:6:28"},"nativeSrc":"6849:34:28","nodeType":"YulFunctionCall","src":"6849:34:28"},"nativeSrc":"6849:34:28","nodeType":"YulExpressionStatement","src":"6849:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6903:9:28","nodeType":"YulIdentifier","src":"6903:9:28"},{"kind":"number","nativeSrc":"6914:2:28","nodeType":"YulLiteral","src":"6914:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6899:3:28","nodeType":"YulIdentifier","src":"6899:3:28"},"nativeSrc":"6899:18:28","nodeType":"YulFunctionCall","src":"6899:18:28"},{"name":"value2","nativeSrc":"6919:6:28","nodeType":"YulIdentifier","src":"6919:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6892:6:28","nodeType":"YulIdentifier","src":"6892:6:28"},"nativeSrc":"6892:34:28","nodeType":"YulFunctionCall","src":"6892:34:28"},"nativeSrc":"6892:34:28","nodeType":"YulExpressionStatement","src":"6892:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6587:345:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6697:9:28","nodeType":"YulTypedName","src":"6697:9:28","type":""},{"name":"value2","nativeSrc":"6708:6:28","nodeType":"YulTypedName","src":"6708:6:28","type":""},{"name":"value1","nativeSrc":"6716:6:28","nodeType":"YulTypedName","src":"6716:6:28","type":""},{"name":"value0","nativeSrc":"6724:6:28","nodeType":"YulTypedName","src":"6724:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6735:4:28","nodeType":"YulTypedName","src":"6735:4:28","type":""}],"src":"6587:345:28"},{"body":{"nativeSrc":"6985:174:28","nodeType":"YulBlock","src":"6985:174:28","statements":[{"nativeSrc":"6995:16:28","nodeType":"YulAssignment","src":"6995:16:28","value":{"arguments":[{"name":"x","nativeSrc":"7006:1:28","nodeType":"YulIdentifier","src":"7006:1:28"},{"name":"y","nativeSrc":"7009:1:28","nodeType":"YulIdentifier","src":"7009:1:28"}],"functionName":{"name":"add","nativeSrc":"7002:3:28","nodeType":"YulIdentifier","src":"7002:3:28"},"nativeSrc":"7002:9:28","nodeType":"YulFunctionCall","src":"7002:9:28"},"variableNames":[{"name":"sum","nativeSrc":"6995:3:28","nodeType":"YulIdentifier","src":"6995:3:28"}]},{"body":{"nativeSrc":"7042:111:28","nodeType":"YulBlock","src":"7042:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7063:1:28","nodeType":"YulLiteral","src":"7063:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"7070:3:28","nodeType":"YulLiteral","src":"7070:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"7075:10:28","nodeType":"YulLiteral","src":"7075:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"7066:3:28","nodeType":"YulIdentifier","src":"7066:3:28"},"nativeSrc":"7066:20:28","nodeType":"YulFunctionCall","src":"7066:20:28"}],"functionName":{"name":"mstore","nativeSrc":"7056:6:28","nodeType":"YulIdentifier","src":"7056:6:28"},"nativeSrc":"7056:31:28","nodeType":"YulFunctionCall","src":"7056:31:28"},"nativeSrc":"7056:31:28","nodeType":"YulExpressionStatement","src":"7056:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7107:1:28","nodeType":"YulLiteral","src":"7107:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"7110:4:28","nodeType":"YulLiteral","src":"7110:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7100:6:28","nodeType":"YulIdentifier","src":"7100:6:28"},"nativeSrc":"7100:15:28","nodeType":"YulFunctionCall","src":"7100:15:28"},"nativeSrc":"7100:15:28","nodeType":"YulExpressionStatement","src":"7100:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7135:1:28","nodeType":"YulLiteral","src":"7135:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7138:4:28","nodeType":"YulLiteral","src":"7138:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7128:6:28","nodeType":"YulIdentifier","src":"7128:6:28"},"nativeSrc":"7128:15:28","nodeType":"YulFunctionCall","src":"7128:15:28"},"nativeSrc":"7128:15:28","nodeType":"YulExpressionStatement","src":"7128:15:28"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7026:1:28","nodeType":"YulIdentifier","src":"7026:1:28"},{"name":"sum","nativeSrc":"7029:3:28","nodeType":"YulIdentifier","src":"7029:3:28"}],"functionName":{"name":"gt","nativeSrc":"7023:2:28","nodeType":"YulIdentifier","src":"7023:2:28"},"nativeSrc":"7023:10:28","nodeType":"YulFunctionCall","src":"7023:10:28"},"nativeSrc":"7020:133:28","nodeType":"YulIf","src":"7020:133:28"}]},"name":"checked_add_t_uint256","nativeSrc":"6937:222:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6968:1:28","nodeType":"YulTypedName","src":"6968:1:28","type":""},{"name":"y","nativeSrc":"6971:1:28","nodeType":"YulTypedName","src":"6971:1:28","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"6977:3:28","nodeType":"YulTypedName","src":"6977:3:28","type":""}],"src":"6937:222:28"},{"body":{"nativeSrc":"7377:276:28","nodeType":"YulBlock","src":"7377:276:28","statements":[{"nativeSrc":"7387:27:28","nodeType":"YulAssignment","src":"7387:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"7399:9:28","nodeType":"YulIdentifier","src":"7399:9:28"},{"kind":"number","nativeSrc":"7410:3:28","nodeType":"YulLiteral","src":"7410:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7395:3:28","nodeType":"YulIdentifier","src":"7395:3:28"},"nativeSrc":"7395:19:28","nodeType":"YulFunctionCall","src":"7395:19:28"},"variableNames":[{"name":"tail","nativeSrc":"7387:4:28","nodeType":"YulIdentifier","src":"7387:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7430:9:28","nodeType":"YulIdentifier","src":"7430:9:28"},{"name":"value0","nativeSrc":"7441:6:28","nodeType":"YulIdentifier","src":"7441:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7423:6:28","nodeType":"YulIdentifier","src":"7423:6:28"},"nativeSrc":"7423:25:28","nodeType":"YulFunctionCall","src":"7423:25:28"},"nativeSrc":"7423:25:28","nodeType":"YulExpressionStatement","src":"7423:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7468:9:28","nodeType":"YulIdentifier","src":"7468:9:28"},{"kind":"number","nativeSrc":"7479:2:28","nodeType":"YulLiteral","src":"7479:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7464:3:28","nodeType":"YulIdentifier","src":"7464:3:28"},"nativeSrc":"7464:18:28","nodeType":"YulFunctionCall","src":"7464:18:28"},{"name":"value1","nativeSrc":"7484:6:28","nodeType":"YulIdentifier","src":"7484:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:28","nodeType":"YulIdentifier","src":"7457:6:28"},"nativeSrc":"7457:34:28","nodeType":"YulFunctionCall","src":"7457:34:28"},"nativeSrc":"7457:34:28","nodeType":"YulExpressionStatement","src":"7457:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7511:9:28","nodeType":"YulIdentifier","src":"7511:9:28"},{"kind":"number","nativeSrc":"7522:2:28","nodeType":"YulLiteral","src":"7522:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7507:3:28","nodeType":"YulIdentifier","src":"7507:3:28"},"nativeSrc":"7507:18:28","nodeType":"YulFunctionCall","src":"7507:18:28"},{"name":"value2","nativeSrc":"7527:6:28","nodeType":"YulIdentifier","src":"7527:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7500:6:28","nodeType":"YulIdentifier","src":"7500:6:28"},"nativeSrc":"7500:34:28","nodeType":"YulFunctionCall","src":"7500:34:28"},"nativeSrc":"7500:34:28","nodeType":"YulExpressionStatement","src":"7500:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7554:9:28","nodeType":"YulIdentifier","src":"7554:9:28"},{"kind":"number","nativeSrc":"7565:2:28","nodeType":"YulLiteral","src":"7565:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7550:3:28","nodeType":"YulIdentifier","src":"7550:3:28"},"nativeSrc":"7550:18:28","nodeType":"YulFunctionCall","src":"7550:18:28"},{"name":"value3","nativeSrc":"7570:6:28","nodeType":"YulIdentifier","src":"7570:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7543:6:28","nodeType":"YulIdentifier","src":"7543:6:28"},"nativeSrc":"7543:34:28","nodeType":"YulFunctionCall","src":"7543:34:28"},"nativeSrc":"7543:34:28","nodeType":"YulExpressionStatement","src":"7543:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7597:9:28","nodeType":"YulIdentifier","src":"7597:9:28"},{"kind":"number","nativeSrc":"7608:3:28","nodeType":"YulLiteral","src":"7608:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7593:3:28","nodeType":"YulIdentifier","src":"7593:3:28"},"nativeSrc":"7593:19:28","nodeType":"YulFunctionCall","src":"7593:19:28"},{"arguments":[{"name":"value4","nativeSrc":"7618:6:28","nodeType":"YulIdentifier","src":"7618:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7634:3:28","nodeType":"YulLiteral","src":"7634:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"7639:1:28","nodeType":"YulLiteral","src":"7639:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7630:3:28","nodeType":"YulIdentifier","src":"7630:3:28"},"nativeSrc":"7630:11:28","nodeType":"YulFunctionCall","src":"7630:11:28"},{"kind":"number","nativeSrc":"7643:1:28","nodeType":"YulLiteral","src":"7643:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7626:3:28","nodeType":"YulIdentifier","src":"7626:3:28"},"nativeSrc":"7626:19:28","nodeType":"YulFunctionCall","src":"7626:19:28"}],"functionName":{"name":"and","nativeSrc":"7614:3:28","nodeType":"YulIdentifier","src":"7614:3:28"},"nativeSrc":"7614:32:28","nodeType":"YulFunctionCall","src":"7614:32:28"}],"functionName":{"name":"mstore","nativeSrc":"7586:6:28","nodeType":"YulIdentifier","src":"7586:6:28"},"nativeSrc":"7586:61:28","nodeType":"YulFunctionCall","src":"7586:61:28"},"nativeSrc":"7586:61:28","nodeType":"YulExpressionStatement","src":"7586:61:28"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"7164:489:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7314:9:28","nodeType":"YulTypedName","src":"7314:9:28","type":""},{"name":"value4","nativeSrc":"7325:6:28","nodeType":"YulTypedName","src":"7325:6:28","type":""},{"name":"value3","nativeSrc":"7333:6:28","nodeType":"YulTypedName","src":"7333:6:28","type":""},{"name":"value2","nativeSrc":"7341:6:28","nodeType":"YulTypedName","src":"7341:6:28","type":""},{"name":"value1","nativeSrc":"7349:6:28","nodeType":"YulTypedName","src":"7349:6:28","type":""},{"name":"value0","nativeSrc":"7357:6:28","nodeType":"YulTypedName","src":"7357:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7368:4:28","nodeType":"YulTypedName","src":"7368:4:28","type":""}],"src":"7164:489:28"},{"body":{"nativeSrc":"7839:217:28","nodeType":"YulBlock","src":"7839:217:28","statements":[{"nativeSrc":"7849:27:28","nodeType":"YulAssignment","src":"7849:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"7861:9:28","nodeType":"YulIdentifier","src":"7861:9:28"},{"kind":"number","nativeSrc":"7872:3:28","nodeType":"YulLiteral","src":"7872:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7857:3:28","nodeType":"YulIdentifier","src":"7857:3:28"},"nativeSrc":"7857:19:28","nodeType":"YulFunctionCall","src":"7857:19:28"},"variableNames":[{"name":"tail","nativeSrc":"7849:4:28","nodeType":"YulIdentifier","src":"7849:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7892:9:28","nodeType":"YulIdentifier","src":"7892:9:28"},{"name":"value0","nativeSrc":"7903:6:28","nodeType":"YulIdentifier","src":"7903:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7885:6:28","nodeType":"YulIdentifier","src":"7885:6:28"},"nativeSrc":"7885:25:28","nodeType":"YulFunctionCall","src":"7885:25:28"},"nativeSrc":"7885:25:28","nodeType":"YulExpressionStatement","src":"7885:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7930:9:28","nodeType":"YulIdentifier","src":"7930:9:28"},{"kind":"number","nativeSrc":"7941:2:28","nodeType":"YulLiteral","src":"7941:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7926:3:28","nodeType":"YulIdentifier","src":"7926:3:28"},"nativeSrc":"7926:18:28","nodeType":"YulFunctionCall","src":"7926:18:28"},{"arguments":[{"name":"value1","nativeSrc":"7950:6:28","nodeType":"YulIdentifier","src":"7950:6:28"},{"kind":"number","nativeSrc":"7958:4:28","nodeType":"YulLiteral","src":"7958:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7946:3:28","nodeType":"YulIdentifier","src":"7946:3:28"},"nativeSrc":"7946:17:28","nodeType":"YulFunctionCall","src":"7946:17:28"}],"functionName":{"name":"mstore","nativeSrc":"7919:6:28","nodeType":"YulIdentifier","src":"7919:6:28"},"nativeSrc":"7919:45:28","nodeType":"YulFunctionCall","src":"7919:45:28"},"nativeSrc":"7919:45:28","nodeType":"YulExpressionStatement","src":"7919:45:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7984:9:28","nodeType":"YulIdentifier","src":"7984:9:28"},{"kind":"number","nativeSrc":"7995:2:28","nodeType":"YulLiteral","src":"7995:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7980:3:28","nodeType":"YulIdentifier","src":"7980:3:28"},"nativeSrc":"7980:18:28","nodeType":"YulFunctionCall","src":"7980:18:28"},{"name":"value2","nativeSrc":"8000:6:28","nodeType":"YulIdentifier","src":"8000:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7973:6:28","nodeType":"YulIdentifier","src":"7973:6:28"},"nativeSrc":"7973:34:28","nodeType":"YulFunctionCall","src":"7973:34:28"},"nativeSrc":"7973:34:28","nodeType":"YulExpressionStatement","src":"7973:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8027:9:28","nodeType":"YulIdentifier","src":"8027:9:28"},{"kind":"number","nativeSrc":"8038:2:28","nodeType":"YulLiteral","src":"8038:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8023:3:28","nodeType":"YulIdentifier","src":"8023:3:28"},"nativeSrc":"8023:18:28","nodeType":"YulFunctionCall","src":"8023:18:28"},{"name":"value3","nativeSrc":"8043:6:28","nodeType":"YulIdentifier","src":"8043:6:28"}],"functionName":{"name":"mstore","nativeSrc":"8016:6:28","nodeType":"YulIdentifier","src":"8016:6:28"},"nativeSrc":"8016:34:28","nodeType":"YulFunctionCall","src":"8016:34:28"},"nativeSrc":"8016:34:28","nodeType":"YulExpressionStatement","src":"8016:34:28"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"7658:398:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7784:9:28","nodeType":"YulTypedName","src":"7784:9:28","type":""},{"name":"value3","nativeSrc":"7795:6:28","nodeType":"YulTypedName","src":"7795:6:28","type":""},{"name":"value2","nativeSrc":"7803:6:28","nodeType":"YulTypedName","src":"7803:6:28","type":""},{"name":"value1","nativeSrc":"7811:6:28","nodeType":"YulTypedName","src":"7811:6:28","type":""},{"name":"value0","nativeSrc":"7819:6:28","nodeType":"YulTypedName","src":"7819:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7830:4:28","nodeType":"YulTypedName","src":"7830:4:28","type":""}],"src":"7658:398:28"},{"body":{"nativeSrc":"8093:95:28","nodeType":"YulBlock","src":"8093:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8110:1:28","nodeType":"YulLiteral","src":"8110:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"8117:3:28","nodeType":"YulLiteral","src":"8117:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"8122:10:28","nodeType":"YulLiteral","src":"8122:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"8113:3:28","nodeType":"YulIdentifier","src":"8113:3:28"},"nativeSrc":"8113:20:28","nodeType":"YulFunctionCall","src":"8113:20:28"}],"functionName":{"name":"mstore","nativeSrc":"8103:6:28","nodeType":"YulIdentifier","src":"8103:6:28"},"nativeSrc":"8103:31:28","nodeType":"YulFunctionCall","src":"8103:31:28"},"nativeSrc":"8103:31:28","nodeType":"YulExpressionStatement","src":"8103:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8150:1:28","nodeType":"YulLiteral","src":"8150:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"8153:4:28","nodeType":"YulLiteral","src":"8153:4:28","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"8143:6:28","nodeType":"YulIdentifier","src":"8143:6:28"},"nativeSrc":"8143:15:28","nodeType":"YulFunctionCall","src":"8143:15:28"},"nativeSrc":"8143:15:28","nodeType":"YulExpressionStatement","src":"8143:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8174:1:28","nodeType":"YulLiteral","src":"8174:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"8177:4:28","nodeType":"YulLiteral","src":"8177:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8167:6:28","nodeType":"YulIdentifier","src":"8167:6:28"},"nativeSrc":"8167:15:28","nodeType":"YulFunctionCall","src":"8167:15:28"},"nativeSrc":"8167:15:28","nodeType":"YulExpressionStatement","src":"8167:15:28"}]},"name":"panic_error_0x21","nativeSrc":"8061:127:28","nodeType":"YulFunctionDefinition","src":"8061:127:28"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_a0a78b37e49b508655b2a997562878feee45ff4a9a04a66d72e46d861d0a1a16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"amount must be less than 100\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3677":[{"length":32,"start":1855}],"3679":[{"length":32,"start":1813}],"3681":[{"length":32,"start":1771}],"3683":[{"length":32,"start":1936}],"3685":[{"length":32,"start":1976}],"3688":[{"length":32,"start":2245}],"3691":[{"length":32,"start":2290}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a257806395d89b411161007157806395d89b411461021c578063a9059cbb14610224578063d505accf14610237578063dd62ed3e1461024a578063f2fde38b1461028357600080fd5b8063715018a6146101cb5780637ecebe00146101d357806384b0196e146101e65780638da5cb5b1461020157600080fd5b8063313ce567116100de578063313ce567146101765780633644e5151461018557806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610296565b6040516101259190610e52565b60405180910390f35b61014161013c366004610e88565b610328565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610eb2565b610342565b60405160128152602001610125565b610155610366565b6101a061019b366004610e88565b610375565b005b6101556101b0366004610eee565b6001600160a01b031660009081526020819052604090205490565b6101a06103e1565b6101556101e1366004610eee565b6103f5565b6101ee610413565b6040516101259796959493929190610f09565b6005546040516001600160a01b039091168152602001610125565b610118610459565b610141610232366004610e88565b610468565b6101a0610245366004610fa2565b610476565b610155610258366004611015565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101a0610291366004610eee565b6105b0565b6060600380546102a590611048565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190611048565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050905090565b6000336103368185856105ee565b60019150505b92915050565b600033610350858285610600565b61035b85858561067f565b506001949350505050565b60006103706106de565b905090565b68056bc75e2d631000008111156103d35760405162461bcd60e51b815260206004820152601c60248201527f616d6f756e74206d757374206265206c657373207468616e203130300000000060448201526064015b60405180910390fd5b6103dd8282610809565b5050565b6103e961083f565b6103f3600061086c565b565b6001600160a01b03811660009081526008602052604081205461033c565b6000606080600080600060606104276108be565b61042f6108eb565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102a590611048565b60003361033681858561067f565b8342111561049a5760405163313c898160e11b8152600481018590526024016103ca565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886104e78c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061054282610918565b9050600061055282878787610945565b9050896001600160a01b0316816001600160a01b031614610599576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016103ca565b6105a48a8a8a6105ee565b50505050505050505050565b6105b861083f565b6001600160a01b0381166105e257604051631e4fbdf760e01b8152600060048201526024016103ca565b6105eb8161086c565b50565b6105fb8383836001610973565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610679578181101561066a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103ca565b61067984848484036000610973565b50505050565b6001600160a01b0383166106a957604051634b637e8f60e11b8152600060048201526024016103ca565b6001600160a01b0382166106d35760405163ec442f0560e01b8152600060048201526024016103ca565b6105fb838383610a48565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561073757507f000000000000000000000000000000000000000000000000000000000000000046145b1561076157507f000000000000000000000000000000000000000000000000000000000000000090565b610370604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b0382166108335760405163ec442f0560e01b8152600060048201526024016103ca565b6103dd60008383610a48565b6005546001600160a01b031633146103f35760405163118cdaa760e01b81523360048201526024016103ca565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606103707f00000000000000000000000000000000000000000000000000000000000000006006610b72565b60606103707f00000000000000000000000000000000000000000000000000000000000000006007610b72565b600061033c6109256106de565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061095788888888610c1d565b9250925092506109678282610cec565b50909695505050505050565b6001600160a01b03841661099d5760405163e602df0560e01b8152600060048201526024016103ca565b6001600160a01b0383166109c757604051634a1406b160e11b8152600060048201526024016103ca565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561067957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a3a91815260200190565b60405180910390a350505050565b6001600160a01b038316610a73578060026000828254610a689190611082565b90915550610ae59050565b6001600160a01b03831660009081526020819052604090205481811015610ac65760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103ca565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610b0157600280548290039055610b20565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b6591815260200190565b60405180910390a3505050565b606060ff8314610b8c57610b8583610da5565b905061033c565b818054610b9890611048565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc490611048565b8015610c115780601f10610be657610100808354040283529160200191610c11565b820191906000526020600020905b815481529060010190602001808311610bf457829003601f168201915b5050505050905061033c565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610c585750600091506003905082610ce2565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610cac573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610cd857506000925060019150829050610ce2565b9250600091508190505b9450945094915050565b6000826003811115610d0057610d006110a3565b03610d09575050565b6001826003811115610d1d57610d1d6110a3565b03610d3b5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610d4f57610d4f6110a3565b03610d705760405163fce698f760e01b8152600481018290526024016103ca565b6003826003811115610d8457610d846110a3565b036103dd576040516335e2f38360e21b8152600481018290526024016103ca565b60606000610db283610de4565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561033c57604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015610e3257602081850181015186830182015201610e16565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e656020830184610e0c565b9392505050565b80356001600160a01b0381168114610e8357600080fd5b919050565b60008060408385031215610e9b57600080fd5b610ea483610e6c565b946020939093013593505050565b600080600060608486031215610ec757600080fd5b610ed084610e6c565b9250610ede60208501610e6c565b9150604084013590509250925092565b600060208284031215610f0057600080fd5b610e6582610e6c565b60ff60f81b881681526000602060e06020840152610f2a60e084018a610e0c565b8381036040850152610f3c818a610e0c565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015610f9057835183529284019291840191600101610f74565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215610fbd57600080fd5b610fc688610e6c565b9650610fd460208901610e6c565b95506040880135945060608801359350608088013560ff81168114610ff857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561102857600080fd5b61103183610e6c565b915061103f60208401610e6c565b90509250929050565b600181811c9082168061105c57607f821691505b60208210810361107c57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561033c57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212206a21559b41bd1cf93f729a1799043bbf053a3f05bec5666985a079d34ba6291764736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xE88 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xE88 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x3E1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xE88 JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A5 SWAP1 PUSH2 0x1048 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D1 SWAP1 PUSH2 0x1048 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x301 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x336 DUP2 DUP6 DUP6 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x350 DUP6 DUP3 DUP6 PUSH2 0x600 JUMP JUMPDEST PUSH2 0x35B DUP6 DUP6 DUP6 PUSH2 0x67F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x370 PUSH2 0x6DE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 GT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616D6F756E74206D757374206265206C657373207468616E2031303000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3DD DUP3 DUP3 PUSH2 0x809 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x3F3 PUSH1 0x0 PUSH2 0x86C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x427 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x42F PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A5 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x336 DUP2 DUP6 DUP6 PUSH2 0x67F JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x49A JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x4E7 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x542 DUP3 PUSH2 0x918 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x552 DUP3 DUP8 DUP8 DUP8 PUSH2 0x945 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x5A4 DUP11 DUP11 DUP11 PUSH2 0x5EE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x5EB DUP2 PUSH2 0x86C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5FB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x973 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x679 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x679 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x973 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x5FB DUP4 DUP4 DUP4 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x737 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x761 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x370 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x0 DUP4 DUP4 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x370 PUSH32 0x0 PUSH1 0x6 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x370 PUSH32 0x0 PUSH1 0x7 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C PUSH2 0x925 PUSH2 0x6DE JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x957 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC1D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x967 DUP3 DUP3 PUSH2 0xCEC JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x679 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA3A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA73 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xAE5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB01 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB65 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xB8C JUMPI PUSH2 0xB85 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP1 POP PUSH2 0x33C JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xB98 SWAP1 PUSH2 0x1048 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBC4 SWAP1 PUSH2 0x1048 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC11 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBE6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC11 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBF4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xC58 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCD8 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xCE2 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD00 JUMPI PUSH2 0xD00 PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD09 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1D PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4F PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD70 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD84 PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0x3DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xDB2 DUP4 PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE32 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE16 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE65 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE0C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA4 DUP4 PUSH2 0xE6C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED0 DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 POP PUSH2 0xEDE PUSH1 0x20 DUP6 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP3 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xF2A PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xE0C JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xF3C DUP2 DUP11 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF90 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF74 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xFBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC6 DUP9 PUSH2 0xE6C JUMP JUMPDEST SWAP7 POP PUSH2 0xFD4 PUSH1 0x20 DUP10 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1031 DUP4 PUSH2 0xE6C JUMP JUMPDEST SWAP2 POP PUSH2 0x103F PUSH1 0x20 DUP5 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x105C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x107C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x33C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x21559B41BD1CF93F729A17 SWAP10 DIV EXTCODESIZE 0xBF SDIV GASPRICE EXTCODEHASH SDIV 0xBE 0xC5 PUSH7 0x6985A079D34BA6 0x29 OR PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"298:378:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:28;;1262:22;1244:41;;1232:2;1217:18;3998:186:6;1104:187:28;2849:97:6;2927:12;;2849:97;;;1442:25:28;;;1430:2;1415:18;2849:97:6;1296:177:28;4776:244:6;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;1953:36:28;;1941:2;1926:18;2707:82:6;1811:184:28;2659:112:8;;;:::i;512:161:27:-;;;;;;:::i;:::-;;:::i;:::-;;3004:116:6;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:6;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;:::i;2409:143:8:-;;;;;;:::i;:::-;;:::i;5144:557:19:-;;;:::i;:::-;;;;;;;;;;;;;:::i;1638:85:0:-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;3783:51:28;;3771:2;3756:18;1638:85:0;3637:203:28;1981:93:6;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;1683:672:8:-;;;;;;:::i;:::-;;:::i;3551:140:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:6;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;2543:215:0;;;;;;:::i;:::-;;:::i;1779:89:6:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:12;4125:31:6;735:10:12;4141:7:6;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:12;4919:37:6;4935:4;735:10:12;4950:5:6;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:6;;4776:244;-1:-1:-1;;;;4776:244:6:o;2659:112:8:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;512:161:27:-;590:14;580:6;:24;;572:65;;;;-1:-1:-1;;;572:65:27;;5395:2:28;572:65:27;;;5377:21:28;5434:2;5414:18;;;5407:30;5473;5453:18;;;5446:58;5521:18;;572:65:27;;;;;;;;;648:17;654:2;658:6;648:5;:17::i;:::-;512:161;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2409:143:8:-;-1:-1:-1;;;;;624:14:13;;2500:7:8;624:14:13;;;:7;:14;;;;;;2526:19:8;538:107:13;5144:557:19;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:19;;;-1:-1:-1;5482:212:19;;-1:-1:-1;5590:13:19;;-1:-1:-1;5625:4:19;;-1:-1:-1;5652:1:19;-1:-1:-1;5668:16:19;-1:-1:-1;5482:212:19;-1:-1:-1;5144:557:19:o;1981:93:6:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:12;3438:27:6;735:10:12;3455:2:6;3459:5;3438:9;:27::i;1683:672:8:-;1904:8;1886:15;:26;1882:97;;;1935:33;;-1:-1:-1;;;1935:33:8;;;;;1442:25:28;;;1415:18;;1935:33:8;1296:177:28;1882:97:8;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;-1:-1:-1;;;;;1121:14:13;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2071:16:8;2020:78;;;;;;5969:25:28;;;;-1:-1:-1;;;;;6068:15:28;;;6048:18;;;6041:43;6120:15;;;;6100:18;;;6093:43;6152:18;;;6145:34;6195:19;;;6188:35;6239:19;;;6232:35;;;5941:19;;2020:78:8;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;-1:-1:-1;;;;;2223:15:8;:6;-1:-1:-1;;;;;2223:15:8;;2219:88;;2261:35;;-1:-1:-1;;;2261:35:8;;-1:-1:-1;;;;;6508:15:28;;;2261:35:8;;;6490:34:28;6560:15;;6540:18;;;6533:43;6425:18;;2261:35:8;6278:304:28;2219:88:8;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3783:51:28::0;3756:18;;2672:31:0::1;3637:203:28::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8726:128:6:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:6;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:6;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:6;;-1:-1:-1;;;;;6807:32:28;;10687:60:6;;;6789:51:28;6856:18;;;6849:34;;;6899:18;;;6892:34;;;6762:18;;10687:60:6;6587:345:28;10632:130:6;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:6;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:6;;5544:1;5517:30;;;3783:51:28;3756:18;;5517:30:6;3637:203:28;5472:86:6;-1:-1:-1;;;;;5571:16:6;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:6;;5639:1;5610:32;;;3783:51:28;3756:18;;5610:32:6;3637:203:28;5567:86:6;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;3845:262:19:-;3898:7;3929:4;-1:-1:-1;;;;;3938:11:19;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:19;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;7423:25:28;4226:11:19;7464:18:28;;;7457:34;;;;4239:14:19;7507:18:28;;;7500:34;4255:13:19;7550:18:28;;;7543:34;4278:4:19;7593:19:28;;;7586:61;4168:7:19;;7395:19:28;;4204:80:19;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;7458:208:6;-1:-1:-1;;;;;7528:21:6;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:6;;7601:1;7572:32;;;3783:51:28;3756:18;;7572:32:6;3637:203:28;7524:91:6;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:12;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:12;1901:40:0;;;3783:51:28;3756:18;;1901:40:0;3637:203:28;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;6021:126:19:-;6067:13;6099:41;:5;6126:13;6099:26;:41::i;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;4917:176::-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3501:4:20;3495:11;-1:-1:-1;;;3519:23:20;;3571:4;3562:14;;3555:39;;;;3623:4;3614:14;;3607:34;3679:4;3664:20;;;3326:374;6887:260:18;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:18;;6887:260;-1:-1:-1;;;;;;6887:260:18:o;9701:432:6:-;-1:-1:-1;;;;;9813:19:6;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:6;;9884:1;9855:32;;;3783:51:28;3756:18;;9855:32:6;3637:203:28;9809:89:6;-1:-1:-1;;;;;9911:21:6;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:6;;9983:1;9955:31;;;3783:51:28;3756:18;;9955:31:6;3637:203:28;9907:90:6;-1:-1:-1;;;;;10006:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:6;10094:5;-1:-1:-1;;;;;10085:31:6;;10110:5;10085:31;;;;1442:25:28;;1430:2;1415:18;;1296:177;10085:31:6;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:6;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:6;;-1:-1:-1;6093:540:6;;-1:-1:-1;;;;;6307:15:6;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:6;;-1:-1:-1;;;;;6807:32:28;;6386:50:6;;;6789:51:28;6856:18;;;6849:34;;;6899:18;;;6892:34;;;6762:18;;6386:50:6;6587:345:28;6336:115:6;-1:-1:-1;;;;;6571:15:6;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:6;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:6;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:6;7092:4;-1:-1:-1;;;;;7083:25:6;;7102:5;7083:25;;;;1442::28;;1430:2;1415:18;;1296:177;7083:25:6;;;;;;;;6008:1107;;;:::o;3358:267:15:-;3452:13;1390:66;3481:46;;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:18;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:18;;-1:-1:-1;6385:30:18;;-1:-1:-1;6417:1:18;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;7885:25:28;;;7958:4;7946:17;;7926:18;;;7919:45;;;;7980:18;;;7973:34;;;8023:18;;;8016:34;;;6541:24:18;;7857:19:28;;6541:24:18;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:18;;-1:-1:-1;;6541:24:18;;;-1:-1:-1;;;;;;;6579:20:18;;6575:113;;-1:-1:-1;6631:1:18;;-1:-1:-1;6635:29:18;;-1:-1:-1;6631:1:18;;-1:-1:-1;6615:62:18;;6575:113;6706:6;-1:-1:-1;6714:20:18;;-1:-1:-1;6714:20:18;;-1:-1:-1;5203:1551:18;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:18;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:18;;;;;1442:25:28;;;1415:18;;7634:46:18;1296:177:28;7563:243:18;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:18;;;;;1442:25:28;;;1415:18;;7763:32:18;1296:177:28;2078:378:15;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:15;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:15;;;-1:-1:-1;2408:4:15;2399:14;;2392:28;;;;-1:-1:-1;2363:16:15;2078:378::o;2528:245::-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:15;;;;;;;;;;;14:423:28;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:28:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:28;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:28:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2182:186::-;2241:6;2294:2;2282:9;2273:7;2269:23;2265:32;2262:52;;;2310:1;2307;2300:12;2262:52;2333:29;2352:9;2333:29;:::i;2373:1259::-;2779:3;2774;2770:13;2762:6;2758:26;2747:9;2740:45;2721:4;2804:2;2842:3;2837:2;2826:9;2822:18;2815:31;2869:46;2910:3;2899:9;2895:19;2887:6;2869:46;:::i;:::-;2963:9;2955:6;2951:22;2946:2;2935:9;2931:18;2924:50;2997:33;3023:6;3015;2997:33;:::i;:::-;3061:2;3046:18;;3039:34;;;-1:-1:-1;;;;;3110:32:28;;3104:3;3089:19;;3082:61;3130:3;3159:19;;3152:35;;;3224:22;;;3218:3;3203:19;;3196:51;3296:13;;3318:22;;;3368:2;3394:15;;;;-1:-1:-1;3356:15:28;;;;-1:-1:-1;3437:169:28;3451:6;3448:1;3445:13;3437:169;;;3512:13;;3500:26;;3581:15;;;;3546:12;;;;3473:1;3466:9;3437:169;;;-1:-1:-1;3623:3:28;;2373:1259;-1:-1:-1;;;;;;;;;;;;2373:1259:28:o;3845:693::-;3956:6;3964;3972;3980;3988;3996;4004;4057:3;4045:9;4036:7;4032:23;4028:33;4025:53;;;4074:1;4071;4064:12;4025:53;4097:29;4116:9;4097:29;:::i;:::-;4087:39;;4145:38;4179:2;4168:9;4164:18;4145:38;:::i;:::-;4135:48;;4230:2;4219:9;4215:18;4202:32;4192:42;;4281:2;4270:9;4266:18;4253:32;4243:42;;4335:3;4324:9;4320:19;4307:33;4380:4;4373:5;4369:16;4362:5;4359:27;4349:55;;4400:1;4397;4390:12;4349:55;3845:693;;;;-1:-1:-1;3845:693:28;;;;4423:5;4475:3;4460:19;;4447:33;;-1:-1:-1;4527:3:28;4512:19;;;4499:33;;3845:693;-1:-1:-1;;3845:693:28:o;4543:260::-;4611:6;4619;4672:2;4660:9;4651:7;4647:23;4643:32;4640:52;;;4688:1;4685;4678:12;4640:52;4711:29;4730:9;4711:29;:::i;:::-;4701:39;;4759:38;4793:2;4782:9;4778:18;4759:38;:::i;:::-;4749:48;;4543:260;;;;;:::o;4808:380::-;4887:1;4883:12;;;;4930;;;4951:61;;5005:4;4997:6;4993:17;4983:27;;4951:61;5058:2;5050:6;5047:14;5027:18;5024:38;5021:161;;5104:10;5099:3;5095:20;5092:1;5085:31;5139:4;5136:1;5129:15;5167:4;5164:1;5157:15;5021:161;;4808:380;;;:::o;6937:222::-;7002:9;;;7023:10;;;7020:133;;;7075:10;7070:3;7066:20;7063:1;7056:31;7110:4;7107:1;7100:15;7138:4;7135:1;7128:15;8061:127;8122:10;8117:3;8113:20;8110:1;8103:31;8153:4;8150:1;8143:15;8177:4;8174:1;8167:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingToken.sol\":\"StakingToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/StakingToken.sol\":{\"keccak256\":\"0x2f6014c7eff9795baa8df499e14d516201b960375604f225efebab67759ed5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4abcdbf00352672f2b5fc808f278762bbc23abef5e56f0aadcd6529cd26ae1b5\",\"dweb:/ipfs/QmZLWaKp6oR1FC2aQxxkcfjwAwFxRC4Ucjbe6snkHdCrdv\"]}},\"version\":1}"}}}}}